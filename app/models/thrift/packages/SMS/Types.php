<?php
namespace SMS;

/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
use Thrift\Base\TBase;
use Thrift\Type\TType;
use Thrift\Type\TMessageType;
use Thrift\Exception\TException;
use Thrift\Exception\TProtocolException;
use Thrift\Protocol\TProtocol;
use Thrift\Protocol\TBinaryProtocolAccelerated;
use Thrift\Exception\TApplicationException;


final class MessagerId {
  const DODOCA = 6;
  const CTC = 7;
  const YUNPIAN = 8;
  static public $__names = array(
    6 => 'DODOCA',
    7 => 'CTC',
    8 => 'YUNPIAN',
  );
}

final class SendStatus {
  const UNSENT = 0;
  const PROCESSED = 1;
  const SUCCESSED = 2;
  const FAILED = 3;
  static public $__names = array(
    0 => 'UNSENT',
    1 => 'PROCESSED',
    2 => 'SUCCESSED',
    3 => 'FAILED',
  );
}

final class ReadStatus {
  const NOT_READ = 0;
  const IS_READ = 1;
  static public $__names = array(
    0 => 'NOT_READ',
    1 => 'IS_READ',
  );
}

final class AiStatus {
  const NOT_READ = 0;
  const AUTO_CONFIRMED = 1;
  const ORDER_NOT_FOUND = 2;
  const UNIDENTIFIED = 3;
  static public $__names = array(
    0 => 'NOT_READ',
    1 => 'AUTO_CONFIRMED',
    2 => 'ORDER_NOT_FOUND',
    3 => 'UNIDENTIFIED',
  );
}

final class ReceiveDistributeStatus {
  const UNDISTRIBUTED = 0;
  const DISTRIBUTED_TO_VACUUM = 1;
  const DISTRIBUTED_TO_ADMIN = 2;
  static public $__names = array(
    0 => 'UNDISTRIBUTED',
    1 => 'DISTRIBUTED_TO_VACUUM',
    2 => 'DISTRIBUTED_TO_ADMIN',
  );
}

final class ReportStatus {
  const SUCCESSED = 0;
  const FAILED = 1;
  static public $__names = array(
    0 => 'SUCCESSED',
    1 => 'FAILED',
  );
}

final class PushedContentStatus {
  const UNPROCESSED = 0;
  const PROCESSED = 1;
  const FAILED = 2;
  static public $__names = array(
    0 => 'UNPROCESSED',
    1 => 'PROCESSED',
    2 => 'FAILED',
  );
}

final class PushedContentType {
  const RECEIVE = 0;
  const REPORT = 1;
  static public $__names = array(
    0 => 'RECEIVE',
    1 => 'REPORT',
  );
}

final class SmsServiceProvider {
  const CMCC = 1;
  const CU = 2;
  const CT = 3;
  static public $__names = array(
    1 => 'CMCC',
    2 => 'CU',
    3 => 'CT',
  );
}

final class SMSErrorCode {
  const UNKNOWN_ERROR = 0;
  const INVALID_MESSAGER_ID = 1;
  const INVALID_MOBILE = 2;
  const INVALID_RESTAURANT_MOBILE = 3;
  const INVALID_RESTAURANT_NUMBER = 4;
  const SMS_ADMIN_NOT_FOUND = 5;
  const SMS_PUSHED_CONTENT_NOT_FOUND = 6;
  const SMS_RECEIVE_NOT_FOUND = 7;
  const SMS_SEND_NOT_FOUND = 8;
  const SMS_VOICE_SEND_NOT_FOUND = 9;
  const VMS_OUT_OF_LIMIT = 10;
  const MOBILE_VALIDATION_NOT_REPEAT = 11;
  const MOBILE_VALIDATION_TIMEOUT = 12;
  const MOBILE_VALIDATION_FAIL = 13;
  const VOICE_CODE_LENGTH_FAIL = 14;
  const EOS_CLIENT_ERROR = 15;
  const ERS_CLIENT_ERROR = 16;
  const EUS_CLIENT_ERROR = 17;
  const DATABASE_ERROR = 18;
  const MESSAGER_ERROR = 19;
  const SMS_PUSHED_CONTENT_INVALID = 20;
  const SMS_MESSENGER_ERROR = 21;
  static public $__names = array(
    0 => 'UNKNOWN_ERROR',
    1 => 'INVALID_MESSAGER_ID',
    2 => 'INVALID_MOBILE',
    3 => 'INVALID_RESTAURANT_MOBILE',
    4 => 'INVALID_RESTAURANT_NUMBER',
    5 => 'SMS_ADMIN_NOT_FOUND',
    6 => 'SMS_PUSHED_CONTENT_NOT_FOUND',
    7 => 'SMS_RECEIVE_NOT_FOUND',
    8 => 'SMS_SEND_NOT_FOUND',
    9 => 'SMS_VOICE_SEND_NOT_FOUND',
    10 => 'VMS_OUT_OF_LIMIT',
    11 => 'MOBILE_VALIDATION_NOT_REPEAT',
    12 => 'MOBILE_VALIDATION_TIMEOUT',
    13 => 'MOBILE_VALIDATION_FAIL',
    14 => 'VOICE_CODE_LENGTH_FAIL',
    15 => 'EOS_CLIENT_ERROR',
    16 => 'ERS_CLIENT_ERROR',
    17 => 'EUS_CLIENT_ERROR',
    18 => 'DATABASE_ERROR',
    19 => 'MESSAGER_ERROR',
    20 => 'SMS_PUSHED_CONTENT_INVALID',
    21 => 'SMS_MESSENGER_ERROR',
  );
}

class TSMSSend extends TBase {
  static $_TSPEC;

  public $id = null;
  public $messager_id = null;
  public $mobile = null;
  public $content = null;
  public $status = null;
  public $created_at = null;
  public $rrid = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'messager_id',
          'type' => TType::I32,
          ),
        3 => array(
          'var' => 'mobile',
          'type' => TType::I64,
          ),
        4 => array(
          'var' => 'content',
          'type' => TType::STRING,
          ),
        5 => array(
          'var' => 'status',
          'type' => TType::I32,
          ),
        6 => array(
          'var' => 'created_at',
          'type' => TType::I64,
          ),
        7 => array(
          'var' => 'rrid',
          'type' => TType::STRING,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TSMSSend';
  }

  public function read($input)
  {
    return $this->_read('TSMSSend', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TSMSSend', self::$_TSPEC, $output);
  }
}

class TSMSVerifyCode extends TBase {
  static $_TSPEC;

  public $id = null;
  public $mobile = null;
  public $code = null;
  public $is_valid = null;
  public $created_at = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'mobile',
          'type' => TType::I64,
          ),
        3 => array(
          'var' => 'code',
          'type' => TType::STRING,
          ),
        4 => array(
          'var' => 'is_valid',
          'type' => TType::BOOL,
          ),
        5 => array(
          'var' => 'created_at',
          'type' => TType::I64,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TSMSVerifyCode';
  }

  public function read($input)
  {
    return $this->_read('TSMSVerifyCode', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TSMSVerifyCode', self::$_TSPEC, $output);
  }
}

class TSMSReceive extends TBase {
  static $_TSPEC;

  public $id = null;
  public $messager_id = null;
  public $mobile = null;
  public $content = null;
  public $created_at = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'messager_id',
          'type' => TType::I32,
          ),
        3 => array(
          'var' => 'mobile',
          'type' => TType::I64,
          ),
        4 => array(
          'var' => 'content',
          'type' => TType::STRING,
          ),
        5 => array(
          'var' => 'created_at',
          'type' => TType::I64,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TSMSReceive';
  }

  public function read($input)
  {
    return $this->_read('TSMSReceive', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TSMSReceive', self::$_TSPEC, $output);
  }
}

class TSMSReport extends TBase {
  static $_TSPEC;

  public $id = null;
  public $messager_id = null;
  public $mobile = null;
  public $status = null;
  public $rrid = null;
  public $created_at = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'messager_id',
          'type' => TType::I32,
          ),
        3 => array(
          'var' => 'mobile',
          'type' => TType::I64,
          ),
        4 => array(
          'var' => 'status',
          'type' => TType::I32,
          ),
        5 => array(
          'var' => 'rrid',
          'type' => TType::STRING,
          ),
        6 => array(
          'var' => 'created_at',
          'type' => TType::I64,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TSMSReport';
  }

  public function read($input)
  {
    return $this->_read('TSMSReport', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TSMSReport', self::$_TSPEC, $output);
  }
}

class TSMSAdmin extends TBase {
  static $_TSPEC;

  public $id = null;
  public $order_id = null;
  public $restaurant_id = null;
  public $mobile = null;
  public $admin_id = null;
  public $read_status = null;
  public $created_at = null;
  public $sms_send_id = null;
  public $sms_receive_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'order_id',
          'type' => TType::I64,
          ),
        3 => array(
          'var' => 'restaurant_id',
          'type' => TType::I32,
          ),
        4 => array(
          'var' => 'mobile',
          'type' => TType::I64,
          ),
        5 => array(
          'var' => 'admin_id',
          'type' => TType::I32,
          ),
        6 => array(
          'var' => 'read_status',
          'type' => TType::I32,
          ),
        7 => array(
          'var' => 'created_at',
          'type' => TType::I64,
          ),
        8 => array(
          'var' => 'sms_send_id',
          'type' => TType::I32,
          ),
        9 => array(
          'var' => 'sms_receive_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TSMSAdmin';
  }

  public function read($input)
  {
    return $this->_read('TSMSAdmin', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TSMSAdmin', self::$_TSPEC, $output);
  }
}

class TSMSAdminQuery extends TBase {
  static $_TSPEC;

  public $restaurant_id = null;
  public $mobile = null;
  public $admin_id = null;
  public $read_status = null;
  public $from_time = null;
  public $to_time = null;
  public $limit = null;
  public $offset = null;
  public $query_fields = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'restaurant_id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'mobile',
          'type' => TType::I64,
          ),
        3 => array(
          'var' => 'admin_id',
          'type' => TType::I32,
          ),
        4 => array(
          'var' => 'read_status',
          'type' => TType::I32,
          ),
        5 => array(
          'var' => 'from_time',
          'type' => TType::I64,
          ),
        6 => array(
          'var' => 'to_time',
          'type' => TType::I64,
          ),
        7 => array(
          'var' => 'limit',
          'type' => TType::I32,
          ),
        8 => array(
          'var' => 'offset',
          'type' => TType::I32,
          ),
        9 => array(
          'var' => 'query_fields',
          'type' => TType::LST,
          'etype' => TType::STRING,
          'elem' => array(
            'type' => TType::STRING,
            ),
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TSMSAdminQuery';
  }

  public function read($input)
  {
    return $this->_read('TSMSAdminQuery', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TSMSAdminQuery', self::$_TSPEC, $output);
  }
}

class SMSUserException extends TException {
  static $_TSPEC;

  public $error_code = null;
  public $error_name = null;
  public $message = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'error_code',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'error_name',
          'type' => TType::STRING,
          ),
        3 => array(
          'var' => 'message',
          'type' => TType::STRING,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'SMSUserException';
  }

  public function read($input)
  {
    return $this->_read('SMSUserException', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('SMSUserException', self::$_TSPEC, $output);
  }
}

class SMSSystemException extends TException {
  static $_TSPEC;

  public $error_code = null;
  public $error_name = null;
  public $message = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'error_code',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'error_name',
          'type' => TType::STRING,
          ),
        3 => array(
          'var' => 'message',
          'type' => TType::STRING,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'SMSSystemException';
  }

  public function read($input)
  {
    return $this->_read('SMSSystemException', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('SMSSystemException', self::$_TSPEC, $output);
  }
}

class SMSUnknownException extends TException {
  static $_TSPEC;

  public $error_code = null;
  public $error_name = null;
  public $message = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'error_code',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'error_name',
          'type' => TType::STRING,
          ),
        3 => array(
          'var' => 'message',
          'type' => TType::STRING,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'SMSUnknownException';
  }

  public function read($input)
  {
    return $this->_read('SMSUnknownException', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('SMSUnknownException', self::$_TSPEC, $output);
  }
}

$GLOBALS['sms_CONSTANTS']['DEFAULT_LIST_SIZE'] = 20;

$GLOBALS['sms_CONSTANTS']['MAX_LIST_SIZE'] = 100;


