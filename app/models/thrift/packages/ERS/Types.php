<?php
namespace ERS;

/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
use Thrift\Base\TBase;
use Thrift\Type\TType;
use Thrift\Type\TMessageType;
use Thrift\Exception\TException;
use Thrift\Exception\TProtocolException;
use Thrift\Protocol\TProtocol;
use Thrift\Protocol\TBinaryProtocolAccelerated;
use Thrift\Exception\TApplicationException;


final class RestaurantConst {
  const BUSY_LEVEL_FREE = 0;
  const BUSY_LEVEL_CLOSED = 2;
  const BUSY_LEVEL_NETWORK_UNSTABLE = 3;
  const BUSY_LEVEL_HOLIDAY = 4;
  const TOTAL_STATUS_OPEN = 1;
  const TOTAL_STATUS_CLOSED = 2;
  const TOTAL_STATUS_NETWORK_UNSTABLE = 3;
  const TOTAL_STATUS_RESTING = 4;
  const TOTAL_STATUS_BOOKONLY = 5;
  const TOTAL_STATUS_ORDER_BY_PHONE = 6;
  const TOTAL_STATUS_HOLIDAY = 7;
  const ORDER_MODE_PHONE = 1;
  const ORDER_MODE_ELEME = 2;
  const ORDER_MODE_NETWORK = 3;
  const ORDER_MODE_NAPOS_WEB = 3;
  const ORDER_MODE_WIRELESS_PRINTER = 4;
  const ORDER_MODE_TPD = 5;
  const ORDER_MODE_OPENAPI = 6;
  const ORDER_MODE_TPD_ELEME = 7;
  const ORDER_MODE_TPD_NAPOS = 8;
  const ORDER_MODE_NAPOS_MOBILE = 9;
  const ORDER_MODE_NAPOS_MOBILE_ANDROID = 9;
  const ORDER_MODE_NAPOS_MOBILE_IOS = 10;
  const COME_FROM_OFFLINE = 0;
  const COME_FROM_ONLINE = 1;
  const SERVICE_CATEGORY_A = 1;
  const SERVICE_CATEGORY_B = 2;
  const SERVICE_CATEGORY_C = 3;
  const DOCK_CORP_ELEME_DELIVERY = 7;
  const CERTIFICATION_TYPE_PERSONAL = 1;
  const CERTIFICATION_TYPE_CORP = 2;
  static public $__names = array(
    0 => 'BUSY_LEVEL_FREE',
    2 => 'BUSY_LEVEL_CLOSED',
    3 => 'BUSY_LEVEL_NETWORK_UNSTABLE',
    4 => 'BUSY_LEVEL_HOLIDAY',
    1 => 'TOTAL_STATUS_OPEN',
    2 => 'TOTAL_STATUS_CLOSED',
    3 => 'TOTAL_STATUS_NETWORK_UNSTABLE',
    4 => 'TOTAL_STATUS_RESTING',
    5 => 'TOTAL_STATUS_BOOKONLY',
    6 => 'TOTAL_STATUS_ORDER_BY_PHONE',
    7 => 'TOTAL_STATUS_HOLIDAY',
    1 => 'ORDER_MODE_PHONE',
    2 => 'ORDER_MODE_ELEME',
    3 => 'ORDER_MODE_NETWORK',
    3 => 'ORDER_MODE_NAPOS_WEB',
    4 => 'ORDER_MODE_WIRELESS_PRINTER',
    5 => 'ORDER_MODE_TPD',
    6 => 'ORDER_MODE_OPENAPI',
    7 => 'ORDER_MODE_TPD_ELEME',
    8 => 'ORDER_MODE_TPD_NAPOS',
    9 => 'ORDER_MODE_NAPOS_MOBILE',
    9 => 'ORDER_MODE_NAPOS_MOBILE_ANDROID',
    10 => 'ORDER_MODE_NAPOS_MOBILE_IOS',
    0 => 'COME_FROM_OFFLINE',
    1 => 'COME_FROM_ONLINE',
    1 => 'SERVICE_CATEGORY_A',
    2 => 'SERVICE_CATEGORY_B',
    3 => 'SERVICE_CATEGORY_C',
    7 => 'DOCK_CORP_ELEME_DELIVERY',
    1 => 'CERTIFICATION_TYPE_PERSONAL',
    2 => 'CERTIFICATION_TYPE_CORP',
  );
}

final class RestaurantMessageConst {
  const TYPE_OTHER = 0;
  const TYPE_BINDCARD_APPROVE = 1;
  const TYPE_BINDCARD_REJECT = 2;
  const TYPE_WITHDRAW_FAIL = 3;
  static public $__names = array(
    0 => 'TYPE_OTHER',
    1 => 'TYPE_BINDCARD_APPROVE',
    2 => 'TYPE_BINDCARD_REJECT',
    3 => 'TYPE_WITHDRAW_FAIL',
  );
}

final class ActivityConst {
  const MIDDLE = 0;
  const BANNER = 1;
  const NO_INFO = 0;
  const WITH_LINK = 1;
  const WITH_PAGE = 2;
  static public $__names = array(
    0 => 'MIDDLE',
    1 => 'BANNER',
    0 => 'NO_INFO',
    1 => 'WITH_LINK',
    2 => 'WITH_PAGE',
  );
}

final class DeviceRestaurantConst {
  const DEVICE_TYPE_IOS = 1;
  const DEVICE_TYPE_ANDROID = 2;
  static public $__names = array(
    1 => 'DEVICE_TYPE_IOS',
    2 => 'DEVICE_TYPE_ANDROID',
  );
}

final class RestaurantActivityConst {
  const TYPE_COUPON = 3;
  const TYPE_NEW_USER_DISCOUNT = 7;
  const TYPE_EXTRA_DISCOUNT = 100;
  const TYPE_OLPAYMENT_REDUCE = 101;
  const TYPE_ADVANCED_DISCOUNT = 102;
  const TYPE_NEW_USER_DISCOUNT_EXCLUSIVE = 103;
  const TYPE_ORDER_HONGBAO = 104;
  const STATUS_TYPE_NO_CONTRACT = 1;
  const STATUS_TYPE_CONTRACT_PROCESSING = 2;
  const STATUS_TYPE_CONTRACT_NOTSET = 3;
  const STATUS_TYPE_PARTICIPATED = 4;
  static public $__names = array(
    3 => 'TYPE_COUPON',
    7 => 'TYPE_NEW_USER_DISCOUNT',
    100 => 'TYPE_EXTRA_DISCOUNT',
    101 => 'TYPE_OLPAYMENT_REDUCE',
    102 => 'TYPE_ADVANCED_DISCOUNT',
    103 => 'TYPE_NEW_USER_DISCOUNT_EXCLUSIVE',
    104 => 'TYPE_ORDER_HONGBAO',
    1 => 'STATUS_TYPE_NO_CONTRACT',
    2 => 'STATUS_TYPE_CONTRACT_PROCESSING',
    3 => 'STATUS_TYPE_CONTRACT_NOTSET',
    4 => 'STATUS_TYPE_PARTICIPATED',
  );
}

final class SubsidyConst {
  const CATEGORY_RESTAURANT_ACTIVITY = 12;
  const CATEGORY_FOOD_ACTIVITY = 11;
  const ACTIVITY_COUPON = 3;
  const ACTIVITY_NEW_USER_DISCOUNT = 7;
  const ACTIVITY_EXTRA_DISCOUNT = 100;
  const ACTIVITY_OLPAYMENT_REDUCE = 101;
  const ACTIVITY_ADVANCED_DISCOUNT = 102;
  const ACTIVITY_NEW_USER_DISCOUNT_EXCLUSIVE = 103;
  static public $__names = array(
    12 => 'CATEGORY_RESTAURANT_ACTIVITY',
    11 => 'CATEGORY_FOOD_ACTIVITY',
    3 => 'ACTIVITY_COUPON',
    7 => 'ACTIVITY_NEW_USER_DISCOUNT',
    100 => 'ACTIVITY_EXTRA_DISCOUNT',
    101 => 'ACTIVITY_OLPAYMENT_REDUCE',
    102 => 'ACTIVITY_ADVANCED_DISCOUNT',
    103 => 'ACTIVITY_NEW_USER_DISCOUNT_EXCLUSIVE',
  );
}

final class SubsidyContractStatus {
  const UNCENSORED = 0;
  const APPROVED = 1;
  const REJECTED = 2;
  const SUBSTITUTED = 3;
  const REFUSED = 4;
  const SIGNED = 5;
  static public $__names = array(
    0 => 'UNCENSORED',
    1 => 'APPROVED',
    2 => 'REJECTED',
    3 => 'SUBSTITUTED',
    4 => 'REFUSED',
    5 => 'SIGNED',
  );
}

final class AppVersionConst {
  const ANDROID_ELEME = 1;
  const IOS_ELEME = 2;
  const ANDROID_NAPOS = 3;
  static public $__names = array(
    1 => 'ANDROID_ELEME',
    2 => 'IOS_ELEME',
    3 => 'ANDROID_NAPOS',
  );
}

final class TGarnishCategoryKind {
  const REQUIRED = 0;
  const OPTIONAL = 1;
  static public $__names = array(
    0 => 'REQUIRED',
    1 => 'OPTIONAL',
  );
}

final class TFoodUgcImageReportConst {
  const STATUS_UNPROCESSED = 1;
  const STATUS_PROCESSED = 2;
  static public $__names = array(
    1 => 'STATUS_UNPROCESSED',
    2 => 'STATUS_PROCESSED',
  );
}

final class TOrderMode {
  const PHONE = 1;
  const ELEME = 2;
  const NETWORK = 3;
  const WIRELESS = 4;
  static public $__names = array(
    1 => 'PHONE',
    2 => 'ELEME',
    3 => 'NETWORK',
    4 => 'WIRELESS',
  );
}

final class FreeGiftActivityCategory {
  const FREE_GIFT = 1;
  const PACKAGE_GIFT = 2;
  const NO_GIFT = 3;
  static public $__names = array(
    1 => 'FREE_GIFT',
    2 => 'PACKAGE_GIFT',
    3 => 'NO_GIFT',
  );
}

final class SaasConst {
  const TRIAL_ORDER_AMOUNT = 300;
  const TRIAL_ORDER_COUNT = 10;
  const TRIAL_DAYS = 15;
  const STATUS_SUSPEND = 0;
  const STATUS_FREE = 1;
  const STATUS_TRIAL = 2;
  const STATUS_PAY = 3;
  const STATUS_TEMP_FREE = 4;
  const CHANGE_ATTR_REMAINS = 1;
  const CHANGE_ATTR_RANKING = 2;
  const CHANGE_TYPE_LOGIN = 1;
  const CHANGE_TYPE_ORDER = 2;
  const CHANGE_TYPE_CUSTOM = 11;
  const CHANGE_TYPE_TRIAL = 12;
  const CHANGE_TYPE_CONTRACT_RECHARGE = 13;
  const CHANGE_TYPE_CONTRACT_ABANDON = 14;
  static public $__names = array(
    300 => 'TRIAL_ORDER_AMOUNT',
    10 => 'TRIAL_ORDER_COUNT',
    15 => 'TRIAL_DAYS',
    0 => 'STATUS_SUSPEND',
    1 => 'STATUS_FREE',
    2 => 'STATUS_TRIAL',
    3 => 'STATUS_PAY',
    4 => 'STATUS_TEMP_FREE',
    1 => 'CHANGE_ATTR_REMAINS',
    2 => 'CHANGE_ATTR_RANKING',
    1 => 'CHANGE_TYPE_LOGIN',
    2 => 'CHANGE_TYPE_ORDER',
    11 => 'CHANGE_TYPE_CUSTOM',
    12 => 'CHANGE_TYPE_TRIAL',
    13 => 'CHANGE_TYPE_CONTRACT_RECHARGE',
    14 => 'CHANGE_TYPE_CONTRACT_ABANDON',
  );
}

final class SaasContractRecordConst {
  const STATUS_ABANDON = 0;
  const STATUS_NEW = 1;
  const STATUS_NORMAL = 2;
  const STATUS_ARCHIVED = -1;
  const CONTRACT_TYPE_NEW = 1;
  const CONTRACT_TYPE_UPGRADE = 2;
  const CONTRACT_TYPE_RENEW = 3;
  const PLAN_TYPE_NORMAL = 1;
  const PLAN_TYPE_RANKING = 2;
  const PAYMENT_TYPE_CASH = 1;
  const PAYMENT_TYPE_ELEME_ONLINE = 3;
  const INCOME_STATUS_UNREC = 0;
  const INCOME_STATUS_REC = 1;
  const PLAN_SELECT_LEVEL_ALL = 0;
  const PLAN_SELECT_LEVEL_INTERNAL = 1;
  static public $__names = array(
    0 => 'STATUS_ABANDON',
    1 => 'STATUS_NEW',
    2 => 'STATUS_NORMAL',
    -1 => 'STATUS_ARCHIVED',
    1 => 'CONTRACT_TYPE_NEW',
    2 => 'CONTRACT_TYPE_UPGRADE',
    3 => 'CONTRACT_TYPE_RENEW',
    1 => 'PLAN_TYPE_NORMAL',
    2 => 'PLAN_TYPE_RANKING',
    1 => 'PAYMENT_TYPE_CASH',
    3 => 'PAYMENT_TYPE_ELEME_ONLINE',
    0 => 'INCOME_STATUS_UNREC',
    1 => 'INCOME_STATUS_REC',
    0 => 'PLAN_SELECT_LEVEL_ALL',
    1 => 'PLAN_SELECT_LEVEL_INTERNAL',
  );
}

final class SaasContractComboConst {
  const STATUS_STOP = 0;
  const STATUS_NEW = 1;
  const STATUS_IN_PROGRESS = 2;
  const STATUS_ACOMPLISHED = 3;
  const STATUS_ABANDON = -1;
  const INCOME_STATUS_NEW = 0;
  const INCOME_STATUS_STEP_1 = 1;
  const INCOME_STATUS_STEP_2 = 2;
  const INCOME_STATUS_STEP_3 = 3;
  const INCOME_PERCENTAGE_1 = 30;
  const INCOME_PERCENTAGE_2 = 30;
  const INCOME_PERCENTAGE_3 = 40;
  const COMBO_TYPE_A = 1;
  const COMBO_TYPE_B = 2;
  const COMBO_TYPE_C = 3;
  const COMBO_BASIC_SAAS_DURATION = 720;
  const COMBO_BASIC_SAAS_PRICE = 9640;
  const COMBO_C_SAAS_PRICE = 8194;
  const COMBO_A_RANKING_DURATION = 270;
  const COMBO_B_RANKING_DURATION = 0;
  const COMBO_C_RANKING_DURATION = 0;
  static public $__names = array(
    0 => 'STATUS_STOP',
    1 => 'STATUS_NEW',
    2 => 'STATUS_IN_PROGRESS',
    3 => 'STATUS_ACOMPLISHED',
    -1 => 'STATUS_ABANDON',
    0 => 'INCOME_STATUS_NEW',
    1 => 'INCOME_STATUS_STEP_1',
    2 => 'INCOME_STATUS_STEP_2',
    3 => 'INCOME_STATUS_STEP_3',
    30 => 'INCOME_PERCENTAGE_1',
    30 => 'INCOME_PERCENTAGE_2',
    40 => 'INCOME_PERCENTAGE_3',
    1 => 'COMBO_TYPE_A',
    2 => 'COMBO_TYPE_B',
    3 => 'COMBO_TYPE_C',
    720 => 'COMBO_BASIC_SAAS_DURATION',
    9640 => 'COMBO_BASIC_SAAS_PRICE',
    8194 => 'COMBO_C_SAAS_PRICE',
    270 => 'COMBO_A_RANKING_DURATION',
    0 => 'COMBO_B_RANKING_DURATION',
    0 => 'COMBO_C_RANKING_DURATION',
  );
}

final class OperationRemindConst {
  const STATUS_UNPROCESSED = 0;
  const STATUS_PROCESSED = 1;
  static public $__names = array(
    0 => 'STATUS_UNPROCESSED',
    1 => 'STATUS_PROCESSED',
  );
}

final class RestaurantOpenApplyConst {
  const STATUS_UNPROCESSED = 1;
  const STATUS_PASSED = 2;
  const STATUS_REJECT = 3;
  const STATUS_PROCESSING = 4;
  static public $__names = array(
    1 => 'STATUS_UNPROCESSED',
    2 => 'STATUS_PASSED',
    3 => 'STATUS_REJECT',
    4 => 'STATUS_PROCESSING',
  );
}

final class OnlinePaymentApplyConst {
  const STATUS_INVALID = -1;
  const STATUS_UNPROCESSED = 0;
  const STATUS_APPROVE = 1;
  static public $__names = array(
    -1 => 'STATUS_INVALID',
    0 => 'STATUS_UNPROCESSED',
    1 => 'STATUS_APPROVE',
  );
}

final class RestaurantSetupStepConst {
  const NEW_RST = 0;
  const START_INFO = 1;
  const BIND_PHONE = 2;
  const MENU = 3;
  const ORDER_MODE = 4;
  const FINISHED = 5;
  static public $__names = array(
    0 => 'NEW_RST',
    1 => 'START_INFO',
    2 => 'BIND_PHONE',
    3 => 'MENU',
    4 => 'ORDER_MODE',
    5 => 'FINISHED',
  );
}

final class CertificationType {
  const TYPE_PERSONAL = 1;
  const TYPE_CORP = 2;
  static public $__names = array(
    1 => 'TYPE_PERSONAL',
    2 => 'TYPE_CORP',
  );
}

final class CertificationConst {
  const STATUS_PENDING = 0;
  const STATUS_PASSED = 1;
  const STATUS_FAILED = -1;
  static public $__names = array(
    0 => 'STATUS_PENDING',
    1 => 'STATUS_PASSED',
    -1 => 'STATUS_FAILED',
  );
}

final class ERSErrorCode {
  const UNKNOWN_ERROR = 0;
  const ACTIVITY_NOT_FOUND = 1;
  const ANONYMOUS_USER_PERMISSION_DENIED = 2;
  const APP_URL_NOT_FOUND = 3;
  const AREA_NOT_FOUND = 4;
  const BANKCARD_NOT_FOUND = 5;
  const BANKCARD_NOT_MATCH_CORPORATION = 6;
  const BANKCARD_WITH_NO_SUBSIDY = 7;
  const CITY_NOT_FOUND = 8;
  const COMMENT_NOT_FOUND = 9;
  const COMMENT_REPLY_NOT_FOUND = 10;
  const COUPON_ALREADY_USED = 11;
  const COUPON_NOT_FOUND = 12;
  const COUPON_OUT_OF_DATE = 13;
  const DEVICE_RESTAURANT_NOT_FOUND = 14;
  const DIRECTOR_NOT_FOUND = 15;
  const DISTRICT_NOT_FOUND = 16;
  const DOCK_CORP_NOT_FOUND = 17;
  const DOCK_CORP_RESTAURANT_NOT_FOUND = 18;
  const DUPLICATED_DEVICE_RESTAURANT = 19;
  const ENTRY_NOT_FOUND = 20;
  const ENTRY_RESTAURANT_NOT_FOUND = 21;
  const FOOD_ALREADY_HAS_FOOD_ACTIVITY = 22;
  const FOOD_ACTIVITY_NOT_FOUND = 23;
  const FOOD_ACTIVITY_CANT_CHANGE_CITY = 24;
  const FOOD_ACTIVITY_CANT_CHANGE_DISCOUNT = 25;
  const FOOD_ACTIVITY_HAS_NO_LIMIT = 26;
  const FOOD_ACTIVITY_SUBSIDY_CANT_PROCESS = 27;
  const FOOD_ACTIVITY_SUBSIDY_NOT_FOUND = 28;
  const FOOD_ACTIVITY_FIELD_INVALID = 29;
  const FOOD_ACTIVITY_EFFECT_INVALID = 30;
  const FOOD_CATEGORY_POSITION_INVALID = 31;
  const FOOD_CATEGORY_NOT_COMPLETE = 32;
  const FOOD_GROUP_RESTAURANT_DIVERSED = 33;
  const FOOD_NOT_FOUND = 34;
  const FOOD_HAS_NO_CATEGORY_ID = 35;
  const FOOD_NAME_CANNOT_CHANGE = 36;
  const FOOD_PRICE_CHANGED_TOO_OFTEN = 37;
  const FOOD_PRICE_CHANGED_TOO_MUCH = 38;
  const FOOD_CATEGORY_NOT_FOUND = 39;
  const FOOD_CATEGORY_NOT_BELONGS_TO_RESTAURANT = 40;
  const FOOD_REQUIRED_GARNISH_CONFLICT = 41;
  const FOOD_UGC_IMAGE_LIKE_TOO_FREQUENTLY = 42;
  const FOOD_UGC_IMAGE_NOT_FOUND = 43;
  const FOOD_UGC_IMAGE_PR_NOT_FOUND = 44;
  const FOOD_POSITION_INVALID = 45;
  const FOOD_NOT_COMPLETE = 46;
  const FRIEND_LINK_NOT_FOUND = 47;
  const GARNISH_NOT_FOUND = 48;
  const GARNISH_CATEGORY_NOT_FOUND = 49;
  const GEOHASH_NAME_NOT_FOUND = 50;
  const GEOHASH_RESTAURANT_NOT_FOUND = 51;
  const INVALID_DATE_RANGE = 52;
  const INVALID_ENTRY = 53;
  const INVALID_RESTAURANT = 54;
  const INVALID_RESTAURANT_AREA = 55;
  const INVALID_SUBSIDY = 56;
  const INVALID_TIME_RANGE = 57;
  const LOGO_NOT_FOUND = 58;
  const MISSING_DEVICE_RESTAURANT_ATTRIBUTE = 59;
  const MODE_ELEME_INVALID_OPEN_TIME = 60;
  const PERMISSION_DENIED = 61;
  const QUICK_MESSAGE_NOT_FOUND = 62;
  const REGION_AREA_TOO_LARGE = 63;
  const REGION_NOT_FOUND = 64;
  const REGION_GROUP_NOT_FOUND = 65;
  const RESTAURANT_ADMIN_NOT_FOUND = 66;
  const RESTAURANT_AREA_TOO_LARGE = 67;
  const RESTAURANT_CHANGE_RECORD_NOT_FOUND = 68;
  const RESTAURANT_EVALUATION_NOT_FOUND = 69;
  const RESTAURANT_HAS_NO_ACTIVITY_SUBSIDY = 70;
  const RESTAURANT_MESSAGE_NOT_FOUND = 71;
  const RESTAURANT_NOT_FOUND = 72;
  const RESTAURANT_OPEN_APPLY_NOT_FOUND = 73;
  const RESTAURANT_RATE_NOT_FOUND = 74;
  const RESTAURANT_OPEN_APPLY_STATUS_INVALID = 75;
  const RESTAURANT_PROMOTION_NOT_FOUND = 76;
  const SAAS_CHANGE_RECORD_NOT_FOUND = 77;
  const SAAS_CONTRACT_RECORD_NOT_FOUND = 78;
  const SAAS_CONTRACT_PLAN_TYPE_ERROR = 79;
  const SAAS_CONTRACT_RANKING_INFO_MISSING = 80;
  const SAAS_CONTRACT_RANKING_INFO_ALREADY_SET = 81;
  const SAAS_CONTRACT_RECORD_STATUS_ERROR = 82;
  const SAAS_STATUS_ERROR = 83;
  const SAAS_STATUS_NOT_FOUND = 84;
  const SAAS_PAY_CANT_TO_FREE = 85;
  const SAAS_TRIAL_DAYS_OVER_LIMIT = 86;
  const SAAS_SUSPENDED_RESTAURANT_CLOSED_ONLY = 87;
  const SAAS_CONTRACT_PLAN_NOT_FOUND = 88;
  const SAAS_CONTRACT_UPGRADE_OVERDUE = 89;
  const SAAS_CONTRACT_RELEVANT_RECORD_NOT_FOUND = 90;
  const SAAS_CONTRACT_RELEVANT_RECORD_ALREADY_UPGRADED = 91;
  const SAAS_CONTRACT_RELEVANT_RECORD_NOT_NORMAL = 92;
  const SAAS_CONTRACT_UPGRADE_PLAN_ERROR = 93;
  const SAAS_CONTRACT_UPGRADE_RESTAURANT_ERROR = 94;
  const SAAS_CONTRACT_RECORD_ABANDONED = 95;
  const SAAS_CONTRACT_ONLY_ONE_NEW = 96;
  const SAAS_CONTRACT_COMBO_NOT_FOUND = 97;
  const SAAS_CONTRACT_COMBO_ONE_FOR_RESTAURNT = 98;
  const SAAS_CONTRACT_COMBO_NOT_PAYABLE = 99;
  const SAAS_CONTRACT_COMBO_USER_LACK_OF_BALANCE = 100;
  const SAAS_CONTRACT_COMBO_CONFIRM_OVERLOAD = 101;
  const SEO_SM_INDEX_NOT_FOUND = 102;
  const STOCK_NOT_ENOUGH = 103;
  const TOO_MANY_FOOD_UGC_IMAGES = 104;
  const USER_AUTH_FAIL = 105;
  const CL_NOT_FOUND = 106;
  const DL_NOT_FOUND = 107;
  const AREA_OUT_OF_CITY = 108;
  const ZONE_NOT_FOUND = 109;
  const INVALID_NAME_FOR_URL = 110;
  const FOOD_CATEGORY_ONE_ATRR_ONLY = 111;
  const ONLINE_PAYMENT_APPLY_NOT_FOUND = 112;
  const ONLINE_PAYMENT_APPLY_ALREADY_PROCESSED = 113;
  const DELIVER_AREA_MUST_IN_UPDATE = 114;
  const INVALID_RESTAURANT_DELIVER_PRICE = 115;
  const INVALID_MOBILE = 116;
  const DUPLICATED_FOOD_UGC_IMAGE = 117;
  const APP_CAMPAIGN_NOT_FOUND = 118;
  const TOO_MANY_POLYGON_IN_DELIVER_AREA = 119;
  const DUPLICATED_POLYGON_IN_DELIVER_AREA = 120;
  const ORDER_IN_PENDING = 121;
  const TOO_MANY_POLYGON_IN_DELIVER_GEOJSON = 122;
  const RESTAURANT_POLYGON_AREA_TOO_LARGE = 123;
  const INVALID_RESTAURANT_GEOMETRY = 124;
  const MISS_PROPERTY_IN_DELIVER_GEOJSON = 125;
  const DUPLICATED_POLYGON_IN_DELIVER_GEOJSON = 126;
  const RESTAURANT_COMMENT_NOT_FOUND = 127;
  const INVALID_STOCK = 128;
  const FOOD_GARNISH_CATEGORY_NOT_FOUND = 129;
  const ACTIVITY_ICON_NOT_FOUND = 130;
  const FREE_GIFT_ACTIVITY_NOT_FOUND = 131;
  const ORDER_MODE_CORP_TYPE_NOT_MATCH = 132;
  const RESTAURANT_ACTIVITY_NOT_FOUND = 133;
  const RESTAURANT_ACTIVITY_FIELD_ERROR = 134;
  const CERTIFICATION_NOT_FOUND = 135;
  const CERTIFICATION_HAS_EXISTED = 136;
  const CERTIFICATION_UPDATE_DENIED = 137;
  const CERTIFICATION_PROCESS_ILLEGAL = 138;
  const INVALID_REGION_AREA = 139;
  const INVALID_RESTAURANT_ATTRIBUTE = 140;
  const DELIVERY_PRICE_MUST_BE_FIGURE = 141;
  const INVALUD_FOOD_DISCOUNT = 142;
  const ACTIVITY_CONTRACT_NOT_SIGNED = 143;
  const AMENDED_POI_NOT_FOUND = 144;
  const RESTAURANT_HAS_TOO_MANY_FOODS = 145;
  const VALIDATION_ERROR = 146;
  const VALIDATION_NONEXIST_ERROR = 147;
  const EOS_CLIENT_ERROR = 148;
  const EUS_CLIENT_ERROR = 149;
  const GEOS_CLIENT_ERROR = 150;
  const EES_CLIENT_ERROR = 151;
  const DMS_CLIENT_ERROR = 152;
  const SMS_CLIENT_ERROR = 153;
  const OAS_CLIENT_ERROR = 154;
  const TDS_CLIENT_ERROR = 155;
  const DATABASE_ERROR = 156;
  const INVALID_FIELD_VALUE = 157;
  static public $__names = array(
    0 => 'UNKNOWN_ERROR',
    1 => 'ACTIVITY_NOT_FOUND',
    2 => 'ANONYMOUS_USER_PERMISSION_DENIED',
    3 => 'APP_URL_NOT_FOUND',
    4 => 'AREA_NOT_FOUND',
    5 => 'BANKCARD_NOT_FOUND',
    6 => 'BANKCARD_NOT_MATCH_CORPORATION',
    7 => 'BANKCARD_WITH_NO_SUBSIDY',
    8 => 'CITY_NOT_FOUND',
    9 => 'COMMENT_NOT_FOUND',
    10 => 'COMMENT_REPLY_NOT_FOUND',
    11 => 'COUPON_ALREADY_USED',
    12 => 'COUPON_NOT_FOUND',
    13 => 'COUPON_OUT_OF_DATE',
    14 => 'DEVICE_RESTAURANT_NOT_FOUND',
    15 => 'DIRECTOR_NOT_FOUND',
    16 => 'DISTRICT_NOT_FOUND',
    17 => 'DOCK_CORP_NOT_FOUND',
    18 => 'DOCK_CORP_RESTAURANT_NOT_FOUND',
    19 => 'DUPLICATED_DEVICE_RESTAURANT',
    20 => 'ENTRY_NOT_FOUND',
    21 => 'ENTRY_RESTAURANT_NOT_FOUND',
    22 => 'FOOD_ALREADY_HAS_FOOD_ACTIVITY',
    23 => 'FOOD_ACTIVITY_NOT_FOUND',
    24 => 'FOOD_ACTIVITY_CANT_CHANGE_CITY',
    25 => 'FOOD_ACTIVITY_CANT_CHANGE_DISCOUNT',
    26 => 'FOOD_ACTIVITY_HAS_NO_LIMIT',
    27 => 'FOOD_ACTIVITY_SUBSIDY_CANT_PROCESS',
    28 => 'FOOD_ACTIVITY_SUBSIDY_NOT_FOUND',
    29 => 'FOOD_ACTIVITY_FIELD_INVALID',
    30 => 'FOOD_ACTIVITY_EFFECT_INVALID',
    31 => 'FOOD_CATEGORY_POSITION_INVALID',
    32 => 'FOOD_CATEGORY_NOT_COMPLETE',
    33 => 'FOOD_GROUP_RESTAURANT_DIVERSED',
    34 => 'FOOD_NOT_FOUND',
    35 => 'FOOD_HAS_NO_CATEGORY_ID',
    36 => 'FOOD_NAME_CANNOT_CHANGE',
    37 => 'FOOD_PRICE_CHANGED_TOO_OFTEN',
    38 => 'FOOD_PRICE_CHANGED_TOO_MUCH',
    39 => 'FOOD_CATEGORY_NOT_FOUND',
    40 => 'FOOD_CATEGORY_NOT_BELONGS_TO_RESTAURANT',
    41 => 'FOOD_REQUIRED_GARNISH_CONFLICT',
    42 => 'FOOD_UGC_IMAGE_LIKE_TOO_FREQUENTLY',
    43 => 'FOOD_UGC_IMAGE_NOT_FOUND',
    44 => 'FOOD_UGC_IMAGE_PR_NOT_FOUND',
    45 => 'FOOD_POSITION_INVALID',
    46 => 'FOOD_NOT_COMPLETE',
    47 => 'FRIEND_LINK_NOT_FOUND',
    48 => 'GARNISH_NOT_FOUND',
    49 => 'GARNISH_CATEGORY_NOT_FOUND',
    50 => 'GEOHASH_NAME_NOT_FOUND',
    51 => 'GEOHASH_RESTAURANT_NOT_FOUND',
    52 => 'INVALID_DATE_RANGE',
    53 => 'INVALID_ENTRY',
    54 => 'INVALID_RESTAURANT',
    55 => 'INVALID_RESTAURANT_AREA',
    56 => 'INVALID_SUBSIDY',
    57 => 'INVALID_TIME_RANGE',
    58 => 'LOGO_NOT_FOUND',
    59 => 'MISSING_DEVICE_RESTAURANT_ATTRIBUTE',
    60 => 'MODE_ELEME_INVALID_OPEN_TIME',
    61 => 'PERMISSION_DENIED',
    62 => 'QUICK_MESSAGE_NOT_FOUND',
    63 => 'REGION_AREA_TOO_LARGE',
    64 => 'REGION_NOT_FOUND',
    65 => 'REGION_GROUP_NOT_FOUND',
    66 => 'RESTAURANT_ADMIN_NOT_FOUND',
    67 => 'RESTAURANT_AREA_TOO_LARGE',
    68 => 'RESTAURANT_CHANGE_RECORD_NOT_FOUND',
    69 => 'RESTAURANT_EVALUATION_NOT_FOUND',
    70 => 'RESTAURANT_HAS_NO_ACTIVITY_SUBSIDY',
    71 => 'RESTAURANT_MESSAGE_NOT_FOUND',
    72 => 'RESTAURANT_NOT_FOUND',
    73 => 'RESTAURANT_OPEN_APPLY_NOT_FOUND',
    74 => 'RESTAURANT_RATE_NOT_FOUND',
    75 => 'RESTAURANT_OPEN_APPLY_STATUS_INVALID',
    76 => 'RESTAURANT_PROMOTION_NOT_FOUND',
    77 => 'SAAS_CHANGE_RECORD_NOT_FOUND',
    78 => 'SAAS_CONTRACT_RECORD_NOT_FOUND',
    79 => 'SAAS_CONTRACT_PLAN_TYPE_ERROR',
    80 => 'SAAS_CONTRACT_RANKING_INFO_MISSING',
    81 => 'SAAS_CONTRACT_RANKING_INFO_ALREADY_SET',
    82 => 'SAAS_CONTRACT_RECORD_STATUS_ERROR',
    83 => 'SAAS_STATUS_ERROR',
    84 => 'SAAS_STATUS_NOT_FOUND',
    85 => 'SAAS_PAY_CANT_TO_FREE',
    86 => 'SAAS_TRIAL_DAYS_OVER_LIMIT',
    87 => 'SAAS_SUSPENDED_RESTAURANT_CLOSED_ONLY',
    88 => 'SAAS_CONTRACT_PLAN_NOT_FOUND',
    89 => 'SAAS_CONTRACT_UPGRADE_OVERDUE',
    90 => 'SAAS_CONTRACT_RELEVANT_RECORD_NOT_FOUND',
    91 => 'SAAS_CONTRACT_RELEVANT_RECORD_ALREADY_UPGRADED',
    92 => 'SAAS_CONTRACT_RELEVANT_RECORD_NOT_NORMAL',
    93 => 'SAAS_CONTRACT_UPGRADE_PLAN_ERROR',
    94 => 'SAAS_CONTRACT_UPGRADE_RESTAURANT_ERROR',
    95 => 'SAAS_CONTRACT_RECORD_ABANDONED',
    96 => 'SAAS_CONTRACT_ONLY_ONE_NEW',
    97 => 'SAAS_CONTRACT_COMBO_NOT_FOUND',
    98 => 'SAAS_CONTRACT_COMBO_ONE_FOR_RESTAURNT',
    99 => 'SAAS_CONTRACT_COMBO_NOT_PAYABLE',
    100 => 'SAAS_CONTRACT_COMBO_USER_LACK_OF_BALANCE',
    101 => 'SAAS_CONTRACT_COMBO_CONFIRM_OVERLOAD',
    102 => 'SEO_SM_INDEX_NOT_FOUND',
    103 => 'STOCK_NOT_ENOUGH',
    104 => 'TOO_MANY_FOOD_UGC_IMAGES',
    105 => 'USER_AUTH_FAIL',
    106 => 'CL_NOT_FOUND',
    107 => 'DL_NOT_FOUND',
    108 => 'AREA_OUT_OF_CITY',
    109 => 'ZONE_NOT_FOUND',
    110 => 'INVALID_NAME_FOR_URL',
    111 => 'FOOD_CATEGORY_ONE_ATRR_ONLY',
    112 => 'ONLINE_PAYMENT_APPLY_NOT_FOUND',
    113 => 'ONLINE_PAYMENT_APPLY_ALREADY_PROCESSED',
    114 => 'DELIVER_AREA_MUST_IN_UPDATE',
    115 => 'INVALID_RESTAURANT_DELIVER_PRICE',
    116 => 'INVALID_MOBILE',
    117 => 'DUPLICATED_FOOD_UGC_IMAGE',
    118 => 'APP_CAMPAIGN_NOT_FOUND',
    119 => 'TOO_MANY_POLYGON_IN_DELIVER_AREA',
    120 => 'DUPLICATED_POLYGON_IN_DELIVER_AREA',
    121 => 'ORDER_IN_PENDING',
    122 => 'TOO_MANY_POLYGON_IN_DELIVER_GEOJSON',
    123 => 'RESTAURANT_POLYGON_AREA_TOO_LARGE',
    124 => 'INVALID_RESTAURANT_GEOMETRY',
    125 => 'MISS_PROPERTY_IN_DELIVER_GEOJSON',
    126 => 'DUPLICATED_POLYGON_IN_DELIVER_GEOJSON',
    127 => 'RESTAURANT_COMMENT_NOT_FOUND',
    128 => 'INVALID_STOCK',
    129 => 'FOOD_GARNISH_CATEGORY_NOT_FOUND',
    130 => 'ACTIVITY_ICON_NOT_FOUND',
    131 => 'FREE_GIFT_ACTIVITY_NOT_FOUND',
    132 => 'ORDER_MODE_CORP_TYPE_NOT_MATCH',
    133 => 'RESTAURANT_ACTIVITY_NOT_FOUND',
    134 => 'RESTAURANT_ACTIVITY_FIELD_ERROR',
    135 => 'CERTIFICATION_NOT_FOUND',
    136 => 'CERTIFICATION_HAS_EXISTED',
    137 => 'CERTIFICATION_UPDATE_DENIED',
    138 => 'CERTIFICATION_PROCESS_ILLEGAL',
    139 => 'INVALID_REGION_AREA',
    140 => 'INVALID_RESTAURANT_ATTRIBUTE',
    141 => 'DELIVERY_PRICE_MUST_BE_FIGURE',
    142 => 'INVALUD_FOOD_DISCOUNT',
    143 => 'ACTIVITY_CONTRACT_NOT_SIGNED',
    144 => 'AMENDED_POI_NOT_FOUND',
    145 => 'RESTAURANT_HAS_TOO_MANY_FOODS',
    146 => 'VALIDATION_ERROR',
    147 => 'VALIDATION_NONEXIST_ERROR',
    148 => 'EOS_CLIENT_ERROR',
    149 => 'EUS_CLIENT_ERROR',
    150 => 'GEOS_CLIENT_ERROR',
    151 => 'EES_CLIENT_ERROR',
    152 => 'DMS_CLIENT_ERROR',
    153 => 'SMS_CLIENT_ERROR',
    154 => 'OAS_CLIENT_ERROR',
    155 => 'TDS_CLIENT_ERROR',
    156 => 'DATABASE_ERROR',
    157 => 'INVALID_FIELD_VALUE',
  );
}

class TRestaurantCertification extends TBase {
  static $_TSPEC;

  public $restaurant_id = null;
  public $person_name = null;
  public $identity_card_no = null;
  public $identity_card_image_front = null;
  public $identity_card_image_back = null;
  public $health_card_image_front = null;
  public $health_card_image_back = null;
  public $corp_name = null;
  public $license_no = null;
  public $license_location = null;
  public $license_expire_date = null;
  public $license_image = null;
  public $restaurant_service_license_copy = null;
  public $type = null;
  public $status = null;
  public $comment = null;
  public $created_at = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'restaurant_id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'person_name',
          'type' => TType::STRING,
          ),
        3 => array(
          'var' => 'identity_card_no',
          'type' => TType::STRING,
          ),
        4 => array(
          'var' => 'identity_card_image_front',
          'type' => TType::STRING,
          ),
        5 => array(
          'var' => 'identity_card_image_back',
          'type' => TType::STRING,
          ),
        6 => array(
          'var' => 'health_card_image_front',
          'type' => TType::STRING,
          ),
        7 => array(
          'var' => 'health_card_image_back',
          'type' => TType::STRING,
          ),
        8 => array(
          'var' => 'corp_name',
          'type' => TType::STRING,
          ),
        9 => array(
          'var' => 'license_no',
          'type' => TType::STRING,
          ),
        10 => array(
          'var' => 'license_location',
          'type' => TType::STRING,
          ),
        11 => array(
          'var' => 'license_expire_date',
          'type' => TType::STRING,
          ),
        12 => array(
          'var' => 'license_image',
          'type' => TType::STRING,
          ),
        13 => array(
          'var' => 'restaurant_service_license_copy',
          'type' => TType::STRING,
          ),
        14 => array(
          'var' => 'type',
          'type' => TType::I16,
          ),
        15 => array(
          'var' => 'status',
          'type' => TType::I16,
          ),
        16 => array(
          'var' => 'comment',
          'type' => TType::STRING,
          ),
        17 => array(
          'var' => 'created_at',
          'type' => TType::I64,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TRestaurantCertification';
  }

  public function read($input)
  {
    return $this->_read('TRestaurantCertification', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TRestaurantCertification', self::$_TSPEC, $output);
  }
}

class TAmendedPoi extends TBase {
  static $_TSPEC;

  public $id = null;
  public $name = null;
  public $address = null;
  public $extra_tag = null;
  public $city_id = null;
  public $latitude = null;
  public $longitude = null;
  public $created_at = null;
  public $pguid = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'name',
          'type' => TType::STRING,
          ),
        3 => array(
          'var' => 'address',
          'type' => TType::STRING,
          ),
        4 => array(
          'var' => 'extra_tag',
          'type' => TType::STRING,
          ),
        5 => array(
          'var' => 'city_id',
          'type' => TType::I32,
          ),
        6 => array(
          'var' => 'latitude',
          'type' => TType::DOUBLE,
          ),
        7 => array(
          'var' => 'longitude',
          'type' => TType::DOUBLE,
          ),
        8 => array(
          'var' => 'created_at',
          'type' => TType::I64,
          ),
        9 => array(
          'var' => 'pguid',
          'type' => TType::STRING,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TAmendedPoi';
  }

  public function read($input)
  {
    return $this->_read('TAmendedPoi', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TAmendedPoi', self::$_TSPEC, $output);
  }
}

class TAppCampaign extends TBase {
  static $_TSPEC;

  public $id = null;
  public $sn = null;
  public $description = null;
  public $iphone_link = null;
  public $android_link = null;
  public $created_at = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'sn',
          'type' => TType::STRING,
          ),
        3 => array(
          'var' => 'description',
          'type' => TType::STRING,
          ),
        4 => array(
          'var' => 'iphone_link',
          'type' => TType::STRING,
          ),
        5 => array(
          'var' => 'android_link',
          'type' => TType::STRING,
          ),
        6 => array(
          'var' => 'created_at',
          'type' => TType::I64,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TAppCampaign';
  }

  public function read($input)
  {
    return $this->_read('TAppCampaign', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TAppCampaign', self::$_TSPEC, $output);
  }
}

class TChangelogRestaurant extends TBase {
  static $_TSPEC;

  public $id = null;
  public $restaurant_id = null;
  public $field_name = null;
  public $from_value = null;
  public $to_value = null;
  public $by_user_id = null;
  public $created_at = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'restaurant_id',
          'type' => TType::I32,
          ),
        3 => array(
          'var' => 'field_name',
          'type' => TType::STRING,
          ),
        4 => array(
          'var' => 'from_value',
          'type' => TType::STRING,
          ),
        5 => array(
          'var' => 'to_value',
          'type' => TType::STRING,
          ),
        6 => array(
          'var' => 'by_user_id',
          'type' => TType::I32,
          ),
        7 => array(
          'var' => 'created_at',
          'type' => TType::I64,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TChangelogRestaurant';
  }

  public function read($input)
  {
    return $this->_read('TChangelogRestaurant', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TChangelogRestaurant', self::$_TSPEC, $output);
  }
}

class TChangelogRegion extends TBase {
  static $_TSPEC;

  public $id = null;
  public $region_id = null;
  public $field_name = null;
  public $from_value = null;
  public $to_value = null;
  public $by_user_id = null;
  public $created_at = null;
  public $status = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'region_id',
          'type' => TType::I32,
          ),
        3 => array(
          'var' => 'field_name',
          'type' => TType::STRING,
          ),
        4 => array(
          'var' => 'from_value',
          'type' => TType::STRING,
          ),
        5 => array(
          'var' => 'to_value',
          'type' => TType::STRING,
          ),
        6 => array(
          'var' => 'by_user_id',
          'type' => TType::I32,
          ),
        7 => array(
          'var' => 'created_at',
          'type' => TType::I64,
          ),
        8 => array(
          'var' => 'status',
          'type' => TType::I16,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TChangelogRegion';
  }

  public function read($input)
  {
    return $this->_read('TChangelogRegion', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TChangelogRegion', self::$_TSPEC, $output);
  }
}

class TDeletelogRegion extends TBase {
  static $_TSPEC;

  public $id = null;
  public $region_id = null;
  public $by_user_id = null;
  public $created_at = null;
  public $status = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'region_id',
          'type' => TType::I32,
          ),
        3 => array(
          'var' => 'by_user_id',
          'type' => TType::I32,
          ),
        4 => array(
          'var' => 'created_at',
          'type' => TType::I64,
          ),
        5 => array(
          'var' => 'status',
          'type' => TType::I16,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TDeletelogRegion';
  }

  public function read($input)
  {
    return $this->_read('TDeletelogRegion', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TDeletelogRegion', self::$_TSPEC, $output);
  }
}

class TDeviceRestaurant extends TBase {
  static $_TSPEC;

  public $id = null;
  public $restaurant_id = null;
  public $device_id = null;
  public $device_type = null;
  public $eleme_guid = null;
  public $version = null;
  public $created_at = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'restaurant_id',
          'type' => TType::I32,
          ),
        3 => array(
          'var' => 'device_id',
          'type' => TType::STRING,
          ),
        4 => array(
          'var' => 'device_type',
          'type' => TType::I16,
          ),
        5 => array(
          'var' => 'eleme_guid',
          'type' => TType::STRING,
          ),
        6 => array(
          'var' => 'version',
          'type' => TType::STRING,
          ),
        7 => array(
          'var' => 'created_at',
          'type' => TType::I64,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TDeviceRestaurant';
  }

  public function read($input)
  {
    return $this->_read('TDeviceRestaurant', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TDeviceRestaurant', self::$_TSPEC, $output);
  }
}

class TDeviceRestaurantQuery extends TBase {
  static $_TSPEC;

  public $device_id = null;
  public $restaurant_id = null;
  public $device_type = null;
  public $offset = null;
  public $limit = null;
  public $restaurant_ids = null;
  public $device_from_version = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'device_id',
          'type' => TType::STRING,
          ),
        2 => array(
          'var' => 'restaurant_id',
          'type' => TType::I32,
          ),
        3 => array(
          'var' => 'device_type',
          'type' => TType::I16,
          ),
        4 => array(
          'var' => 'offset',
          'type' => TType::I32,
          ),
        5 => array(
          'var' => 'limit',
          'type' => TType::I32,
          ),
        6 => array(
          'var' => 'restaurant_ids',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        7 => array(
          'var' => 'device_from_version',
          'type' => TType::MAP,
          'ktype' => TType::I32,
          'vtype' => TType::STRING,
          'key' => array(
            'type' => TType::I32,
          ),
          'val' => array(
            'type' => TType::STRING,
            ),
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TDeviceRestaurantQuery';
  }

  public function read($input)
  {
    return $this->_read('TDeviceRestaurantQuery', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TDeviceRestaurantQuery', self::$_TSPEC, $output);
  }
}

class TZone extends TBase {
  static $_TSPEC;

  public $id = null;
  public $name = null;
  public $district_id = null;
  public $city_id = null;
  public $sort = null;
  public $is_valid = null;
  public $created_at = null;
  public $need_az_group = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'name',
          'type' => TType::STRING,
          ),
        3 => array(
          'var' => 'district_id',
          'type' => TType::I32,
          ),
        4 => array(
          'var' => 'city_id',
          'type' => TType::I32,
          ),
        5 => array(
          'var' => 'sort',
          'type' => TType::I32,
          ),
        6 => array(
          'var' => 'is_valid',
          'type' => TType::I16,
          ),
        7 => array(
          'var' => 'created_at',
          'type' => TType::I64,
          ),
        8 => array(
          'var' => 'need_az_group',
          'type' => TType::I16,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TZone';
  }

  public function read($input)
  {
    return $this->_read('TZone', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TZone', self::$_TSPEC, $output);
  }
}

class TRestaurant extends TBase {
  static $_TSPEC;

  public $id = null;
  public $is_valid = null;
  public $agent_fee = null;
  public $busy_level = null;
  public $name = null;
  public $latitude = null;
  public $longitude = null;
  public $description = null;
  public $address_text = null;
  public $deliver_amount = null;
  public $total_status = null;
  public $wireless_printer_esn = null;
  public $support_online = null;
  public $open_time_bitmap = null;
  public $book_time_bitmap = null;
  public $deliver_description = null;
  public $num_rating_1 = null;
  public $num_rating_2 = null;
  public $num_rating_3 = null;
  public $num_rating_4 = null;
  public $num_rating_5 = null;
  public $created_at = null;
  public $image_url = null;
  public $image_hash = null;
  public $phone = null;
  public $mobile = null;
  public $order_mode = null;
  public $promotion_info = null;
  public $one_delivery = null;
  public $pinyin_name = null;
  public $name_for_url = null;
  public $min_deliver_amount = null;
  public $close_description = null;
  public $is_saas = null;
  public $header_image_url = null;
  public $waimai_num_print_copies = null;
  public $tangchi_num_print_copies = null;
  public $printer_version = null;
  public $sn = null;
  public $deliver_radius = null;
  public $min_lng = null;
  public $max_lng = null;
  public $min_lat = null;
  public $max_lat = null;
  public $is_bookable = null;
  public $flavors = null;
  public $dine_enabled = null;
  public $deliver_spent = null;
  public $is_time_ensure = null;
  public $time_ensure_description = null;
  public $time_ensure_at = null;
  public $time_ensure_spent = null;
  public $time_ensure_discount = null;
  public $city_id = null;
  public $is_phone_hidden = null;
  public $coupon_enabled = null;
  public $coupon_start_at = null;
  public $coupon_end_at = null;
  public $coupon_number = null;
  public $coupon_discount = null;
  public $paper_width = null;
  public $auto_print_tangchi = null;
  public $speed_coef1 = null;
  public $speed_coef2 = null;
  public $speed_coef3 = null;
  public $avg_comment_time = null;
  public $activities = null;
  public $has_food_img = null;
  public $online_payment = null;
  public $invoice = null;
  public $invoice_min_amount = null;
  public $attribute = null;
  public $deliver_area = null;
  public $open_date = null;
  public $original_order_quantity = null;
  public $keeper_name = null;
  public $keeper_phone = null;
  public $remark = null;
  public $corporation = null;
  public $geohash_ranking_weight = null;
  public $serving_time = null;
  public $num_ratings = null;
  public $recent_food_popularity = null;
  public $is_premium = null;
  public $deliver_times = null;
  public $napos_client_settings = null;
  public $keeper_identity_card = null;
  public $support_coupon = null;
  public $time_ensure_full_description = null;
  public $come_from = null;
  public $no_agent_fee_total = null;
  public $service_category = null;
  public $dock_corp_id = null;
  public $deliver_geojson = null;
  public $service_rating = null;
  public $recent_order_num = null;
  public $has_activity = null;
  public $certification_type = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'is_valid',
          'type' => TType::I16,
          ),
        3 => array(
          'var' => 'agent_fee',
          'type' => TType::I16,
          ),
        4 => array(
          'var' => 'busy_level',
          'type' => TType::I16,
          ),
        5 => array(
          'var' => 'name',
          'type' => TType::STRING,
          ),
        6 => array(
          'var' => 'latitude',
          'type' => TType::DOUBLE,
          ),
        7 => array(
          'var' => 'longitude',
          'type' => TType::DOUBLE,
          ),
        8 => array(
          'var' => 'description',
          'type' => TType::STRING,
          ),
        9 => array(
          'var' => 'address_text',
          'type' => TType::STRING,
          ),
        10 => array(
          'var' => 'deliver_amount',
          'type' => TType::I16,
          ),
        11 => array(
          'var' => 'total_status',
          'type' => TType::I16,
          ),
        12 => array(
          'var' => 'wireless_printer_esn',
          'type' => TType::STRING,
          ),
        13 => array(
          'var' => 'support_online',
          'type' => TType::BOOL,
          ),
        14 => array(
          'var' => 'open_time_bitmap',
          'type' => TType::STRING,
          ),
        15 => array(
          'var' => 'book_time_bitmap',
          'type' => TType::STRING,
          ),
        16 => array(
          'var' => 'deliver_description',
          'type' => TType::STRING,
          ),
        17 => array(
          'var' => 'num_rating_1',
          'type' => TType::I16,
          ),
        18 => array(
          'var' => 'num_rating_2',
          'type' => TType::I16,
          ),
        19 => array(
          'var' => 'num_rating_3',
          'type' => TType::I16,
          ),
        20 => array(
          'var' => 'num_rating_4',
          'type' => TType::I16,
          ),
        21 => array(
          'var' => 'num_rating_5',
          'type' => TType::I16,
          ),
        22 => array(
          'var' => 'created_at',
          'type' => TType::I64,
          ),
        23 => array(
          'var' => 'image_url',
          'type' => TType::STRING,
          ),
        24 => array(
          'var' => 'image_hash',
          'type' => TType::STRING,
          ),
        25 => array(
          'var' => 'phone',
          'type' => TType::STRING,
          ),
        26 => array(
          'var' => 'mobile',
          'type' => TType::STRING,
          ),
        27 => array(
          'var' => 'order_mode',
          'type' => TType::I16,
          ),
        28 => array(
          'var' => 'promotion_info',
          'type' => TType::STRING,
          ),
        29 => array(
          'var' => 'one_delivery',
          'type' => TType::I16,
          ),
        30 => array(
          'var' => 'pinyin_name',
          'type' => TType::STRING,
          ),
        31 => array(
          'var' => 'name_for_url',
          'type' => TType::STRING,
          ),
        32 => array(
          'var' => 'min_deliver_amount',
          'type' => TType::I16,
          ),
        33 => array(
          'var' => 'close_description',
          'type' => TType::STRING,
          ),
        34 => array(
          'var' => 'is_saas',
          'type' => TType::I16,
          ),
        35 => array(
          'var' => 'header_image_url',
          'type' => TType::STRING,
          ),
        36 => array(
          'var' => 'waimai_num_print_copies',
          'type' => TType::I16,
          ),
        37 => array(
          'var' => 'tangchi_num_print_copies',
          'type' => TType::I16,
          ),
        38 => array(
          'var' => 'printer_version',
          'type' => TType::STRING,
          ),
        39 => array(
          'var' => 'sn',
          'type' => TType::I16,
          ),
        40 => array(
          'var' => 'deliver_radius',
          'type' => TType::I16,
          ),
        41 => array(
          'var' => 'min_lng',
          'type' => TType::DOUBLE,
          ),
        42 => array(
          'var' => 'max_lng',
          'type' => TType::DOUBLE,
          ),
        43 => array(
          'var' => 'min_lat',
          'type' => TType::DOUBLE,
          ),
        44 => array(
          'var' => 'max_lat',
          'type' => TType::DOUBLE,
          ),
        45 => array(
          'var' => 'is_bookable',
          'type' => TType::I16,
          ),
        46 => array(
          'var' => 'flavors',
          'type' => TType::STRING,
          ),
        47 => array(
          'var' => 'dine_enabled',
          'type' => TType::I16,
          ),
        48 => array(
          'var' => 'deliver_spent',
          'type' => TType::I16,
          ),
        49 => array(
          'var' => 'is_time_ensure',
          'type' => TType::I16,
          ),
        50 => array(
          'var' => 'time_ensure_description',
          'type' => TType::STRING,
          ),
        51 => array(
          'var' => 'time_ensure_at',
          'type' => TType::I64,
          ),
        52 => array(
          'var' => 'time_ensure_spent',
          'type' => TType::I16,
          ),
        53 => array(
          'var' => 'time_ensure_discount',
          'type' => TType::STRING,
          ),
        54 => array(
          'var' => 'city_id',
          'type' => TType::I16,
          ),
        55 => array(
          'var' => 'is_phone_hidden',
          'type' => TType::I16,
          ),
        56 => array(
          'var' => 'coupon_enabled',
          'type' => TType::I16,
          ),
        57 => array(
          'var' => 'coupon_start_at',
          'type' => TType::I64,
          ),
        58 => array(
          'var' => 'coupon_end_at',
          'type' => TType::I64,
          ),
        59 => array(
          'var' => 'coupon_number',
          'type' => TType::I32,
          ),
        60 => array(
          'var' => 'coupon_discount',
          'type' => TType::I16,
          ),
        61 => array(
          'var' => 'paper_width',
          'type' => TType::STRING,
          ),
        62 => array(
          'var' => 'auto_print_tangchi',
          'type' => TType::I16,
          ),
        63 => array(
          'var' => 'speed_coef1',
          'type' => TType::DOUBLE,
          ),
        64 => array(
          'var' => 'speed_coef2',
          'type' => TType::DOUBLE,
          ),
        65 => array(
          'var' => 'speed_coef3',
          'type' => TType::DOUBLE,
          ),
        66 => array(
          'var' => 'avg_comment_time',
          'type' => TType::DOUBLE,
          ),
        68 => array(
          'var' => 'activities',
          'type' => TType::STRING,
          ),
        69 => array(
          'var' => 'has_food_img',
          'type' => TType::I16,
          ),
        70 => array(
          'var' => 'online_payment',
          'type' => TType::I16,
          ),
        71 => array(
          'var' => 'invoice',
          'type' => TType::I16,
          ),
        72 => array(
          'var' => 'invoice_min_amount',
          'type' => TType::DOUBLE,
          ),
        73 => array(
          'var' => 'attribute',
          'type' => TType::STRING,
          ),
        74 => array(
          'var' => 'deliver_area',
          'type' => TType::STRING,
          ),
        75 => array(
          'var' => 'open_date',
          'type' => TType::STRING,
          ),
        76 => array(
          'var' => 'original_order_quantity',
          'type' => TType::DOUBLE,
          ),
        77 => array(
          'var' => 'keeper_name',
          'type' => TType::STRING,
          ),
        78 => array(
          'var' => 'keeper_phone',
          'type' => TType::STRING,
          ),
        79 => array(
          'var' => 'remark',
          'type' => TType::STRING,
          ),
        80 => array(
          'var' => 'corporation',
          'type' => TType::STRING,
          ),
        81 => array(
          'var' => 'geohash_ranking_weight',
          'type' => TType::I32,
          ),
        82 => array(
          'var' => 'serving_time',
          'type' => TType::LST,
          'etype' => TType::LST,
          'elem' => array(
            'type' => TType::LST,
            'etype' => TType::STRING,
            'elem' => array(
              'type' => TType::STRING,
              ),
            ),
          ),
        83 => array(
          'var' => 'num_ratings',
          'type' => TType::LST,
          'etype' => TType::I16,
          'elem' => array(
            'type' => TType::I16,
            ),
          ),
        84 => array(
          'var' => 'recent_food_popularity',
          'type' => TType::I32,
          ),
        85 => array(
          'var' => 'is_premium',
          'type' => TType::I16,
          ),
        86 => array(
          'var' => 'deliver_times',
          'type' => TType::LST,
          'etype' => TType::STRING,
          'elem' => array(
            'type' => TType::STRING,
            ),
          ),
        87 => array(
          'var' => 'napos_client_settings',
          'type' => TType::STRING,
          ),
        88 => array(
          'var' => 'keeper_identity_card',
          'type' => TType::STRING,
          ),
        89 => array(
          'var' => 'support_coupon',
          'type' => TType::BOOL,
          ),
        90 => array(
          'var' => 'time_ensure_full_description',
          'type' => TType::STRING,
          ),
        91 => array(
          'var' => 'come_from',
          'type' => TType::I32,
          ),
        92 => array(
          'var' => 'no_agent_fee_total',
          'type' => TType::I32,
          ),
        93 => array(
          'var' => 'service_category',
          'type' => TType::I32,
          ),
        94 => array(
          'var' => 'dock_corp_id',
          'type' => TType::I32,
          ),
        95 => array(
          'var' => 'deliver_geojson',
          'type' => TType::STRING,
          ),
        96 => array(
          'var' => 'service_rating',
          'type' => TType::DOUBLE,
          ),
        97 => array(
          'var' => 'recent_order_num',
          'type' => TType::I32,
          ),
        98 => array(
          'var' => 'has_activity',
          'type' => TType::I32,
          ),
        99 => array(
          'var' => 'certification_type',
          'type' => TType::I16,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TRestaurant';
  }

  public function read($input)
  {
    return $this->_read('TRestaurant', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TRestaurant', self::$_TSPEC, $output);
  }
}

class TRestaurantRate extends TBase {
  static $_TSPEC;

  public $id = null;
  public $restaurant_id = null;
  public $num_service_rating_1 = null;
  public $num_service_rating_2 = null;
  public $num_service_rating_3 = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'restaurant_id',
          'type' => TType::I32,
          ),
        3 => array(
          'var' => 'num_service_rating_1',
          'type' => TType::I32,
          ),
        4 => array(
          'var' => 'num_service_rating_2',
          'type' => TType::I32,
          ),
        5 => array(
          'var' => 'num_service_rating_3',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TRestaurantRate';
  }

  public function read($input)
  {
    return $this->_read('TRestaurantRate', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TRestaurantRate', self::$_TSPEC, $output);
  }
}

class TRestaurantEvaluation extends TBase {
  static $_TSPEC;

  public $id = null;
  public $recent_daily_sales = null;
  public $recent_daily_order_num = null;
  public $recent_daily_sales_trend = null;
  public $recent_daily_order_num_trend = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'recent_daily_sales',
          'type' => TType::DOUBLE,
          ),
        3 => array(
          'var' => 'recent_daily_order_num',
          'type' => TType::DOUBLE,
          ),
        4 => array(
          'var' => 'recent_daily_sales_trend',
          'type' => TType::DOUBLE,
          ),
        5 => array(
          'var' => 'recent_daily_order_num_trend',
          'type' => TType::DOUBLE,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TRestaurantEvaluation';
  }

  public function read($input)
  {
    return $this->_read('TRestaurantEvaluation', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TRestaurantEvaluation', self::$_TSPEC, $output);
  }
}

class TRestaurantSearchQuery extends TBase {
  static $_TSPEC;

  public $keyword = null;
  public $restaurant_ids = null;
  public $city_ids = null;
  public $offset = null;
  public $size = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'keyword',
          'type' => TType::STRING,
          ),
        2 => array(
          'var' => 'restaurant_ids',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        3 => array(
          'var' => 'city_ids',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        4 => array(
          'var' => 'offset',
          'type' => TType::I32,
          ),
        5 => array(
          'var' => 'size',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TRestaurantSearchQuery';
  }

  public function read($input)
  {
    return $this->_read('TRestaurantSearchQuery', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TRestaurantSearchQuery', self::$_TSPEC, $output);
  }
}

class TRestaurantAreaSearchQuery extends TBase {
  static $_TSPEC;

  public $latitude = null;
  public $longitude = null;
  public $keyword = null;
  public $offset = null;
  public $size = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'latitude',
          'type' => TType::DOUBLE,
          ),
        2 => array(
          'var' => 'longitude',
          'type' => TType::DOUBLE,
          ),
        4 => array(
          'var' => 'keyword',
          'type' => TType::STRING,
          ),
        5 => array(
          'var' => 'offset',
          'type' => TType::I32,
          ),
        6 => array(
          'var' => 'size',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TRestaurantAreaSearchQuery';
  }

  public function read($input)
  {
    return $this->_read('TRestaurantAreaSearchQuery', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TRestaurantAreaSearchQuery', self::$_TSPEC, $output);
  }
}

class TRestaurantCertificationSearchQuery extends TBase {
  static $_TSPEC;

  public $status = null;
  public $offset = null;
  public $size = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'status',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'offset',
          'type' => TType::I32,
          ),
        3 => array(
          'var' => 'size',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TRestaurantCertificationSearchQuery';
  }

  public function read($input)
  {
    return $this->_read('TRestaurantCertificationSearchQuery', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TRestaurantCertificationSearchQuery', self::$_TSPEC, $output);
  }
}

class TLeanRestaurant extends TBase {
  static $_TSPEC;

  public $id = null;
  public $is_valid = null;
  public $agent_fee = null;
  public $busy_level = null;
  public $name = null;
  public $description = null;
  public $address_text = null;
  public $deliver_amount = null;
  public $total_status = null;
  public $support_online = null;
  public $open_time_bitmap = null;
  public $book_time_bitmap = null;
  public $deliver_description = null;
  public $image_hash = null;
  public $phone = null;
  public $mobile = null;
  public $order_mode = null;
  public $promotion_info = null;
  public $pinyin_name = null;
  public $name_for_url = null;
  public $close_description = null;
  public $is_bookable = null;
  public $flavors = null;
  public $deliver_spent = null;
  public $is_time_ensure = null;
  public $time_ensure_full_description = null;
  public $city_id = null;
  public $is_phone_hidden = null;
  public $support_coupon = null;
  public $coupon_discount = null;
  public $speed_coef1 = null;
  public $speed_coef2 = null;
  public $speed_coef3 = null;
  public $online_payment = null;
  public $invoice = null;
  public $invoice_min_amount = null;
  public $attribute = null;
  public $num_ratings = null;
  public $is_premium = null;
  public $latitude = null;
  public $longitude = null;
  public $recent_food_popularity = null;
  public $created_at = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'is_valid',
          'type' => TType::I16,
          ),
        3 => array(
          'var' => 'agent_fee',
          'type' => TType::I16,
          ),
        4 => array(
          'var' => 'busy_level',
          'type' => TType::I16,
          ),
        5 => array(
          'var' => 'name',
          'type' => TType::STRING,
          ),
        6 => array(
          'var' => 'description',
          'type' => TType::STRING,
          ),
        7 => array(
          'var' => 'address_text',
          'type' => TType::STRING,
          ),
        8 => array(
          'var' => 'deliver_amount',
          'type' => TType::I16,
          ),
        9 => array(
          'var' => 'total_status',
          'type' => TType::I16,
          ),
        10 => array(
          'var' => 'support_online',
          'type' => TType::BOOL,
          ),
        11 => array(
          'var' => 'open_time_bitmap',
          'type' => TType::STRING,
          ),
        12 => array(
          'var' => 'book_time_bitmap',
          'type' => TType::STRING,
          ),
        13 => array(
          'var' => 'deliver_description',
          'type' => TType::STRING,
          ),
        14 => array(
          'var' => 'image_hash',
          'type' => TType::STRING,
          ),
        15 => array(
          'var' => 'phone',
          'type' => TType::STRING,
          ),
        16 => array(
          'var' => 'mobile',
          'type' => TType::STRING,
          ),
        17 => array(
          'var' => 'order_mode',
          'type' => TType::I16,
          ),
        18 => array(
          'var' => 'promotion_info',
          'type' => TType::STRING,
          ),
        19 => array(
          'var' => 'pinyin_name',
          'type' => TType::STRING,
          ),
        20 => array(
          'var' => 'name_for_url',
          'type' => TType::STRING,
          ),
        21 => array(
          'var' => 'close_description',
          'type' => TType::STRING,
          ),
        22 => array(
          'var' => 'is_bookable',
          'type' => TType::I16,
          ),
        23 => array(
          'var' => 'flavors',
          'type' => TType::STRING,
          ),
        24 => array(
          'var' => 'deliver_spent',
          'type' => TType::I16,
          ),
        25 => array(
          'var' => 'is_time_ensure',
          'type' => TType::I16,
          ),
        26 => array(
          'var' => 'time_ensure_full_description',
          'type' => TType::STRING,
          ),
        27 => array(
          'var' => 'city_id',
          'type' => TType::I16,
          ),
        28 => array(
          'var' => 'is_phone_hidden',
          'type' => TType::I16,
          ),
        29 => array(
          'var' => 'support_coupon',
          'type' => TType::BOOL,
          ),
        30 => array(
          'var' => 'coupon_discount',
          'type' => TType::I16,
          ),
        31 => array(
          'var' => 'speed_coef1',
          'type' => TType::DOUBLE,
          ),
        32 => array(
          'var' => 'speed_coef2',
          'type' => TType::DOUBLE,
          ),
        33 => array(
          'var' => 'speed_coef3',
          'type' => TType::DOUBLE,
          ),
        34 => array(
          'var' => 'online_payment',
          'type' => TType::I16,
          ),
        35 => array(
          'var' => 'invoice',
          'type' => TType::I16,
          ),
        36 => array(
          'var' => 'invoice_min_amount',
          'type' => TType::DOUBLE,
          ),
        37 => array(
          'var' => 'attribute',
          'type' => TType::STRING,
          ),
        38 => array(
          'var' => 'num_ratings',
          'type' => TType::LST,
          'etype' => TType::I16,
          'elem' => array(
            'type' => TType::I16,
            ),
          ),
        39 => array(
          'var' => 'is_premium',
          'type' => TType::I16,
          ),
        40 => array(
          'var' => 'latitude',
          'type' => TType::DOUBLE,
          ),
        41 => array(
          'var' => 'longitude',
          'type' => TType::DOUBLE,
          ),
        42 => array(
          'var' => 'recent_food_popularity',
          'type' => TType::I32,
          ),
        43 => array(
          'var' => 'created_at',
          'type' => TType::I64,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TLeanRestaurant';
  }

  public function read($input)
  {
    return $this->_read('TLeanRestaurant', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TLeanRestaurant', self::$_TSPEC, $output);
  }
}

class TRestaurantBankcard extends TBase {
  static $_TSPEC;

  public $restaurant_id = null;
  public $card_id = null;
  public $bank_id = null;
  public $branch_name = null;
  public $cardholder_name = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'restaurant_id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'card_id',
          'type' => TType::STRING,
          ),
        3 => array(
          'var' => 'bank_id',
          'type' => TType::I16,
          ),
        4 => array(
          'var' => 'branch_name',
          'type' => TType::STRING,
          ),
        5 => array(
          'var' => 'cardholder_name',
          'type' => TType::STRING,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TRestaurantBankcard';
  }

  public function read($input)
  {
    return $this->_read('TRestaurantBankcard', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TRestaurantBankcard', self::$_TSPEC, $output);
  }
}

class TCBankcard extends TBase {
  static $_TSPEC;

  public $card_id = null;
  public $bank_id = null;
  public $cardholder_name = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'card_id',
          'type' => TType::STRING,
          ),
        2 => array(
          'var' => 'bank_id',
          'type' => TType::I16,
          ),
        3 => array(
          'var' => 'cardholder_name',
          'type' => TType::STRING,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TCBankcard';
  }

  public function read($input)
  {
    return $this->_read('TCBankcard', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TCBankcard', self::$_TSPEC, $output);
  }
}

class TFavoredRestaurant extends TBase {
  static $_TSPEC;

  public $id = null;
  public $restaurant_id = null;
  public $created_at = null;
  public $user_id = null;
  public $weight = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'restaurant_id',
          'type' => TType::I32,
          ),
        3 => array(
          'var' => 'created_at',
          'type' => TType::I64,
          ),
        4 => array(
          'var' => 'user_id',
          'type' => TType::I32,
          ),
        5 => array(
          'var' => 'weight',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TFavoredRestaurant';
  }

  public function read($input)
  {
    return $this->_read('TFavoredRestaurant', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TFavoredRestaurant', self::$_TSPEC, $output);
  }
}

class TFood extends TBase {
  static $_TSPEC;

  public $id = null;
  public $restaurant_id = null;
  public $name = null;
  public $original_price = null;
  public $price = null;
  public $is_valid = null;
  public $image_url = null;
  public $image_hash = null;
  public $description = null;
  public $num_rating_1 = null;
  public $num_rating_2 = null;
  public $num_rating_3 = null;
  public $num_rating_4 = null;
  public $num_rating_5 = null;
  public $attribute = null;
  public $created_at = null;
  public $category_id = null;
  public $updated_at = null;
  public $pinyin_name = null;
  public $is_new = null;
  public $is_featured = null;
  public $is_gum = null;
  public $is_spicy = null;
  public $sn = null;
  public $recent_popularity = null;
  public $recent_rating = null;
  public $stock = null;
  public $max_stock = null;
  public $daily_reset = null;
  public $price_changed_at = null;
  public $has_activity = null;
  public $packing_fee = null;
  public $sort_order = null;
  public $removed_at = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'restaurant_id',
          'type' => TType::I32,
          ),
        3 => array(
          'var' => 'name',
          'type' => TType::STRING,
          ),
        4 => array(
          'var' => 'original_price',
          'type' => TType::DOUBLE,
          ),
        5 => array(
          'var' => 'price',
          'type' => TType::DOUBLE,
          ),
        6 => array(
          'var' => 'is_valid',
          'type' => TType::I16,
          ),
        7 => array(
          'var' => 'image_url',
          'type' => TType::STRING,
          ),
        8 => array(
          'var' => 'image_hash',
          'type' => TType::STRING,
          ),
        9 => array(
          'var' => 'description',
          'type' => TType::STRING,
          ),
        10 => array(
          'var' => 'num_rating_1',
          'type' => TType::I16,
          ),
        11 => array(
          'var' => 'num_rating_2',
          'type' => TType::I16,
          ),
        12 => array(
          'var' => 'num_rating_3',
          'type' => TType::I16,
          ),
        13 => array(
          'var' => 'num_rating_4',
          'type' => TType::I16,
          ),
        14 => array(
          'var' => 'num_rating_5',
          'type' => TType::I16,
          ),
        16 => array(
          'var' => 'attribute',
          'type' => TType::STRING,
          ),
        17 => array(
          'var' => 'created_at',
          'type' => TType::I64,
          ),
        18 => array(
          'var' => 'category_id',
          'type' => TType::I32,
          ),
        19 => array(
          'var' => 'updated_at',
          'type' => TType::I64,
          ),
        20 => array(
          'var' => 'pinyin_name',
          'type' => TType::STRING,
          ),
        21 => array(
          'var' => 'is_new',
          'type' => TType::I16,
          ),
        22 => array(
          'var' => 'is_featured',
          'type' => TType::I16,
          ),
        23 => array(
          'var' => 'is_gum',
          'type' => TType::I16,
          ),
        24 => array(
          'var' => 'is_spicy',
          'type' => TType::I16,
          ),
        25 => array(
          'var' => 'sn',
          'type' => TType::STRING,
          ),
        26 => array(
          'var' => 'recent_popularity',
          'type' => TType::I32,
          ),
        27 => array(
          'var' => 'recent_rating',
          'type' => TType::DOUBLE,
          ),
        29 => array(
          'var' => 'stock',
          'type' => TType::I32,
          ),
        30 => array(
          'var' => 'max_stock',
          'type' => TType::I32,
          ),
        31 => array(
          'var' => 'daily_reset',
          'type' => TType::BOOL,
          ),
        32 => array(
          'var' => 'price_changed_at',
          'type' => TType::I64,
          ),
        33 => array(
          'var' => 'has_activity',
          'type' => TType::I16,
          ),
        34 => array(
          'var' => 'packing_fee',
          'type' => TType::DOUBLE,
          ),
        35 => array(
          'var' => 'sort_order',
          'type' => TType::I32,
          ),
        36 => array(
          'var' => 'removed_at',
          'type' => TType::I64,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TFood';
  }

  public function read($input)
  {
    return $this->_read('TFood', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TFood', self::$_TSPEC, $output);
  }
}

class TFoodSearchQuery extends TBase {
  static $_TSPEC;

  public $keyword = null;
  public $restaurant_ids = null;
  public $city_ids = null;
  public $offset = null;
  public $size = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'keyword',
          'type' => TType::STRING,
          ),
        2 => array(
          'var' => 'restaurant_ids',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        3 => array(
          'var' => 'city_ids',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        4 => array(
          'var' => 'offset',
          'type' => TType::I32,
          ),
        5 => array(
          'var' => 'size',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TFoodSearchQuery';
  }

  public function read($input)
  {
    return $this->_read('TFoodSearchQuery', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TFoodSearchQuery', self::$_TSPEC, $output);
  }
}

class TFoodCategory extends TBase {
  static $_TSPEC;

  public $id = null;
  public $restaurant_id = null;
  public $name = null;
  public $weight = null;
  public $is_valid = null;
  public $attributes = null;
  public $created_at = null;
  public $attribute_list = null;
  public $description = null;
  public $removed_at = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'restaurant_id',
          'type' => TType::I32,
          ),
        3 => array(
          'var' => 'name',
          'type' => TType::STRING,
          ),
        4 => array(
          'var' => 'weight',
          'type' => TType::I32,
          ),
        5 => array(
          'var' => 'is_valid',
          'type' => TType::I16,
          ),
        6 => array(
          'var' => 'attributes',
          'type' => TType::STRING,
          ),
        7 => array(
          'var' => 'created_at',
          'type' => TType::I64,
          ),
        8 => array(
          'var' => 'attribute_list',
          'type' => TType::LST,
          'etype' => TType::STRING,
          'elem' => array(
            'type' => TType::STRING,
            ),
          ),
        9 => array(
          'var' => 'description',
          'type' => TType::STRING,
          ),
        10 => array(
          'var' => 'removed_at',
          'type' => TType::I64,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TFoodCategory';
  }

  public function read($input)
  {
    return $this->_read('TFoodCategory', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TFoodCategory', self::$_TSPEC, $output);
  }
}

class TFoodFlavor extends TBase {
  static $_TSPEC;

  public $id = null;
  public $food_id = null;
  public $food_category_id = null;
  public $restaurant_id = null;
  public $flavor_name = null;
  public $flavor_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'food_id',
          'type' => TType::I32,
          ),
        3 => array(
          'var' => 'food_category_id',
          'type' => TType::I32,
          ),
        4 => array(
          'var' => 'restaurant_id',
          'type' => TType::I32,
          ),
        5 => array(
          'var' => 'flavor_name',
          'type' => TType::STRING,
          ),
        6 => array(
          'var' => 'flavor_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TFoodFlavor';
  }

  public function read($input)
  {
    return $this->_read('TFoodFlavor', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TFoodFlavor', self::$_TSPEC, $output);
  }
}

class TRestaurantFlavor extends TBase {
  static $_TSPEC;

  public $id = null;
  public $restaurant_id = null;
  public $flavor_name = null;
  public $flavor_id = null;
  public $is_manually = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'restaurant_id',
          'type' => TType::I32,
          ),
        3 => array(
          'var' => 'flavor_name',
          'type' => TType::STRING,
          ),
        4 => array(
          'var' => 'flavor_id',
          'type' => TType::I32,
          ),
        5 => array(
          'var' => 'is_manually',
          'type' => TType::I16,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TRestaurantFlavor';
  }

  public function read($input)
  {
    return $this->_read('TRestaurantFlavor', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TRestaurantFlavor', self::$_TSPEC, $output);
  }
}

class TFoodUgcImage extends TBase {
  static $_TSPEC;

  public $id = null;
  public $food_id = null;
  public $food_name = null;
  public $restaurant_id = null;
  public $image_hash = null;
  public $user_id = null;
  public $user_name = null;
  public $avatar_hash = null;
  public $order_item_id = null;
  public $status = null;
  public $created_at = null;
  public $sn = null;
  public $come_from = null;
  public $like_count = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'food_id',
          'type' => TType::I32,
          ),
        3 => array(
          'var' => 'food_name',
          'type' => TType::STRING,
          ),
        4 => array(
          'var' => 'restaurant_id',
          'type' => TType::I32,
          ),
        5 => array(
          'var' => 'image_hash',
          'type' => TType::STRING,
          ),
        6 => array(
          'var' => 'user_id',
          'type' => TType::I32,
          ),
        7 => array(
          'var' => 'user_name',
          'type' => TType::STRING,
          ),
        8 => array(
          'var' => 'avatar_hash',
          'type' => TType::STRING,
          ),
        9 => array(
          'var' => 'order_item_id',
          'type' => TType::I32,
          ),
        10 => array(
          'var' => 'status',
          'type' => TType::I16,
          ),
        11 => array(
          'var' => 'created_at',
          'type' => TType::I64,
          ),
        12 => array(
          'var' => 'sn',
          'type' => TType::STRING,
          ),
        13 => array(
          'var' => 'come_from',
          'type' => TType::I16,
          ),
        14 => array(
          'var' => 'like_count',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TFoodUgcImage';
  }

  public function read($input)
  {
    return $this->_read('TFoodUgcImage', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TFoodUgcImage', self::$_TSPEC, $output);
  }
}

class TFoodUgcImageQuery extends TBase {
  static $_TSPEC;

  public $limit = null;
  public $offset = null;
  public $keyword = null;
  public $food_ids = null;
  public $restaurant_ids = null;
  public $user_ids = null;
  public $statuses = null;
  public $order_item_ids = null;
  public $created_at_from = null;
  public $created_at_to = null;
  public $come_from = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'limit',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'offset',
          'type' => TType::I32,
          ),
        3 => array(
          'var' => 'keyword',
          'type' => TType::STRING,
          ),
        4 => array(
          'var' => 'food_ids',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        5 => array(
          'var' => 'restaurant_ids',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        6 => array(
          'var' => 'user_ids',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        7 => array(
          'var' => 'statuses',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        8 => array(
          'var' => 'order_item_ids',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        9 => array(
          'var' => 'created_at_from',
          'type' => TType::I64,
          ),
        10 => array(
          'var' => 'created_at_to',
          'type' => TType::I64,
          ),
        11 => array(
          'var' => 'come_from',
          'type' => TType::I16,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TFoodUgcImageQuery';
  }

  public function read($input)
  {
    return $this->_read('TFoodUgcImageQuery', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TFoodUgcImageQuery', self::$_TSPEC, $output);
  }
}

class TFoodUgcImageCover extends TBase {
  static $_TSPEC;

  public $id = null;
  public $food_id = null;
  public $restaurant_id = null;
  public $count = null;
  public $cover_update = null;
  public $cover_image_hash = null;
  public $cover_user_id = null;
  public $cover_user_name = null;
  public $cover_avatar_hash = null;
  public $is_valid = null;
  public $food_ugc_image_id = null;
  public $order_item_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'food_id',
          'type' => TType::I32,
          ),
        3 => array(
          'var' => 'restaurant_id',
          'type' => TType::I32,
          ),
        4 => array(
          'var' => 'count',
          'type' => TType::I32,
          ),
        5 => array(
          'var' => 'cover_update',
          'type' => TType::I64,
          ),
        6 => array(
          'var' => 'cover_image_hash',
          'type' => TType::STRING,
          ),
        7 => array(
          'var' => 'cover_user_id',
          'type' => TType::I32,
          ),
        8 => array(
          'var' => 'cover_user_name',
          'type' => TType::STRING,
          ),
        9 => array(
          'var' => 'cover_avatar_hash',
          'type' => TType::STRING,
          ),
        10 => array(
          'var' => 'is_valid',
          'type' => TType::I16,
          ),
        11 => array(
          'var' => 'food_ugc_image_id',
          'type' => TType::I32,
          ),
        12 => array(
          'var' => 'order_item_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TFoodUgcImageCover';
  }

  public function read($input)
  {
    return $this->_read('TFoodUgcImageCover', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TFoodUgcImageCover', self::$_TSPEC, $output);
  }
}

class TFoodUgcImageCoverQuery extends TBase {
  static $_TSPEC;

  public $limit = null;
  public $offset = null;
  public $keyword = null;
  public $food_ids = null;
  public $restaurant_ids = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'limit',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'offset',
          'type' => TType::I32,
          ),
        3 => array(
          'var' => 'keyword',
          'type' => TType::STRING,
          ),
        4 => array(
          'var' => 'food_ids',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        5 => array(
          'var' => 'restaurant_ids',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TFoodUgcImageCoverQuery';
  }

  public function read($input)
  {
    return $this->_read('TFoodUgcImageCoverQuery', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TFoodUgcImageCoverQuery', self::$_TSPEC, $output);
  }
}

class TFoodUgcImagePr extends TBase {
  static $_TSPEC;

  public $id = null;
  public $user_id = null;
  public $food_ugc_image_id = null;
  public $from_status = null;
  public $to_status = null;
  public $remark = null;
  public $created_at = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'user_id',
          'type' => TType::I32,
          ),
        3 => array(
          'var' => 'food_ugc_image_id',
          'type' => TType::I32,
          ),
        4 => array(
          'var' => 'from_status',
          'type' => TType::I16,
          ),
        5 => array(
          'var' => 'to_status',
          'type' => TType::I16,
          ),
        6 => array(
          'var' => 'remark',
          'type' => TType::STRING,
          ),
        7 => array(
          'var' => 'created_at',
          'type' => TType::I64,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TFoodUgcImagePr';
  }

  public function read($input)
  {
    return $this->_read('TFoodUgcImagePr', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TFoodUgcImagePr', self::$_TSPEC, $output);
  }
}

class TFriendLinkQuery extends TBase {
  static $_TSPEC;

  public $name = null;
  public $is_valid = null;
  public $offset = null;
  public $limit = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'name',
          'type' => TType::STRING,
          ),
        2 => array(
          'var' => 'is_valid',
          'type' => TType::I16,
          ),
        3 => array(
          'var' => 'offset',
          'type' => TType::I32,
          ),
        4 => array(
          'var' => 'limit',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TFriendLinkQuery';
  }

  public function read($input)
  {
    return $this->_read('TFriendLinkQuery', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TFriendLinkQuery', self::$_TSPEC, $output);
  }
}

class TFriendLink extends TBase {
  static $_TSPEC;

  public $id = null;
  public $weight = null;
  public $link = null;
  public $name = null;
  public $is_valid = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'weight',
          'type' => TType::I32,
          ),
        3 => array(
          'var' => 'link',
          'type' => TType::STRING,
          ),
        4 => array(
          'var' => 'name',
          'type' => TType::STRING,
          ),
        5 => array(
          'var' => 'is_valid',
          'type' => TType::I16,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TFriendLink';
  }

  public function read($input)
  {
    return $this->_read('TFriendLink', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TFriendLink', self::$_TSPEC, $output);
  }
}

class TQuickMessageQuery extends TBase {
  static $_TSPEC;

  public $title = null;
  public $content = null;
  public $search = null;
  public $offset = null;
  public $limit = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'title',
          'type' => TType::STRING,
          ),
        2 => array(
          'var' => 'content',
          'type' => TType::STRING,
          ),
        3 => array(
          'var' => 'search',
          'type' => TType::STRING,
          ),
        4 => array(
          'var' => 'offset',
          'type' => TType::I32,
          ),
        5 => array(
          'var' => 'limit',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TQuickMessageQuery';
  }

  public function read($input)
  {
    return $this->_read('TQuickMessageQuery', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TQuickMessageQuery', self::$_TSPEC, $output);
  }
}

class TQuickMessage extends TBase {
  static $_TSPEC;

  public $id = null;
  public $title = null;
  public $content = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'title',
          'type' => TType::STRING,
          ),
        3 => array(
          'var' => 'content',
          'type' => TType::STRING,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TQuickMessage';
  }

  public function read($input)
  {
    return $this->_read('TQuickMessage', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TQuickMessage', self::$_TSPEC, $output);
  }
}

class TCFoodCategoryWithFoods extends TBase {
  static $_TSPEC;

  public $food_category = null;
  public $foods = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'food_category',
          'type' => TType::STRUCT,
          'class' => '\ERS\TFoodCategory',
          ),
        2 => array(
          'var' => 'foods',
          'type' => TType::LST,
          'etype' => TType::STRUCT,
          'elem' => array(
            'type' => TType::STRUCT,
            'class' => '\ERS\TFood',
            ),
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TCFoodCategoryWithFoods';
  }

  public function read($input)
  {
    return $this->_read('TCFoodCategoryWithFoods', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TCFoodCategoryWithFoods', self::$_TSPEC, $output);
  }
}

class TGarnishCategory extends TBase {
  static $_TSPEC;

  public $id = null;
  public $name = null;
  public $kind = null;
  public $rst_id = null;
  public $is_valid = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'name',
          'type' => TType::STRING,
          ),
        3 => array(
          'var' => 'kind',
          'type' => TType::I32,
          ),
        4 => array(
          'var' => 'rst_id',
          'type' => TType::I32,
          ),
        5 => array(
          'var' => 'is_valid',
          'type' => TType::BOOL,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TGarnishCategory';
  }

  public function read($input)
  {
    return $this->_read('TGarnishCategory', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TGarnishCategory', self::$_TSPEC, $output);
  }
}

class TGarnish extends TBase {
  static $_TSPEC;

  public $id = null;
  public $category_id = null;
  public $name = null;
  public $price = null;
  public $weight = null;
  public $is_valid = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'category_id',
          'type' => TType::I32,
          ),
        3 => array(
          'var' => 'name',
          'type' => TType::STRING,
          ),
        4 => array(
          'var' => 'price',
          'type' => TType::DOUBLE,
          ),
        5 => array(
          'var' => 'weight',
          'type' => TType::I16,
          ),
        6 => array(
          'var' => 'is_valid',
          'type' => TType::BOOL,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TGarnish';
  }

  public function read($input)
  {
    return $this->_read('TGarnish', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TGarnish', self::$_TSPEC, $output);
  }
}

class TFoodGarnishCategory extends TBase {
  static $_TSPEC;

  public $id = null;
  public $food_id = null;
  public $garnish_category_id = null;
  public $weight = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'food_id',
          'type' => TType::I32,
          ),
        3 => array(
          'var' => 'garnish_category_id',
          'type' => TType::I32,
          ),
        4 => array(
          'var' => 'weight',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TFoodGarnishCategory';
  }

  public function read($input)
  {
    return $this->_read('TFoodGarnishCategory', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TFoodGarnishCategory', self::$_TSPEC, $output);
  }
}

class TEntry extends TBase {
  static $_TSPEC;

  public $id = null;
  public $sn = null;
  public $name = null;
  public $pinyin = null;
  public $address = null;
  public $latitude = null;
  public $longitude = null;
  public $mobile_reserved = null;
  public $city_id = null;
  public $is_rsts_cached = null;
  public $created_at = null;
  public $district_id = null;
  public $zone_id = null;
  public $sort = null;
  public $is_valid = null;
  public $search = null;
  public $extra_tag = null;
  public $online_payment = null;
  public $to_geohash = null;
  public $migrate_status = null;
  public $psn = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'sn',
          'type' => TType::STRING,
          ),
        3 => array(
          'var' => 'name',
          'type' => TType::STRING,
          ),
        4 => array(
          'var' => 'pinyin',
          'type' => TType::STRING,
          ),
        5 => array(
          'var' => 'address',
          'type' => TType::STRING,
          ),
        6 => array(
          'var' => 'latitude',
          'type' => TType::DOUBLE,
          ),
        7 => array(
          'var' => 'longitude',
          'type' => TType::DOUBLE,
          ),
        9 => array(
          'var' => 'mobile_reserved',
          'type' => TType::I16,
          ),
        10 => array(
          'var' => 'city_id',
          'type' => TType::I32,
          ),
        11 => array(
          'var' => 'is_rsts_cached',
          'type' => TType::I16,
          ),
        12 => array(
          'var' => 'created_at',
          'type' => TType::I64,
          ),
        13 => array(
          'var' => 'district_id',
          'type' => TType::I32,
          ),
        14 => array(
          'var' => 'zone_id',
          'type' => TType::I32,
          ),
        15 => array(
          'var' => 'sort',
          'type' => TType::I32,
          ),
        16 => array(
          'var' => 'is_valid',
          'type' => TType::I16,
          ),
        17 => array(
          'var' => 'search',
          'type' => TType::STRING,
          ),
        18 => array(
          'var' => 'extra_tag',
          'type' => TType::STRING,
          ),
        19 => array(
          'var' => 'online_payment',
          'type' => TType::I16,
          ),
        20 => array(
          'var' => 'to_geohash',
          'type' => TType::I64,
          ),
        21 => array(
          'var' => 'migrate_status',
          'type' => TType::I16,
          ),
        22 => array(
          'var' => 'psn',
          'type' => TType::STRING,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TEntry';
  }

  public function read($input)
  {
    return $this->_read('TEntry', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TEntry', self::$_TSPEC, $output);
  }
}

class TRegion extends TBase {
  static $_TSPEC;

  public $id = null;
  public $name = null;
  public $type_code = null;
  public $has_geohash = null;
  public $color = null;
  public $area = null;
  public $city_id = null;
  public $created_at = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'name',
          'type' => TType::STRING,
          ),
        3 => array(
          'var' => 'type_code',
          'type' => TType::I32,
          ),
        4 => array(
          'var' => 'has_geohash',
          'type' => TType::I32,
          ),
        5 => array(
          'var' => 'color',
          'type' => TType::STRING,
          ),
        6 => array(
          'var' => 'area',
          'type' => TType::STRING,
          ),
        7 => array(
          'var' => 'city_id',
          'type' => TType::I32,
          ),
        8 => array(
          'var' => 'created_at',
          'type' => TType::I64,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TRegion';
  }

  public function read($input)
  {
    return $this->_read('TRegion', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TRegion', self::$_TSPEC, $output);
  }
}

class TArea extends TBase {
  static $_TSPEC;

  public $id = null;
  public $name = null;
  public $type_code = null;
  public $boundary = null;
  public $latitude = null;
  public $longitude = null;
  public $city_id = null;
  public $created_at = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'name',
          'type' => TType::STRING,
          ),
        3 => array(
          'var' => 'type_code',
          'type' => TType::I32,
          ),
        4 => array(
          'var' => 'boundary',
          'type' => TType::STRING,
          ),
        5 => array(
          'var' => 'latitude',
          'type' => TType::DOUBLE,
          ),
        6 => array(
          'var' => 'longitude',
          'type' => TType::DOUBLE,
          ),
        7 => array(
          'var' => 'city_id',
          'type' => TType::I32,
          ),
        8 => array(
          'var' => 'created_at',
          'type' => TType::I64,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TArea';
  }

  public function read($input)
  {
    return $this->_read('TArea', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TArea', self::$_TSPEC, $output);
  }
}

class TRegionGroup extends TBase {
  static $_TSPEC;

  public $id = null;
  public $name = null;
  public $city_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'name',
          'type' => TType::STRING,
          ),
        3 => array(
          'var' => 'city_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TRegionGroup';
  }

  public function read($input)
  {
    return $this->_read('TRegionGroup', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TRegionGroup', self::$_TSPEC, $output);
  }
}

class TCity extends TBase {
  static $_TSPEC;

  public $id = null;
  public $name = null;
  public $abbr = null;
  public $hint = null;
  public $area_code = null;
  public $company_name = null;
  public $company_address = null;
  public $sort = null;
  public $notice_emails = null;
  public $is_valid = null;
  public $district_code = null;
  public $boundary = null;
  public $latitude = null;
  public $longitude = null;
  public $company_abbr = null;
  public $country_region_id = null;
  public $is_map = null;
  public $pinyin = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'name',
          'type' => TType::STRING,
          ),
        3 => array(
          'var' => 'abbr',
          'type' => TType::STRING,
          ),
        4 => array(
          'var' => 'hint',
          'type' => TType::STRING,
          ),
        5 => array(
          'var' => 'area_code',
          'type' => TType::STRING,
          ),
        6 => array(
          'var' => 'company_name',
          'type' => TType::STRING,
          ),
        7 => array(
          'var' => 'company_address',
          'type' => TType::STRING,
          ),
        8 => array(
          'var' => 'sort',
          'type' => TType::I32,
          ),
        9 => array(
          'var' => 'notice_emails',
          'type' => TType::STRING,
          ),
        10 => array(
          'var' => 'is_valid',
          'type' => TType::I16,
          ),
        11 => array(
          'var' => 'district_code',
          'type' => TType::I32,
          ),
        12 => array(
          'var' => 'boundary',
          'type' => TType::STRING,
          ),
        13 => array(
          'var' => 'latitude',
          'type' => TType::DOUBLE,
          ),
        14 => array(
          'var' => 'longitude',
          'type' => TType::DOUBLE,
          ),
        15 => array(
          'var' => 'company_abbr',
          'type' => TType::STRING,
          ),
        16 => array(
          'var' => 'country_region_id',
          'type' => TType::I32,
          ),
        17 => array(
          'var' => 'is_map',
          'type' => TType::I16,
          ),
        18 => array(
          'var' => 'pinyin',
          'type' => TType::STRING,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TCity';
  }

  public function read($input)
  {
    return $this->_read('TCity', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TCity', self::$_TSPEC, $output);
  }
}

class TCountryRegion extends TBase {
  static $_TSPEC;

  public $id = null;
  public $name = null;
  public $sort = null;
  public $is_valid = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'name',
          'type' => TType::STRING,
          ),
        3 => array(
          'var' => 'sort',
          'type' => TType::I32,
          ),
        4 => array(
          'var' => 'is_valid',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TCountryRegion';
  }

  public function read($input)
  {
    return $this->_read('TCountryRegion', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TCountryRegion', self::$_TSPEC, $output);
  }
}

class TCountryRegionQuery extends TBase {
  static $_TSPEC;

  public $is_valid = null;
  public $offset = null;
  public $limit = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'is_valid',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'offset',
          'type' => TType::I32,
          ),
        3 => array(
          'var' => 'limit',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TCountryRegionQuery';
  }

  public function read($input)
  {
    return $this->_read('TCountryRegionQuery', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TCountryRegionQuery', self::$_TSPEC, $output);
  }
}

class TDistrict extends TBase {
  static $_TSPEC;

  public $id = null;
  public $name = null;
  public $city_id = null;
  public $sort = null;
  public $is_valid = null;
  public $created_at = null;
  public $attributes = null;
  public $need_az_group = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'name',
          'type' => TType::STRING,
          ),
        3 => array(
          'var' => 'city_id',
          'type' => TType::I32,
          ),
        4 => array(
          'var' => 'sort',
          'type' => TType::I32,
          ),
        5 => array(
          'var' => 'is_valid',
          'type' => TType::I16,
          ),
        6 => array(
          'var' => 'created_at',
          'type' => TType::I64,
          ),
        7 => array(
          'var' => 'attributes',
          'type' => TType::STRING,
          ),
        8 => array(
          'var' => 'need_az_group',
          'type' => TType::I16,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TDistrict';
  }

  public function read($input)
  {
    return $this->_read('TDistrict', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TDistrict', self::$_TSPEC, $output);
  }
}

class TDirectStruct extends TBase {
  static $_TSPEC;

  public $city_ids = null;
  public $region_group_ids = null;
  public $region_ids = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'city_ids',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        2 => array(
          'var' => 'region_group_ids',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        3 => array(
          'var' => 'region_ids',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TDirectStruct';
  }

  public function read($input)
  {
    return $this->_read('TDirectStruct', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TDirectStruct', self::$_TSPEC, $output);
  }
}

class TFreeGiftActivity extends TBase {
  static $_TSPEC;

  public $id = null;
  public $name = null;
  public $desc = null;
  public $attribute_name = null;
  public $image_hash = null;
  public $icon_hash = null;
  public $gift_name = null;
  public $unit_name = null;
  public $category_id = null;
  public $entity_category_id = null;
  public $entity_id = null;
  public $is_valid = null;
  public $show_in_filter = null;
  public $has_gift = null;
  public $icon_name = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'name',
          'type' => TType::STRING,
          ),
        3 => array(
          'var' => 'desc',
          'type' => TType::STRING,
          ),
        4 => array(
          'var' => 'attribute_name',
          'type' => TType::STRING,
          ),
        5 => array(
          'var' => 'image_hash',
          'type' => TType::STRING,
          ),
        6 => array(
          'var' => 'icon_hash',
          'type' => TType::STRING,
          ),
        7 => array(
          'var' => 'gift_name',
          'type' => TType::STRING,
          ),
        8 => array(
          'var' => 'unit_name',
          'type' => TType::STRING,
          ),
        9 => array(
          'var' => 'category_id',
          'type' => TType::I16,
          ),
        10 => array(
          'var' => 'entity_category_id',
          'type' => TType::I32,
          ),
        11 => array(
          'var' => 'entity_id',
          'type' => TType::I32,
          ),
        12 => array(
          'var' => 'is_valid',
          'type' => TType::I16,
          ),
        13 => array(
          'var' => 'show_in_filter',
          'type' => TType::BOOL,
          ),
        14 => array(
          'var' => 'has_gift',
          'type' => TType::BOOL,
          ),
        15 => array(
          'var' => 'icon_name',
          'type' => TType::STRING,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TFreeGiftActivity';
  }

  public function read($input)
  {
    return $this->_read('TFreeGiftActivity', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TFreeGiftActivity', self::$_TSPEC, $output);
  }
}

class TActivity extends TBase {
  static $_TSPEC;

  public $id = null;
  public $sn = null;
  public $description = null;
  public $image = null;
  public $image_hash = null;
  public $link = null;
  public $sort = null;
  public $created_at = null;
  public $start_date = null;
  public $end_date = null;
  public $is_valid = null;
  public $selected_cities = null;
  public $selected_regions = null;
  public $selected_region_groups = null;
  public $type = null;
  public $weekday = null;
  public $act_intro = null;
  public $act_how = null;
  public $act_scope = null;
  public $act_time = null;
  public $act_notice = null;
  public $act_image = null;
  public $act_image_hash = null;
  public $has_info = null;
  public $is_default = null;
  public $mobile_image_hash = null;
  public $mobile_intro = null;
  public $mobile_link = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'sn',
          'type' => TType::STRING,
          ),
        3 => array(
          'var' => 'description',
          'type' => TType::STRING,
          ),
        4 => array(
          'var' => 'image',
          'type' => TType::STRING,
          ),
        5 => array(
          'var' => 'image_hash',
          'type' => TType::STRING,
          ),
        6 => array(
          'var' => 'link',
          'type' => TType::STRING,
          ),
        7 => array(
          'var' => 'sort',
          'type' => TType::I32,
          ),
        8 => array(
          'var' => 'created_at',
          'type' => TType::I64,
          ),
        9 => array(
          'var' => 'start_date',
          'type' => TType::STRING,
          ),
        10 => array(
          'var' => 'end_date',
          'type' => TType::STRING,
          ),
        11 => array(
          'var' => 'is_valid',
          'type' => TType::BOOL,
          ),
        12 => array(
          'var' => 'selected_cities',
          'type' => TType::STRING,
          ),
        13 => array(
          'var' => 'selected_regions',
          'type' => TType::STRING,
          ),
        14 => array(
          'var' => 'selected_region_groups',
          'type' => TType::STRING,
          ),
        16 => array(
          'var' => 'type',
          'type' => TType::I16,
          ),
        17 => array(
          'var' => 'weekday',
          'type' => TType::STRING,
          ),
        18 => array(
          'var' => 'act_intro',
          'type' => TType::STRING,
          ),
        19 => array(
          'var' => 'act_how',
          'type' => TType::STRING,
          ),
        20 => array(
          'var' => 'act_scope',
          'type' => TType::STRING,
          ),
        21 => array(
          'var' => 'act_time',
          'type' => TType::STRING,
          ),
        22 => array(
          'var' => 'act_notice',
          'type' => TType::STRING,
          ),
        23 => array(
          'var' => 'act_image',
          'type' => TType::STRING,
          ),
        24 => array(
          'var' => 'act_image_hash',
          'type' => TType::STRING,
          ),
        25 => array(
          'var' => 'has_info',
          'type' => TType::I32,
          ),
        26 => array(
          'var' => 'is_default',
          'type' => TType::BOOL,
          ),
        27 => array(
          'var' => 'mobile_image_hash',
          'type' => TType::STRING,
          ),
        28 => array(
          'var' => 'mobile_intro',
          'type' => TType::STRING,
          ),
        29 => array(
          'var' => 'mobile_link',
          'type' => TType::STRING,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TActivity';
  }

  public function read($input)
  {
    return $this->_read('TActivity', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TActivity', self::$_TSPEC, $output);
  }
}

class TLogo extends TBase {
  static $_TSPEC;

  public $id = null;
  public $name = null;
  public $start_date = null;
  public $end_date = null;
  public $small_logo = null;
  public $small_logo_hash = null;
  public $big_logo = null;
  public $big_logo_hash = null;
  public $is_valid = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'name',
          'type' => TType::STRING,
          ),
        3 => array(
          'var' => 'start_date',
          'type' => TType::STRING,
          ),
        4 => array(
          'var' => 'end_date',
          'type' => TType::STRING,
          ),
        5 => array(
          'var' => 'small_logo',
          'type' => TType::STRING,
          ),
        6 => array(
          'var' => 'small_logo_hash',
          'type' => TType::STRING,
          ),
        7 => array(
          'var' => 'big_logo',
          'type' => TType::STRING,
          ),
        8 => array(
          'var' => 'big_logo_hash',
          'type' => TType::STRING,
          ),
        9 => array(
          'var' => 'is_valid',
          'type' => TType::BOOL,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TLogo';
  }

  public function read($input)
  {
    return $this->_read('TLogo', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TLogo', self::$_TSPEC, $output);
  }
}

class TRestaurantComment extends TBase {
  static $_TSPEC;

  public $id = null;
  public $user_id = null;
  public $restaurant_id = null;
  public $username = null;
  public $created_at = null;
  public $content = null;
  public $is_valid = null;
  public $feedback_id = null;
  public $avatar = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'user_id',
          'type' => TType::I32,
          ),
        3 => array(
          'var' => 'restaurant_id',
          'type' => TType::I32,
          ),
        4 => array(
          'var' => 'username',
          'type' => TType::STRING,
          ),
        5 => array(
          'var' => 'created_at',
          'type' => TType::I64,
          ),
        6 => array(
          'var' => 'content',
          'type' => TType::STRING,
          ),
        7 => array(
          'var' => 'is_valid',
          'type' => TType::I16,
          ),
        8 => array(
          'var' => 'feedback_id',
          'type' => TType::I32,
          ),
        9 => array(
          'var' => 'avatar',
          'type' => TType::STRING,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TRestaurantComment';
  }

  public function read($input)
  {
    return $this->_read('TRestaurantComment', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TRestaurantComment', self::$_TSPEC, $output);
  }
}

class TRestaurantCommentReply extends TBase {
  static $_TSPEC;

  public $id = null;
  public $comment_id = null;
  public $user_id = null;
  public $created_at = null;
  public $content = null;
  public $type = null;
  public $is_valid = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'comment_id',
          'type' => TType::I32,
          ),
        3 => array(
          'var' => 'user_id',
          'type' => TType::I32,
          ),
        4 => array(
          'var' => 'created_at',
          'type' => TType::I64,
          ),
        5 => array(
          'var' => 'content',
          'type' => TType::STRING,
          ),
        6 => array(
          'var' => 'type',
          'type' => TType::I32,
          ),
        7 => array(
          'var' => 'is_valid',
          'type' => TType::I16,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TRestaurantCommentReply';
  }

  public function read($input)
  {
    return $this->_read('TRestaurantCommentReply', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TRestaurantCommentReply', self::$_TSPEC, $output);
  }
}

class TWalleCommentReplyQuery extends TBase {
  static $_TSPEC;

  public $is_valid = null;
  public $search = null;
  public $offset = null;
  public $limit = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'is_valid',
          'type' => TType::I16,
          ),
        2 => array(
          'var' => 'search',
          'type' => TType::STRING,
          ),
        3 => array(
          'var' => 'offset',
          'type' => TType::I32,
          ),
        4 => array(
          'var' => 'limit',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TWalleCommentReplyQuery';
  }

  public function read($input)
  {
    return $this->_read('TWalleCommentReplyQuery', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TWalleCommentReplyQuery', self::$_TSPEC, $output);
  }
}

class TCWalleCommentReply extends TBase {
  static $_TSPEC;

  public $id = null;
  public $comment_id = null;
  public $user_id = null;
  public $created_at = null;
  public $content = null;
  public $type = null;
  public $is_valid = null;
  public $username = null;
  public $comment_content = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'comment_id',
          'type' => TType::I32,
          ),
        3 => array(
          'var' => 'user_id',
          'type' => TType::I32,
          ),
        4 => array(
          'var' => 'created_at',
          'type' => TType::I64,
          ),
        5 => array(
          'var' => 'content',
          'type' => TType::STRING,
          ),
        6 => array(
          'var' => 'type',
          'type' => TType::I32,
          ),
        7 => array(
          'var' => 'is_valid',
          'type' => TType::I16,
          ),
        8 => array(
          'var' => 'username',
          'type' => TType::STRING,
          ),
        9 => array(
          'var' => 'comment_content',
          'type' => TType::STRING,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TCWalleCommentReply';
  }

  public function read($input)
  {
    return $this->_read('TCWalleCommentReply', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TCWalleCommentReply', self::$_TSPEC, $output);
  }
}

class TCWalleRestaurantChangeRecord extends TBase {
  static $_TSPEC;

  public $id = null;
  public $restaurant_id = null;
  public $restaurant_name = null;
  public $status_name = null;
  public $from_status = null;
  public $to_status = null;
  public $remark = null;
  public $user_id = null;
  public $created_at = null;
  public $description = null;
  public $username = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'restaurant_id',
          'type' => TType::I32,
          ),
        3 => array(
          'var' => 'restaurant_name',
          'type' => TType::STRING,
          ),
        4 => array(
          'var' => 'status_name',
          'type' => TType::STRING,
          ),
        5 => array(
          'var' => 'from_status',
          'type' => TType::I32,
          ),
        6 => array(
          'var' => 'to_status',
          'type' => TType::I32,
          ),
        7 => array(
          'var' => 'remark',
          'type' => TType::STRING,
          ),
        8 => array(
          'var' => 'user_id',
          'type' => TType::I32,
          ),
        9 => array(
          'var' => 'created_at',
          'type' => TType::I64,
          ),
        10 => array(
          'var' => 'description',
          'type' => TType::STRING,
          ),
        11 => array(
          'var' => 'username',
          'type' => TType::STRING,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TCWalleRestaurantChangeRecord';
  }

  public function read($input)
  {
    return $this->_read('TCWalleRestaurantChangeRecord', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TCWalleRestaurantChangeRecord', self::$_TSPEC, $output);
  }
}

class TDockCorp extends TBase {
  static $_TSPEC;

  public $id = null;
  public $app_id = null;
  public $name = null;
  public $phone = null;
  public $description = null;
  public $corp_type = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'app_id',
          'type' => TType::I32,
          ),
        3 => array(
          'var' => 'name',
          'type' => TType::STRING,
          ),
        4 => array(
          'var' => 'phone',
          'type' => TType::STRING,
          ),
        5 => array(
          'var' => 'description',
          'type' => TType::STRING,
          ),
        6 => array(
          'var' => 'corp_type',
          'type' => TType::I16,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TDockCorp';
  }

  public function read($input)
  {
    return $this->_read('TDockCorp', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TDockCorp', self::$_TSPEC, $output);
  }
}

class TDockCorpRestaurant extends TBase {
  static $_TSPEC;

  public $id = null;
  public $corp_id = null;
  public $restaurant_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'corp_id',
          'type' => TType::I32,
          ),
        3 => array(
          'var' => 'restaurant_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TDockCorpRestaurant';
  }

  public function read($input)
  {
    return $this->_read('TDockCorpRestaurant', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TDockCorpRestaurant', self::$_TSPEC, $output);
  }
}

class TDockCorpQuery extends TBase {
  static $_TSPEC;

  public $limit = null;
  public $offset = null;
  public $keyword = null;
  public $corp_type = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'limit',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'offset',
          'type' => TType::I32,
          ),
        3 => array(
          'var' => 'keyword',
          'type' => TType::STRING,
          ),
        4 => array(
          'var' => 'corp_type',
          'type' => TType::I16,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TDockCorpQuery';
  }

  public function read($input)
  {
    return $this->_read('TDockCorpQuery', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TDockCorpQuery', self::$_TSPEC, $output);
  }
}

class TRestaurantActivityQuery extends TBase {
  static $_TSPEC;

  public $city_ids = null;
  public $begin_date = null;
  public $end_date = null;
  public $offset = null;
  public $limit = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'city_ids',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        2 => array(
          'var' => 'begin_date',
          'type' => TType::STRING,
          ),
        3 => array(
          'var' => 'end_date',
          'type' => TType::STRING,
          ),
        4 => array(
          'var' => 'offset',
          'type' => TType::I16,
          ),
        5 => array(
          'var' => 'limit',
          'type' => TType::I16,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TRestaurantActivityQuery';
  }

  public function read($input)
  {
    return $this->_read('TRestaurantActivityQuery', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TRestaurantActivityQuery', self::$_TSPEC, $output);
  }
}

class TRestaurantActivity extends TBase {
  static $_TSPEC;

  public $id = null;
  public $city_id = null;
  public $type = null;
  public $attribute = null;
  public $begin_date = null;
  public $end_date = null;
  public $default_subsidy = null;
  public $created_at = null;
  public $description = null;
  public $default_complex_subsidy = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'city_id',
          'type' => TType::I32,
          ),
        3 => array(
          'var' => 'type',
          'type' => TType::I16,
          ),
        4 => array(
          'var' => 'attribute',
          'type' => TType::STRING,
          ),
        5 => array(
          'var' => 'begin_date',
          'type' => TType::STRING,
          ),
        6 => array(
          'var' => 'end_date',
          'type' => TType::STRING,
          ),
        7 => array(
          'var' => 'default_subsidy',
          'type' => TType::DOUBLE,
          ),
        8 => array(
          'var' => 'created_at',
          'type' => TType::I64,
          ),
        9 => array(
          'var' => 'description',
          'type' => TType::STRING,
          ),
        10 => array(
          'var' => 'default_complex_subsidy',
          'type' => TType::STRING,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TRestaurantActivity';
  }

  public function read($input)
  {
    return $this->_read('TRestaurantActivity', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TRestaurantActivity', self::$_TSPEC, $output);
  }
}

class TFoodActivity extends TBase {
  static $_TSPEC;

  public $id = null;
  public $name = null;
  public $icon_name = null;
  public $is_valid = null;
  public $icon_hash = null;
  public $image_hash = null;
  public $description = null;
  public $begin_date = null;
  public $end_date = null;
  public $city_id = null;
  public $can_always_buy = null;
  public $weekday = null;
  public $begin_time = null;
  public $end_time = null;
  public $quantity_condition = null;
  public $sum_condition = null;
  public $discount = null;
  public $nth_discount = null;
  public $reduce_amount = null;
  public $gift_name = null;
  public $created_at = null;
  public $max_quantity = null;
  public $must_pay_online = null;
  public $invalid_food_after_expiration = null;
  public $compatible_with_coupon = null;
  public $max_sum = null;
  public $default_subsidy = null;
  public $image_text = null;
  public $image_text_color = null;
  public $fixed_price = null;
  public $must_new_user = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'name',
          'type' => TType::STRING,
          ),
        3 => array(
          'var' => 'icon_name',
          'type' => TType::STRING,
          ),
        4 => array(
          'var' => 'is_valid',
          'type' => TType::I16,
          ),
        5 => array(
          'var' => 'icon_hash',
          'type' => TType::STRING,
          ),
        6 => array(
          'var' => 'image_hash',
          'type' => TType::STRING,
          ),
        7 => array(
          'var' => 'description',
          'type' => TType::STRING,
          ),
        8 => array(
          'var' => 'begin_date',
          'type' => TType::STRING,
          ),
        9 => array(
          'var' => 'end_date',
          'type' => TType::STRING,
          ),
        10 => array(
          'var' => 'city_id',
          'type' => TType::STRING,
          ),
        11 => array(
          'var' => 'can_always_buy',
          'type' => TType::I16,
          ),
        12 => array(
          'var' => 'weekday',
          'type' => TType::STRING,
          ),
        13 => array(
          'var' => 'begin_time',
          'type' => TType::STRING,
          ),
        14 => array(
          'var' => 'end_time',
          'type' => TType::STRING,
          ),
        15 => array(
          'var' => 'quantity_condition',
          'type' => TType::I16,
          ),
        16 => array(
          'var' => 'sum_condition',
          'type' => TType::I16,
          ),
        17 => array(
          'var' => 'discount',
          'type' => TType::DOUBLE,
          ),
        18 => array(
          'var' => 'nth_discount',
          'type' => TType::DOUBLE,
          ),
        19 => array(
          'var' => 'reduce_amount',
          'type' => TType::DOUBLE,
          ),
        20 => array(
          'var' => 'gift_name',
          'type' => TType::STRING,
          ),
        21 => array(
          'var' => 'created_at',
          'type' => TType::I64,
          ),
        22 => array(
          'var' => 'max_quantity',
          'type' => TType::I16,
          ),
        23 => array(
          'var' => 'must_pay_online',
          'type' => TType::I16,
          ),
        24 => array(
          'var' => 'invalid_food_after_expiration',
          'type' => TType::I16,
          ),
        25 => array(
          'var' => 'compatible_with_coupon',
          'type' => TType::I16,
          ),
        26 => array(
          'var' => 'max_sum',
          'type' => TType::I16,
          ),
        27 => array(
          'var' => 'default_subsidy',
          'type' => TType::DOUBLE,
          ),
        28 => array(
          'var' => 'image_text',
          'type' => TType::STRING,
          ),
        29 => array(
          'var' => 'image_text_color',
          'type' => TType::STRING,
          ),
        30 => array(
          'var' => 'fixed_price',
          'type' => TType::DOUBLE,
          ),
        31 => array(
          'var' => 'must_new_user',
          'type' => TType::I16,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TFoodActivity';
  }

  public function read($input)
  {
    return $this->_read('TFoodActivity', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TFoodActivity', self::$_TSPEC, $output);
  }
}

class TFoodActivityQuery extends TBase {
  static $_TSPEC;

  public $restaurant_ids = null;
  public $city_ids = null;
  public $begin_date = null;
  public $end_date = null;
  public $is_valid = null;
  public $keyword = null;
  public $weekday = null;
  public $limit = null;
  public $offset = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'restaurant_ids',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        2 => array(
          'var' => 'city_ids',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        3 => array(
          'var' => 'begin_date',
          'type' => TType::STRING,
          ),
        4 => array(
          'var' => 'end_date',
          'type' => TType::STRING,
          ),
        5 => array(
          'var' => 'is_valid',
          'type' => TType::BOOL,
          ),
        6 => array(
          'var' => 'keyword',
          'type' => TType::STRING,
          ),
        7 => array(
          'var' => 'weekday',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        8 => array(
          'var' => 'limit',
          'type' => TType::I32,
          ),
        9 => array(
          'var' => 'offset',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TFoodActivityQuery';
  }

  public function read($input)
  {
    return $this->_read('TFoodActivityQuery', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TFoodActivityQuery', self::$_TSPEC, $output);
  }
}

class TActivitySubsidyContractQuery extends TBase {
  static $_TSPEC;

  public $city_ids = null;
  public $restaurant_ids = null;
  public $activity_id = null;
  public $activity_category_id = null;
  public $statuses = null;
  public $created_at_from = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'city_ids',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        2 => array(
          'var' => 'restaurant_ids',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        3 => array(
          'var' => 'activity_id',
          'type' => TType::I32,
          ),
        4 => array(
          'var' => 'activity_category_id',
          'type' => TType::I32,
          ),
        5 => array(
          'var' => 'statuses',
          'type' => TType::LST,
          'etype' => TType::I16,
          'elem' => array(
            'type' => TType::I16,
            ),
          ),
        6 => array(
          'var' => 'created_at_from',
          'type' => TType::I64,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TActivitySubsidyContractQuery';
  }

  public function read($input)
  {
    return $this->_read('TActivitySubsidyContractQuery', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TActivitySubsidyContractQuery', self::$_TSPEC, $output);
  }
}

class TActivitySubsidyContract extends TBase {
  static $_TSPEC;

  public $id = null;
  public $restaurant_id = null;
  public $activity_id = null;
  public $activity_category_id = null;
  public $city_id = null;
  public $amount = null;
  public $submit_user_id = null;
  public $status = null;
  public $created_at = null;
  public $signed_at = null;
  public $expired_at = null;
  public $complex_subsidy = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'restaurant_id',
          'type' => TType::I32,
          ),
        3 => array(
          'var' => 'activity_id',
          'type' => TType::I32,
          ),
        4 => array(
          'var' => 'activity_category_id',
          'type' => TType::I32,
          ),
        5 => array(
          'var' => 'city_id',
          'type' => TType::I16,
          ),
        6 => array(
          'var' => 'amount',
          'type' => TType::DOUBLE,
          ),
        7 => array(
          'var' => 'submit_user_id',
          'type' => TType::I32,
          ),
        8 => array(
          'var' => 'status',
          'type' => TType::I16,
          ),
        9 => array(
          'var' => 'created_at',
          'type' => TType::I64,
          ),
        10 => array(
          'var' => 'signed_at',
          'type' => TType::I64,
          ),
        11 => array(
          'var' => 'expired_at',
          'type' => TType::I64,
          ),
        12 => array(
          'var' => 'complex_subsidy',
          'type' => TType::STRING,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TActivitySubsidyContract';
  }

  public function read($input)
  {
    return $this->_read('TActivitySubsidyContract', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TActivitySubsidyContract', self::$_TSPEC, $output);
  }
}

class TRestaurantOpenApply extends TBase {
  static $_TSPEC;

  public $id = null;
  public $user_id = null;
  public $applicant = null;
  public $telephone = null;
  public $mobilephone = null;
  public $qq = null;
  public $city_id = null;
  public $geohash = null;
  public $entry_id = null;
  public $restaurant_name = null;
  public $restaurant_address = null;
  public $restaurant_description = null;
  public $restaurant_url = null;
  public $status = null;
  public $created_at = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'user_id',
          'type' => TType::I32,
          ),
        3 => array(
          'var' => 'applicant',
          'type' => TType::STRING,
          ),
        4 => array(
          'var' => 'telephone',
          'type' => TType::STRING,
          ),
        5 => array(
          'var' => 'mobilephone',
          'type' => TType::STRING,
          ),
        6 => array(
          'var' => 'qq',
          'type' => TType::STRING,
          ),
        7 => array(
          'var' => 'city_id',
          'type' => TType::I16,
          ),
        8 => array(
          'var' => 'geohash',
          'type' => TType::I64,
          ),
        9 => array(
          'var' => 'entry_id',
          'type' => TType::I32,
          ),
        10 => array(
          'var' => 'restaurant_name',
          'type' => TType::STRING,
          ),
        11 => array(
          'var' => 'restaurant_address',
          'type' => TType::STRING,
          ),
        12 => array(
          'var' => 'restaurant_description',
          'type' => TType::STRING,
          ),
        13 => array(
          'var' => 'restaurant_url',
          'type' => TType::STRING,
          ),
        14 => array(
          'var' => 'status',
          'type' => TType::I16,
          ),
        15 => array(
          'var' => 'created_at',
          'type' => TType::I64,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TRestaurantOpenApply';
  }

  public function read($input)
  {
    return $this->_read('TRestaurantOpenApply', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TRestaurantOpenApply', self::$_TSPEC, $output);
  }
}

class TRestaurantPromotion extends TBase {
  static $_TSPEC;

  public $id = null;
  public $restaurant_id = null;
  public $content = null;
  public $is_valid = null;
  public $created_at = null;
  public $deadline = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'restaurant_id',
          'type' => TType::I32,
          ),
        3 => array(
          'var' => 'content',
          'type' => TType::STRING,
          ),
        4 => array(
          'var' => 'is_valid',
          'type' => TType::I16,
          ),
        5 => array(
          'var' => 'created_at',
          'type' => TType::I64,
          ),
        6 => array(
          'var' => 'deadline',
          'type' => TType::I64,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TRestaurantPromotion';
  }

  public function read($input)
  {
    return $this->_read('TRestaurantPromotion', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TRestaurantPromotion', self::$_TSPEC, $output);
  }
}

class TSeoSmCityIndex extends TBase {
  static $_TSPEC;

  public $id = null;
  public $city_id = null;
  public $category_id = null;
  public $all_indexes = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'city_id',
          'type' => TType::I32,
          ),
        3 => array(
          'var' => 'category_id',
          'type' => TType::I32,
          ),
        4 => array(
          'var' => 'all_indexes',
          'type' => TType::STRING,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TSeoSmCityIndex';
  }

  public function read($input)
  {
    return $this->_read('TSeoSmCityIndex', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TSeoSmCityIndex', self::$_TSPEC, $output);
  }
}

class TSeoSmIndex extends TBase {
  static $_TSPEC;

  public $id = null;
  public $name = null;
  public $sort_weight = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'name',
          'type' => TType::STRING,
          ),
        3 => array(
          'var' => 'sort_weight',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TSeoSmIndex';
  }

  public function read($input)
  {
    return $this->_read('TSeoSmIndex', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TSeoSmIndex', self::$_TSPEC, $output);
  }
}

class TRestaurantOpenApplyQuery extends TBase {
  static $_TSPEC;

  public $user_id = null;
  public $city_ids = null;
  public $status = null;
  public $created_at_start = null;
  public $created_at_end = null;
  public $applicant = null;
  public $telephone = null;
  public $mobilephone = null;
  public $restaurant_name = null;
  public $offset = null;
  public $limit = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'city_ids',
          'type' => TType::LST,
          'etype' => TType::I16,
          'elem' => array(
            'type' => TType::I16,
            ),
          ),
        3 => array(
          'var' => 'status',
          'type' => TType::I16,
          ),
        4 => array(
          'var' => 'created_at_start',
          'type' => TType::I64,
          ),
        5 => array(
          'var' => 'created_at_end',
          'type' => TType::I64,
          ),
        6 => array(
          'var' => 'applicant',
          'type' => TType::STRING,
          ),
        7 => array(
          'var' => 'telephone',
          'type' => TType::STRING,
          ),
        8 => array(
          'var' => 'mobilephone',
          'type' => TType::STRING,
          ),
        9 => array(
          'var' => 'restaurant_name',
          'type' => TType::STRING,
          ),
        10 => array(
          'var' => 'offset',
          'type' => TType::I32,
          ),
        11 => array(
          'var' => 'limit',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TRestaurantOpenApplyQuery';
  }

  public function read($input)
  {
    return $this->_read('TRestaurantOpenApplyQuery', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TRestaurantOpenApplyQuery', self::$_TSPEC, $output);
  }
}

class TSeoSmPlace extends TBase {
  static $_TSPEC;

  public $id = null;
  public $index_id = null;
  public $city_id = null;
  public $name = null;
  public $address = null;
  public $place_id = null;
  public $sn = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'index_id',
          'type' => TType::I32,
          ),
        3 => array(
          'var' => 'city_id',
          'type' => TType::I32,
          ),
        4 => array(
          'var' => 'name',
          'type' => TType::STRING,
          ),
        5 => array(
          'var' => 'address',
          'type' => TType::STRING,
          ),
        6 => array(
          'var' => 'place_id',
          'type' => TType::I64,
          ),
        7 => array(
          'var' => 'sn',
          'type' => TType::STRING,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TSeoSmPlace';
  }

  public function read($input)
  {
    return $this->_read('TSeoSmPlace', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TSeoSmPlace', self::$_TSPEC, $output);
  }
}

class TSeoSmRestaurant extends TBase {
  static $_TSPEC;

  public $id = null;
  public $index_id = null;
  public $city_id = null;
  public $name = null;
  public $address = null;
  public $name_for_url = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'index_id',
          'type' => TType::I32,
          ),
        3 => array(
          'var' => 'city_id',
          'type' => TType::I32,
          ),
        4 => array(
          'var' => 'name',
          'type' => TType::STRING,
          ),
        5 => array(
          'var' => 'address',
          'type' => TType::STRING,
          ),
        6 => array(
          'var' => 'name_for_url',
          'type' => TType::STRING,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TSeoSmRestaurant';
  }

  public function read($input)
  {
    return $this->_read('TSeoSmRestaurant', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TSeoSmRestaurant', self::$_TSPEC, $output);
  }
}

class TRestaurantCommentQuery extends TBase {
  static $_TSPEC;

  public $from_datetime = null;
  public $to_datetime = null;
  public $exc_restaurant_ids = null;
  public $restaurant_ids = null;
  public $offset = null;
  public $limit = null;
  public $comment_id = null;
  public $is_valid = null;
  public $user_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'from_datetime',
          'type' => TType::I64,
          ),
        2 => array(
          'var' => 'to_datetime',
          'type' => TType::I64,
          ),
        3 => array(
          'var' => 'exc_restaurant_ids',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        4 => array(
          'var' => 'restaurant_ids',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        5 => array(
          'var' => 'offset',
          'type' => TType::I32,
          ),
        6 => array(
          'var' => 'limit',
          'type' => TType::I32,
          ),
        7 => array(
          'var' => 'comment_id',
          'type' => TType::I32,
          ),
        8 => array(
          'var' => 'is_valid',
          'type' => TType::I16,
          ),
        9 => array(
          'var' => 'user_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TRestaurantCommentQuery';
  }

  public function read($input)
  {
    return $this->_read('TRestaurantCommentQuery', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TRestaurantCommentQuery', self::$_TSPEC, $output);
  }
}

class TCWalleRestaurantComment extends TBase {
  static $_TSPEC;

  public $id = null;
  public $user_id = null;
  public $restaurant_id = null;
  public $username = null;
  public $created_at = null;
  public $content = null;
  public $is_valid = null;
  public $is_replied = null;
  public $restaurant_name = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'user_id',
          'type' => TType::I32,
          ),
        3 => array(
          'var' => 'restaurant_id',
          'type' => TType::I32,
          ),
        4 => array(
          'var' => 'username',
          'type' => TType::STRING,
          ),
        5 => array(
          'var' => 'created_at',
          'type' => TType::I64,
          ),
        6 => array(
          'var' => 'content',
          'type' => TType::STRING,
          ),
        7 => array(
          'var' => 'is_valid',
          'type' => TType::I16,
          ),
        8 => array(
          'var' => 'is_replied',
          'type' => TType::I16,
          ),
        9 => array(
          'var' => 'restaurant_name',
          'type' => TType::STRING,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TCWalleRestaurantComment';
  }

  public function read($input)
  {
    return $this->_read('TCWalleRestaurantComment', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TCWalleRestaurantComment', self::$_TSPEC, $output);
  }
}

class TWalleRestaurantCommentQuery extends TBase {
  static $_TSPEC;

  public $is_valid = null;
  public $is_replied = null;
  public $search = null;
  public $offset = null;
  public $limit = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'is_valid',
          'type' => TType::I16,
          ),
        2 => array(
          'var' => 'is_replied',
          'type' => TType::I16,
          ),
        3 => array(
          'var' => 'search',
          'type' => TType::STRING,
          ),
        4 => array(
          'var' => 'offset',
          'type' => TType::I32,
          ),
        5 => array(
          'var' => 'limit',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TWalleRestaurantCommentQuery';
  }

  public function read($input)
  {
    return $this->_read('TWalleRestaurantCommentQuery', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TWalleRestaurantCommentQuery', self::$_TSPEC, $output);
  }
}

class TFreeGiftActivityQuery extends TBase {
  static $_TSPEC;

  public $category_id = null;
  public $is_valid = null;
  public $offset = null;
  public $limit = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'category_id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'is_valid',
          'type' => TType::BOOL,
          ),
        3 => array(
          'var' => 'offset',
          'type' => TType::I32,
          ),
        4 => array(
          'var' => 'limit',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TFreeGiftActivityQuery';
  }

  public function read($input)
  {
    return $this->_read('TFreeGiftActivityQuery', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TFreeGiftActivityQuery', self::$_TSPEC, $output);
  }
}

class TActivityQuery extends TBase {
  static $_TSPEC;

  public $is_valid = null;
  public $is_default = null;
  public $type = null;
  public $sort = null;
  public $start_date = null;
  public $end_date = null;
  public $offset = null;
  public $limit = null;
  public $keyword = null;
  public $has_info = null;
  public $weekday = null;
  public $geohash = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'is_valid',
          'type' => TType::BOOL,
          ),
        2 => array(
          'var' => 'is_default',
          'type' => TType::BOOL,
          ),
        3 => array(
          'var' => 'type',
          'type' => TType::STRING,
          ),
        4 => array(
          'var' => 'sort',
          'type' => TType::STRING,
          ),
        5 => array(
          'var' => 'start_date',
          'type' => TType::STRING,
          ),
        6 => array(
          'var' => 'end_date',
          'type' => TType::STRING,
          ),
        7 => array(
          'var' => 'offset',
          'type' => TType::I32,
          ),
        8 => array(
          'var' => 'limit',
          'type' => TType::I32,
          ),
        9 => array(
          'var' => 'keyword',
          'type' => TType::STRING,
          ),
        10 => array(
          'var' => 'has_info',
          'type' => TType::I32,
          ),
        11 => array(
          'var' => 'weekday',
          'type' => TType::STRING,
          ),
        12 => array(
          'var' => 'geohash',
          'type' => TType::I64,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TActivityQuery';
  }

  public function read($input)
  {
    return $this->_read('TActivityQuery', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TActivityQuery', self::$_TSPEC, $output);
  }
}

class TCityQuery extends TBase {
  static $_TSPEC;

  public $is_valid = null;
  public $offset = null;
  public $limit = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'is_valid',
          'type' => TType::BOOL,
          ),
        2 => array(
          'var' => 'offset',
          'type' => TType::I32,
          ),
        3 => array(
          'var' => 'limit',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TCityQuery';
  }

  public function read($input)
  {
    return $this->_read('TCityQuery', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TCityQuery', self::$_TSPEC, $output);
  }
}

class TLogoQuery extends TBase {
  static $_TSPEC;

  public $is_valid = null;
  public $offset = null;
  public $limit = null;
  public $keyword = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'is_valid',
          'type' => TType::BOOL,
          ),
        2 => array(
          'var' => 'offset',
          'type' => TType::I32,
          ),
        3 => array(
          'var' => 'limit',
          'type' => TType::I32,
          ),
        4 => array(
          'var' => 'keyword',
          'type' => TType::STRING,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TLogoQuery';
  }

  public function read($input)
  {
    return $this->_read('TLogoQuery', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TLogoQuery', self::$_TSPEC, $output);
  }
}

class TSeoSmCityIndexQuery extends TBase {
  static $_TSPEC;

  public $city_id = null;
  public $category_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'city_id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'category_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TSeoSmCityIndexQuery';
  }

  public function read($input)
  {
    return $this->_read('TSeoSmCityIndexQuery', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TSeoSmCityIndexQuery', self::$_TSPEC, $output);
  }
}

class TSeoSmQuery extends TBase {
  static $_TSPEC;

  public $index_id = null;
  public $city_id = null;
  public $offset = null;
  public $limit = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'index_id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'city_id',
          'type' => TType::I32,
          ),
        3 => array(
          'var' => 'offset',
          'type' => TType::I32,
          ),
        4 => array(
          'var' => 'limit',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TSeoSmQuery';
  }

  public function read($input)
  {
    return $this->_read('TSeoSmQuery', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TSeoSmQuery', self::$_TSPEC, $output);
  }
}

class TFoodQuery extends TBase {
  static $_TSPEC;

  public $restaurant_id = null;
  public $category_id = null;
  public $is_valid = null;
  public $limit = null;
  public $offset = null;
  public $keyword = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'restaurant_id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'category_id',
          'type' => TType::I32,
          ),
        3 => array(
          'var' => 'is_valid',
          'type' => TType::BOOL,
          ),
        4 => array(
          'var' => 'limit',
          'type' => TType::I32,
          ),
        5 => array(
          'var' => 'offset',
          'type' => TType::I32,
          ),
        6 => array(
          'var' => 'keyword',
          'type' => TType::STRING,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TFoodQuery';
  }

  public function read($input)
  {
    return $this->_read('TFoodQuery', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TFoodQuery', self::$_TSPEC, $output);
  }
}

class TFoodStock extends TBase {
  static $_TSPEC;

  public $restaurant_id = null;
  public $category_id = null;
  public $is_max = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'restaurant_id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'category_id',
          'type' => TType::I32,
          ),
        3 => array(
          'var' => 'is_max',
          'type' => TType::BOOL,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TFoodStock';
  }

  public function read($input)
  {
    return $this->_read('TFoodStock', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TFoodStock', self::$_TSPEC, $output);
  }
}

class TFoodCategoryQuery extends TBase {
  static $_TSPEC;

  public $restaurant_id = null;
  public $is_valid = null;
  public $limit = null;
  public $offset = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'restaurant_id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'is_valid',
          'type' => TType::BOOL,
          ),
        3 => array(
          'var' => 'limit',
          'type' => TType::I32,
          ),
        4 => array(
          'var' => 'offset',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TFoodCategoryQuery';
  }

  public function read($input)
  {
    return $this->_read('TFoodCategoryQuery', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TFoodCategoryQuery', self::$_TSPEC, $output);
  }
}

class TFoodGarnishCategoryQuery extends TBase {
  static $_TSPEC;

  public $food_id = null;
  public $garnish_category_id = null;
  public $limit = null;
  public $offset = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'food_id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'garnish_category_id',
          'type' => TType::I32,
          ),
        3 => array(
          'var' => 'limit',
          'type' => TType::I32,
          ),
        4 => array(
          'var' => 'offset',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TFoodGarnishCategoryQuery';
  }

  public function read($input)
  {
    return $this->_read('TFoodGarnishCategoryQuery', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TFoodGarnishCategoryQuery', self::$_TSPEC, $output);
  }
}

class TGarnishQuery extends TBase {
  static $_TSPEC;

  public $category_id = null;
  public $is_valid = null;
  public $limit = null;
  public $offset = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'category_id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'is_valid',
          'type' => TType::BOOL,
          ),
        3 => array(
          'var' => 'limit',
          'type' => TType::I32,
          ),
        4 => array(
          'var' => 'offset',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TGarnishQuery';
  }

  public function read($input)
  {
    return $this->_read('TGarnishQuery', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TGarnishQuery', self::$_TSPEC, $output);
  }
}

class TGarnishCategoryQuery extends TBase {
  static $_TSPEC;

  public $restaurant_id = null;
  public $kind = null;
  public $is_valid = null;
  public $limit = null;
  public $offset = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'restaurant_id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'kind',
          'type' => TType::I32,
          ),
        3 => array(
          'var' => 'is_valid',
          'type' => TType::BOOL,
          ),
        4 => array(
          'var' => 'limit',
          'type' => TType::I32,
          ),
        5 => array(
          'var' => 'offset',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TGarnishCategoryQuery';
  }

  public function read($input)
  {
    return $this->_read('TGarnishCategoryQuery', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TGarnishCategoryQuery', self::$_TSPEC, $output);
  }
}

class TRestaurantQuery extends TBase {
  static $_TSPEC;

  public $address = null;
  public $mobile = null;
  public $name = null;
  public $phone = null;
  public $busy_level = null;
  public $order_mode = null;
  public $allow_ol_payment = null;
  public $has_deliver_area = null;
  public $has_food_img = null;
  public $has_image_hash = null;
  public $is_coupon = null;
  public $is_recommend = null;
  public $is_premium = null;
  public $is_valid = null;
  public $city_ids = null;
  public $region_ids = null;
  public $managed_city_ids = null;
  public $managed_region_ids = null;
  public $offset = null;
  public $limit = null;
  public $keyword = null;
  public $come_from = null;
  public $service_category = null;
  public $desc = null;
  public $certification_type = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'address',
          'type' => TType::STRING,
          ),
        2 => array(
          'var' => 'mobile',
          'type' => TType::STRING,
          ),
        3 => array(
          'var' => 'name',
          'type' => TType::STRING,
          ),
        4 => array(
          'var' => 'phone',
          'type' => TType::STRING,
          ),
        5 => array(
          'var' => 'busy_level',
          'type' => TType::I16,
          ),
        6 => array(
          'var' => 'order_mode',
          'type' => TType::I16,
          ),
        7 => array(
          'var' => 'allow_ol_payment',
          'type' => TType::BOOL,
          ),
        8 => array(
          'var' => 'has_deliver_area',
          'type' => TType::BOOL,
          ),
        9 => array(
          'var' => 'has_food_img',
          'type' => TType::BOOL,
          ),
        10 => array(
          'var' => 'has_image_hash',
          'type' => TType::BOOL,
          ),
        11 => array(
          'var' => 'is_coupon',
          'type' => TType::BOOL,
          ),
        12 => array(
          'var' => 'is_recommend',
          'type' => TType::BOOL,
          ),
        13 => array(
          'var' => 'is_premium',
          'type' => TType::BOOL,
          ),
        14 => array(
          'var' => 'is_valid',
          'type' => TType::BOOL,
          ),
        15 => array(
          'var' => 'city_ids',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        16 => array(
          'var' => 'region_ids',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        17 => array(
          'var' => 'managed_city_ids',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        18 => array(
          'var' => 'managed_region_ids',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        19 => array(
          'var' => 'offset',
          'type' => TType::I32,
          ),
        20 => array(
          'var' => 'limit',
          'type' => TType::I32,
          ),
        21 => array(
          'var' => 'keyword',
          'type' => TType::STRING,
          ),
        22 => array(
          'var' => 'come_from',
          'type' => TType::I32,
          ),
        23 => array(
          'var' => 'service_category',
          'type' => TType::I32,
          ),
        24 => array(
          'var' => 'desc',
          'type' => TType::BOOL,
          ),
        25 => array(
          'var' => 'certification_type',
          'type' => TType::I16,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TRestaurantQuery';
  }

  public function read($input)
  {
    return $this->_read('TRestaurantQuery', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TRestaurantQuery', self::$_TSPEC, $output);
  }
}

class TEntryQuery extends TBase {
  static $_TSPEC;

  public $limit = null;
  public $offset = null;
  public $is_valid = null;
  public $zone_id = null;
  public $district_id = null;
  public $city_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'limit',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'offset',
          'type' => TType::I32,
          ),
        3 => array(
          'var' => 'is_valid',
          'type' => TType::I16,
          ),
        4 => array(
          'var' => 'zone_id',
          'type' => TType::I32,
          ),
        5 => array(
          'var' => 'district_id',
          'type' => TType::I32,
          ),
        6 => array(
          'var' => 'city_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TEntryQuery';
  }

  public function read($input)
  {
    return $this->_read('TEntryQuery', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TEntryQuery', self::$_TSPEC, $output);
  }
}

class TWalleEntryQuery extends TBase {
  static $_TSPEC;

  public $limit = null;
  public $offset = null;
  public $is_valid = null;
  public $zone_id = null;
  public $search = null;
  public $name = null;
  public $address = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'limit',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'offset',
          'type' => TType::I32,
          ),
        3 => array(
          'var' => 'is_valid',
          'type' => TType::I16,
          ),
        4 => array(
          'var' => 'zone_id',
          'type' => TType::I32,
          ),
        5 => array(
          'var' => 'search',
          'type' => TType::STRING,
          ),
        6 => array(
          'var' => 'name',
          'type' => TType::STRING,
          ),
        7 => array(
          'var' => 'address',
          'type' => TType::STRING,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TWalleEntryQuery';
  }

  public function read($input)
  {
    return $this->_read('TWalleEntryQuery', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TWalleEntryQuery', self::$_TSPEC, $output);
  }
}

class TDistrictQuery extends TBase {
  static $_TSPEC;

  public $limit = null;
  public $offset = null;
  public $is_valid = null;
  public $city_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'limit',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'offset',
          'type' => TType::I32,
          ),
        3 => array(
          'var' => 'is_valid',
          'type' => TType::I16,
          ),
        4 => array(
          'var' => 'city_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TDistrictQuery';
  }

  public function read($input)
  {
    return $this->_read('TDistrictQuery', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TDistrictQuery', self::$_TSPEC, $output);
  }
}

class TZoneQuery extends TBase {
  static $_TSPEC;

  public $limit = null;
  public $offset = null;
  public $is_valid = null;
  public $district_id = null;
  public $city_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'limit',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'offset',
          'type' => TType::I32,
          ),
        3 => array(
          'var' => 'is_valid',
          'type' => TType::I16,
          ),
        4 => array(
          'var' => 'district_id',
          'type' => TType::I32,
          ),
        5 => array(
          'var' => 'city_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TZoneQuery';
  }

  public function read($input)
  {
    return $this->_read('TZoneQuery', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TZoneQuery', self::$_TSPEC, $output);
  }
}

class TWalleFilter extends TBase {
  static $_TSPEC;

  public $region_ids = null;
  public $region_group_ids = null;
  public $city_ids = null;
  public $date_end = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'region_ids',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        2 => array(
          'var' => 'region_group_ids',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        3 => array(
          'var' => 'city_ids',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        4 => array(
          'var' => 'date_end',
          'type' => TType::STRING,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TWalleFilter';
  }

  public function read($input)
  {
    return $this->_read('TWalleFilter', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TWalleFilter', self::$_TSPEC, $output);
  }
}

class TWalleKPIFilter extends TBase {
  static $_TSPEC;

  public $region_ids = null;
  public $region_group_ids = null;
  public $city_ids = null;
  public $year = null;
  public $month = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'region_ids',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        2 => array(
          'var' => 'region_group_ids',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        3 => array(
          'var' => 'city_ids',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        5 => array(
          'var' => 'year',
          'type' => TType::I16,
          ),
        6 => array(
          'var' => 'month',
          'type' => TType::I16,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TWalleKPIFilter';
  }

  public function read($input)
  {
    return $this->_read('TWalleKPIFilter', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TWalleKPIFilter', self::$_TSPEC, $output);
  }
}

class TSaasStatus extends TBase {
  static $_TSPEC;

  public $restaurant_id = null;
  public $status = null;
  public $remains = null;
  public $ranking_end = null;
  public $last_minus = null;
  public $is_pay = null;
  public $rank_remains = null;
  public $temp_free_end = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'restaurant_id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'status',
          'type' => TType::I32,
          ),
        3 => array(
          'var' => 'remains',
          'type' => TType::I32,
          ),
        4 => array(
          'var' => 'ranking_end',
          'type' => TType::STRING,
          ),
        5 => array(
          'var' => 'last_minus',
          'type' => TType::STRING,
          ),
        6 => array(
          'var' => 'is_pay',
          'type' => TType::BOOL,
          ),
        7 => array(
          'var' => 'rank_remains',
          'type' => TType::I32,
          ),
        8 => array(
          'var' => 'temp_free_end',
          'type' => TType::STRING,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TSaasStatus';
  }

  public function read($input)
  {
    return $this->_read('TSaasStatus', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TSaasStatus', self::$_TSPEC, $output);
  }
}

class TCSaasStatus extends TBase {
  static $_TSPEC;

  public $restaurant_id = null;
  public $status = null;
  public $remains = null;
  public $ranking_end = null;
  public $last_minus = null;
  public $is_pay = null;
  public $rank_remains = null;
  public $temp_free_end = null;
  public $restaurant_name = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'restaurant_id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'status',
          'type' => TType::I32,
          ),
        3 => array(
          'var' => 'remains',
          'type' => TType::I32,
          ),
        4 => array(
          'var' => 'ranking_end',
          'type' => TType::STRING,
          ),
        5 => array(
          'var' => 'last_minus',
          'type' => TType::STRING,
          ),
        6 => array(
          'var' => 'is_pay',
          'type' => TType::BOOL,
          ),
        7 => array(
          'var' => 'rank_remains',
          'type' => TType::I32,
          ),
        8 => array(
          'var' => 'temp_free_end',
          'type' => TType::STRING,
          ),
        9 => array(
          'var' => 'restaurant_name',
          'type' => TType::STRING,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TCSaasStatus';
  }

  public function read($input)
  {
    return $this->_read('TCSaasStatus', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TCSaasStatus', self::$_TSPEC, $output);
  }
}

class TSaasStatusQuery extends TBase {
  static $_TSPEC;

  public $restaurant_ids = null;
  public $statuses = null;
  public $from_remains = null;
  public $to_remains = null;
  public $from_rank_remains = null;
  public $to_rank_remains = null;
  public $from_last_minus = null;
  public $to_last_minus = null;
  public $is_pay = null;
  public $from_temp_free_end = null;
  public $to_temp_free_end = null;
  public $city_ids = null;
  public $region_ids = null;
  public $is_valid = null;
  public $offset = null;
  public $limit = null;
  public $from_ranking_end = null;
  public $to_ranking_end = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'restaurant_ids',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        2 => array(
          'var' => 'statuses',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        3 => array(
          'var' => 'from_remains',
          'type' => TType::I32,
          ),
        4 => array(
          'var' => 'to_remains',
          'type' => TType::I32,
          ),
        5 => array(
          'var' => 'from_rank_remains',
          'type' => TType::I32,
          ),
        6 => array(
          'var' => 'to_rank_remains',
          'type' => TType::I32,
          ),
        7 => array(
          'var' => 'from_last_minus',
          'type' => TType::STRING,
          ),
        8 => array(
          'var' => 'to_last_minus',
          'type' => TType::STRING,
          ),
        9 => array(
          'var' => 'is_pay',
          'type' => TType::BOOL,
          ),
        10 => array(
          'var' => 'from_temp_free_end',
          'type' => TType::STRING,
          ),
        11 => array(
          'var' => 'to_temp_free_end',
          'type' => TType::STRING,
          ),
        12 => array(
          'var' => 'city_ids',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        13 => array(
          'var' => 'region_ids',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        14 => array(
          'var' => 'is_valid',
          'type' => TType::BOOL,
          ),
        15 => array(
          'var' => 'offset',
          'type' => TType::I32,
          ),
        16 => array(
          'var' => 'limit',
          'type' => TType::I32,
          ),
        17 => array(
          'var' => 'from_ranking_end',
          'type' => TType::STRING,
          ),
        18 => array(
          'var' => 'to_ranking_end',
          'type' => TType::STRING,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TSaasStatusQuery';
  }

  public function read($input)
  {
    return $this->_read('TSaasStatusQuery', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TSaasStatusQuery', self::$_TSPEC, $output);
  }
}

class TSaasStatusChange extends TBase {
  static $_TSPEC;

  public $id = null;
  public $restaurant_id = null;
  public $change_attr = null;
  public $change_type = null;
  public $change_amount = null;
  public $remark = null;
  public $contract_record_sn = null;
  public $user_id = null;
  public $created_at = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'restaurant_id',
          'type' => TType::I32,
          ),
        3 => array(
          'var' => 'change_attr',
          'type' => TType::I32,
          ),
        4 => array(
          'var' => 'change_type',
          'type' => TType::I32,
          ),
        5 => array(
          'var' => 'change_amount',
          'type' => TType::I32,
          ),
        6 => array(
          'var' => 'remark',
          'type' => TType::STRING,
          ),
        7 => array(
          'var' => 'contract_record_sn',
          'type' => TType::STRING,
          ),
        8 => array(
          'var' => 'user_id',
          'type' => TType::I32,
          ),
        9 => array(
          'var' => 'created_at',
          'type' => TType::I64,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TSaasStatusChange';
  }

  public function read($input)
  {
    return $this->_read('TSaasStatusChange', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TSaasStatusChange', self::$_TSPEC, $output);
  }
}

class TSaasStatusChangeQuery extends TBase {
  static $_TSPEC;

  public $restaurant_id = null;
  public $change_attr = null;
  public $change_type = null;
  public $created_at_start = null;
  public $created_at_end = null;
  public $offset = null;
  public $limit = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'restaurant_id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'change_attr',
          'type' => TType::I32,
          ),
        3 => array(
          'var' => 'change_type',
          'type' => TType::I32,
          ),
        4 => array(
          'var' => 'created_at_start',
          'type' => TType::I64,
          ),
        5 => array(
          'var' => 'created_at_end',
          'type' => TType::I64,
          ),
        6 => array(
          'var' => 'offset',
          'type' => TType::I32,
          ),
        7 => array(
          'var' => 'limit',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TSaasStatusChangeQuery';
  }

  public function read($input)
  {
    return $this->_read('TSaasStatusChangeQuery', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TSaasStatusChangeQuery', self::$_TSPEC, $output);
  }
}

class TSaasContractPlanQuery extends TBase {
  static $_TSPEC;

  public $is_valid = null;
  public $client = null;
  public $plan_type = null;
  public $select_level = null;
  public $offset = null;
  public $limit = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'is_valid',
          'type' => TType::BOOL,
          ),
        2 => array(
          'var' => 'client',
          'type' => TType::BOOL,
          ),
        3 => array(
          'var' => 'plan_type',
          'type' => TType::I16,
          ),
        4 => array(
          'var' => 'select_level',
          'type' => TType::I16,
          ),
        5 => array(
          'var' => 'offset',
          'type' => TType::I32,
          ),
        6 => array(
          'var' => 'limit',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TSaasContractPlanQuery';
  }

  public function read($input)
  {
    return $this->_read('TSaasContractPlanQuery', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TSaasContractPlanQuery', self::$_TSPEC, $output);
  }
}

class TSaasContractPlan extends TBase {
  static $_TSPEC;

  public $id = null;
  public $is_valid = null;
  public $plan_type = null;
  public $name = null;
  public $duration = null;
  public $client = null;
  public $price = null;
  public $bonus = null;
  public $select_level = null;
  public $is_bonus_forced = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'is_valid',
          'type' => TType::BOOL,
          ),
        3 => array(
          'var' => 'plan_type',
          'type' => TType::I16,
          ),
        4 => array(
          'var' => 'name',
          'type' => TType::STRING,
          ),
        5 => array(
          'var' => 'duration',
          'type' => TType::I32,
          ),
        6 => array(
          'var' => 'client',
          'type' => TType::BOOL,
          ),
        7 => array(
          'var' => 'price',
          'type' => TType::I32,
          ),
        8 => array(
          'var' => 'bonus',
          'type' => TType::STRING,
          ),
        9 => array(
          'var' => 'select_level',
          'type' => TType::I16,
          ),
        10 => array(
          'var' => 'is_bonus_forced',
          'type' => TType::BOOL,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TSaasContractPlan';
  }

  public function read($input)
  {
    return $this->_read('TSaasContractPlan', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TSaasContractPlan', self::$_TSPEC, $output);
  }
}

class TSaasContractRecordQuery extends TBase {
  static $_TSPEC;

  public $restaurant_id = null;
  public $statuses = null;
  public $plan_types = null;
  public $contract_types = null;
  public $income_status = null;
  public $is_bonus_sent = null;
  public $from_signed_date = null;
  public $to_signed_date = null;
  public $from_income_rec_date = null;
  public $to_income_rec_date = null;
  public $from_created_at = null;
  public $to_created_at = null;
  public $offset = null;
  public $limit = null;
  public $region_ids = null;
  public $city_ids = null;
  public $processor_id = null;
  public $search = null;
  public $payment_types = null;
  public $plan_name = null;
  public $rrc_region_id = null;
  public $position = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'restaurant_id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'statuses',
          'type' => TType::LST,
          'etype' => TType::I16,
          'elem' => array(
            'type' => TType::I16,
            ),
          ),
        3 => array(
          'var' => 'plan_types',
          'type' => TType::LST,
          'etype' => TType::I16,
          'elem' => array(
            'type' => TType::I16,
            ),
          ),
        4 => array(
          'var' => 'contract_types',
          'type' => TType::LST,
          'etype' => TType::I16,
          'elem' => array(
            'type' => TType::I16,
            ),
          ),
        5 => array(
          'var' => 'income_status',
          'type' => TType::I16,
          ),
        6 => array(
          'var' => 'is_bonus_sent',
          'type' => TType::BOOL,
          ),
        7 => array(
          'var' => 'from_signed_date',
          'type' => TType::STRING,
          ),
        8 => array(
          'var' => 'to_signed_date',
          'type' => TType::STRING,
          ),
        9 => array(
          'var' => 'from_income_rec_date',
          'type' => TType::STRING,
          ),
        10 => array(
          'var' => 'to_income_rec_date',
          'type' => TType::STRING,
          ),
        11 => array(
          'var' => 'from_created_at',
          'type' => TType::I64,
          ),
        12 => array(
          'var' => 'to_created_at',
          'type' => TType::I64,
          ),
        13 => array(
          'var' => 'offset',
          'type' => TType::I32,
          ),
        14 => array(
          'var' => 'limit',
          'type' => TType::I32,
          ),
        15 => array(
          'var' => 'region_ids',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        16 => array(
          'var' => 'city_ids',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        17 => array(
          'var' => 'processor_id',
          'type' => TType::I32,
          ),
        18 => array(
          'var' => 'search',
          'type' => TType::STRING,
          ),
        19 => array(
          'var' => 'payment_types',
          'type' => TType::LST,
          'etype' => TType::I16,
          'elem' => array(
            'type' => TType::I16,
            ),
          ),
        20 => array(
          'var' => 'plan_name',
          'type' => TType::STRING,
          ),
        21 => array(
          'var' => 'rrc_region_id',
          'type' => TType::I32,
          ),
        22 => array(
          'var' => 'position',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TSaasContractRecordQuery';
  }

  public function read($input)
  {
    return $this->_read('TSaasContractRecordQuery', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TSaasContractRecordQuery', self::$_TSPEC, $output);
  }
}

class TCRankingInfo extends TBase {
  static $_TSPEC;

  public $rrc_region_id = null;
  public $position = null;
  public $ranking_start_date = null;
  public $rrc_region_name = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'rrc_region_id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'position',
          'type' => TType::I32,
          ),
        3 => array(
          'var' => 'ranking_start_date',
          'type' => TType::STRING,
          ),
        4 => array(
          'var' => 'rrc_region_name',
          'type' => TType::STRING,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TCRankingInfo';
  }

  public function read($input)
  {
    return $this->_read('TCRankingInfo', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TCRankingInfo', self::$_TSPEC, $output);
  }
}

class TSaasContractRecord extends TBase {
  static $_TSPEC;

  public $id = null;
  public $sn = null;
  public $relevant_sn = null;
  public $status = null;
  public $remark = null;
  public $modification = null;
  public $restaurant_id = null;
  public $restaurant_name = null;
  public $contract_type = null;
  public $payment_type = null;
  public $plan_type = null;
  public $plan_name = null;
  public $plan_duration = null;
  public $plan_duration_real = null;
  public $plan_client = null;
  public $plan_price = null;
  public $plan_price_real = null;
  public $plan_bonus = null;
  public $is_bonus_sent = null;
  public $plan_remark = null;
  public $a_name = null;
  public $a_address = null;
  public $a_phone = null;
  public $a_contact_person = null;
  public $a_contact_phone = null;
  public $a_code = null;
  public $b_name = null;
  public $b_address = null;
  public $b_phone = null;
  public $b_contact_person = null;
  public $b_contact_phone = null;
  public $b_approver = null;
  public $b_signed_date = null;
  public $processor_id = null;
  public $income_rec_user_id = null;
  public $income_rec_date = null;
  public $income_rec_remark = null;
  public $income_status = null;
  public $reference_date = null;
  public $created_at = null;
  public $is_upgraded = null;
  public $is_bonus_forced = null;
  public $rrc_region_id = null;
  public $rrc_region_name = null;
  public $position = null;
  public $ranking_start_date = null;
  public $ranking_infos = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'sn',
          'type' => TType::STRING,
          ),
        3 => array(
          'var' => 'relevant_sn',
          'type' => TType::STRING,
          ),
        4 => array(
          'var' => 'status',
          'type' => TType::I32,
          ),
        5 => array(
          'var' => 'remark',
          'type' => TType::STRING,
          ),
        6 => array(
          'var' => 'modification',
          'type' => TType::STRING,
          ),
        7 => array(
          'var' => 'restaurant_id',
          'type' => TType::I32,
          ),
        8 => array(
          'var' => 'restaurant_name',
          'type' => TType::STRING,
          ),
        9 => array(
          'var' => 'contract_type',
          'type' => TType::I16,
          ),
        10 => array(
          'var' => 'payment_type',
          'type' => TType::I16,
          ),
        11 => array(
          'var' => 'plan_type',
          'type' => TType::I16,
          ),
        12 => array(
          'var' => 'plan_name',
          'type' => TType::STRING,
          ),
        13 => array(
          'var' => 'plan_duration',
          'type' => TType::I32,
          ),
        14 => array(
          'var' => 'plan_duration_real',
          'type' => TType::I32,
          ),
        15 => array(
          'var' => 'plan_client',
          'type' => TType::I16,
          ),
        16 => array(
          'var' => 'plan_price',
          'type' => TType::DOUBLE,
          ),
        17 => array(
          'var' => 'plan_price_real',
          'type' => TType::DOUBLE,
          ),
        18 => array(
          'var' => 'plan_bonus',
          'type' => TType::STRING,
          ),
        19 => array(
          'var' => 'is_bonus_sent',
          'type' => TType::BOOL,
          ),
        20 => array(
          'var' => 'plan_remark',
          'type' => TType::STRING,
          ),
        21 => array(
          'var' => 'a_name',
          'type' => TType::STRING,
          ),
        22 => array(
          'var' => 'a_address',
          'type' => TType::STRING,
          ),
        23 => array(
          'var' => 'a_phone',
          'type' => TType::STRING,
          ),
        24 => array(
          'var' => 'a_contact_person',
          'type' => TType::STRING,
          ),
        25 => array(
          'var' => 'a_contact_phone',
          'type' => TType::STRING,
          ),
        26 => array(
          'var' => 'a_code',
          'type' => TType::STRING,
          ),
        27 => array(
          'var' => 'b_name',
          'type' => TType::STRING,
          ),
        28 => array(
          'var' => 'b_address',
          'type' => TType::STRING,
          ),
        29 => array(
          'var' => 'b_phone',
          'type' => TType::STRING,
          ),
        30 => array(
          'var' => 'b_contact_person',
          'type' => TType::STRING,
          ),
        31 => array(
          'var' => 'b_contact_phone',
          'type' => TType::STRING,
          ),
        32 => array(
          'var' => 'b_approver',
          'type' => TType::STRING,
          ),
        33 => array(
          'var' => 'b_signed_date',
          'type' => TType::STRING,
          ),
        34 => array(
          'var' => 'processor_id',
          'type' => TType::I32,
          ),
        35 => array(
          'var' => 'income_rec_user_id',
          'type' => TType::I32,
          ),
        36 => array(
          'var' => 'income_rec_date',
          'type' => TType::STRING,
          ),
        37 => array(
          'var' => 'income_rec_remark',
          'type' => TType::STRING,
          ),
        38 => array(
          'var' => 'income_status',
          'type' => TType::I16,
          ),
        39 => array(
          'var' => 'reference_date',
          'type' => TType::STRING,
          ),
        40 => array(
          'var' => 'created_at',
          'type' => TType::I64,
          ),
        41 => array(
          'var' => 'is_upgraded',
          'type' => TType::BOOL,
          ),
        42 => array(
          'var' => 'is_bonus_forced',
          'type' => TType::BOOL,
          ),
        43 => array(
          'var' => 'rrc_region_id',
          'type' => TType::I32,
          ),
        44 => array(
          'var' => 'rrc_region_name',
          'type' => TType::STRING,
          ),
        45 => array(
          'var' => 'position',
          'type' => TType::I32,
          ),
        46 => array(
          'var' => 'ranking_start_date',
          'type' => TType::STRING,
          ),
        47 => array(
          'var' => 'ranking_infos',
          'type' => TType::LST,
          'etype' => TType::STRUCT,
          'elem' => array(
            'type' => TType::STRUCT,
            'class' => '\ERS\TCRankingInfo',
            ),
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TSaasContractRecord';
  }

  public function read($input)
  {
    return $this->_read('TSaasContractRecord', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TSaasContractRecord', self::$_TSPEC, $output);
  }
}

class TSaasContractComboQuery extends TBase {
  static $_TSPEC;

  public $restaurant_id = null;
  public $statuses = null;
  public $combo_types = null;
  public $income_statuses = null;
  public $from_signed_date = null;
  public $to_signed_date = null;
  public $from_created_at = null;
  public $to_created_at = null;
  public $region_ids = null;
  public $city_ids = null;
  public $processor_id = null;
  public $search = null;
  public $offset = null;
  public $limit = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'restaurant_id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'statuses',
          'type' => TType::LST,
          'etype' => TType::I16,
          'elem' => array(
            'type' => TType::I16,
            ),
          ),
        3 => array(
          'var' => 'combo_types',
          'type' => TType::LST,
          'etype' => TType::I16,
          'elem' => array(
            'type' => TType::I16,
            ),
          ),
        4 => array(
          'var' => 'income_statuses',
          'type' => TType::LST,
          'etype' => TType::I16,
          'elem' => array(
            'type' => TType::I16,
            ),
          ),
        5 => array(
          'var' => 'from_signed_date',
          'type' => TType::STRING,
          ),
        6 => array(
          'var' => 'to_signed_date',
          'type' => TType::STRING,
          ),
        7 => array(
          'var' => 'from_created_at',
          'type' => TType::I64,
          ),
        8 => array(
          'var' => 'to_created_at',
          'type' => TType::I64,
          ),
        9 => array(
          'var' => 'region_ids',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        10 => array(
          'var' => 'city_ids',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        11 => array(
          'var' => 'processor_id',
          'type' => TType::I32,
          ),
        12 => array(
          'var' => 'search',
          'type' => TType::STRING,
          ),
        13 => array(
          'var' => 'offset',
          'type' => TType::I32,
          ),
        14 => array(
          'var' => 'limit',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TSaasContractComboQuery';
  }

  public function read($input)
  {
    return $this->_read('TSaasContractComboQuery', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TSaasContractComboQuery', self::$_TSPEC, $output);
  }
}

class TSaasContractCombo extends TBase {
  static $_TSPEC;

  public $id = null;
  public $sn = null;
  public $status = null;
  public $modification = null;
  public $restaurant_id = null;
  public $restaurant_name = null;
  public $combo_type = null;
  public $saas_duration = null;
  public $saas_price = null;
  public $ranking_description = null;
  public $ranking_price = null;
  public $ranking_duration = null;
  public $signed_date = null;
  public $income_status = null;
  public $income_date_1 = null;
  public $income_date_2 = null;
  public $income_date_3 = null;
  public $saas_subcontract_1 = null;
  public $saas_subcontract_2 = null;
  public $saas_subcontract_3 = null;
  public $ranking_subcontract_1 = null;
  public $ranking_subcontract_2 = null;
  public $ranking_subcontract_3 = null;
  public $processor_id = null;
  public $created_at = null;
  public $a_name = null;
  public $a_address = null;
  public $a_phone = null;
  public $a_contact_person = null;
  public $b_name = null;
  public $b_address = null;
  public $b_phone = null;
  public $b_contact_person = null;
  public $b_approver = null;
  public $relevant_sn = null;
  public $saas_price_real = null;
  public $saas_paid = null;
  public $ranking_price_real = null;
  public $ranking_paid = null;
  public $saas_recharged = null;
  public $ranking_recharged = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'sn',
          'type' => TType::STRING,
          ),
        3 => array(
          'var' => 'status',
          'type' => TType::I32,
          ),
        4 => array(
          'var' => 'modification',
          'type' => TType::STRING,
          ),
        5 => array(
          'var' => 'restaurant_id',
          'type' => TType::I32,
          ),
        6 => array(
          'var' => 'restaurant_name',
          'type' => TType::STRING,
          ),
        7 => array(
          'var' => 'combo_type',
          'type' => TType::I16,
          ),
        8 => array(
          'var' => 'saas_duration',
          'type' => TType::I16,
          ),
        9 => array(
          'var' => 'saas_price',
          'type' => TType::DOUBLE,
          ),
        10 => array(
          'var' => 'ranking_description',
          'type' => TType::STRING,
          ),
        11 => array(
          'var' => 'ranking_price',
          'type' => TType::DOUBLE,
          ),
        12 => array(
          'var' => 'ranking_duration',
          'type' => TType::I16,
          ),
        13 => array(
          'var' => 'signed_date',
          'type' => TType::STRING,
          ),
        14 => array(
          'var' => 'income_status',
          'type' => TType::I16,
          ),
        15 => array(
          'var' => 'income_date_1',
          'type' => TType::STRING,
          ),
        16 => array(
          'var' => 'income_date_2',
          'type' => TType::STRING,
          ),
        17 => array(
          'var' => 'income_date_3',
          'type' => TType::STRING,
          ),
        18 => array(
          'var' => 'saas_subcontract_1',
          'type' => TType::STRING,
          ),
        19 => array(
          'var' => 'saas_subcontract_2',
          'type' => TType::STRING,
          ),
        20 => array(
          'var' => 'saas_subcontract_3',
          'type' => TType::STRING,
          ),
        21 => array(
          'var' => 'ranking_subcontract_1',
          'type' => TType::STRING,
          ),
        22 => array(
          'var' => 'ranking_subcontract_2',
          'type' => TType::STRING,
          ),
        23 => array(
          'var' => 'ranking_subcontract_3',
          'type' => TType::STRING,
          ),
        24 => array(
          'var' => 'processor_id',
          'type' => TType::I32,
          ),
        25 => array(
          'var' => 'created_at',
          'type' => TType::I64,
          ),
        26 => array(
          'var' => 'a_name',
          'type' => TType::STRING,
          ),
        27 => array(
          'var' => 'a_address',
          'type' => TType::STRING,
          ),
        28 => array(
          'var' => 'a_phone',
          'type' => TType::STRING,
          ),
        29 => array(
          'var' => 'a_contact_person',
          'type' => TType::STRING,
          ),
        30 => array(
          'var' => 'b_name',
          'type' => TType::STRING,
          ),
        31 => array(
          'var' => 'b_address',
          'type' => TType::STRING,
          ),
        32 => array(
          'var' => 'b_phone',
          'type' => TType::STRING,
          ),
        33 => array(
          'var' => 'b_contact_person',
          'type' => TType::STRING,
          ),
        34 => array(
          'var' => 'b_approver',
          'type' => TType::STRING,
          ),
        35 => array(
          'var' => 'relevant_sn',
          'type' => TType::STRING,
          ),
        36 => array(
          'var' => 'saas_price_real',
          'type' => TType::DOUBLE,
          ),
        37 => array(
          'var' => 'saas_paid',
          'type' => TType::DOUBLE,
          ),
        38 => array(
          'var' => 'ranking_price_real',
          'type' => TType::DOUBLE,
          ),
        39 => array(
          'var' => 'ranking_paid',
          'type' => TType::DOUBLE,
          ),
        40 => array(
          'var' => 'saas_recharged',
          'type' => TType::I16,
          ),
        41 => array(
          'var' => 'ranking_recharged',
          'type' => TType::I16,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TSaasContractCombo';
  }

  public function read($input)
  {
    return $this->_read('TSaasContractCombo', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TSaasContractCombo', self::$_TSPEC, $output);
  }
}

class TRegionQuery extends TBase {
  static $_TSPEC;

  public $region_ids = null;
  public $search = null;
  public $type_codes = null;
  public $city_ids = null;
  public $show_all = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'region_ids',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        2 => array(
          'var' => 'search',
          'type' => TType::STRING,
          ),
        3 => array(
          'var' => 'type_codes',
          'type' => TType::LST,
          'etype' => TType::I16,
          'elem' => array(
            'type' => TType::I16,
            ),
          ),
        4 => array(
          'var' => 'city_ids',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        5 => array(
          'var' => 'show_all',
          'type' => TType::BOOL,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TRegionQuery';
  }

  public function read($input)
  {
    return $this->_read('TRegionQuery', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TRegionQuery', self::$_TSPEC, $output);
  }
}

class TRegionGroupQuery extends TBase {
  static $_TSPEC;

  public $region_group_ids = null;
  public $search = null;
  public $city_ids = null;
  public $offset = null;
  public $limit = null;
  public $show_all = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'region_group_ids',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        2 => array(
          'var' => 'search',
          'type' => TType::STRING,
          ),
        3 => array(
          'var' => 'city_ids',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        4 => array(
          'var' => 'offset',
          'type' => TType::I32,
          ),
        5 => array(
          'var' => 'limit',
          'type' => TType::I32,
          ),
        6 => array(
          'var' => 'show_all',
          'type' => TType::BOOL,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TRegionGroupQuery';
  }

  public function read($input)
  {
    return $this->_read('TRegionGroupQuery', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TRegionGroupQuery', self::$_TSPEC, $output);
  }
}

class TRestaurantInRegionQuery extends TBase {
  static $_TSPEC;

  public $region_ids = null;
  public $is_valid = null;
  public $search = null;
  public $offset = null;
  public $limit = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'region_ids',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        2 => array(
          'var' => 'is_valid',
          'type' => TType::BOOL,
          ),
        3 => array(
          'var' => 'search',
          'type' => TType::STRING,
          ),
        4 => array(
          'var' => 'offset',
          'type' => TType::I32,
          ),
        5 => array(
          'var' => 'limit',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TRestaurantInRegionQuery';
  }

  public function read($input)
  {
    return $this->_read('TRestaurantInRegionQuery', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TRestaurantInRegionQuery', self::$_TSPEC, $output);
  }
}

class TCRestaurantSaasStats extends TBase {
  static $_TSPEC;

  public $group = null;
  public $napos_num = null;
  public $napos_rate = null;
  public $trial_num = null;
  public $trial_rate = null;
  public $pay_num = null;
  public $pay_rate = null;
  public $temp_free_num = null;
  public $temp_free_rate = null;
  public $napos_mobile_num = null;
  public $napos_mobile_rate = null;
  public $has_food_img_num = null;
  public $has_food_img_rate = null;
  public $online_payment_num = null;
  public $online_payment_rate = null;
  public $has_food_activity_num = null;
  public $has_food_activity_rate = null;
  public $total_num = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'group',
          'type' => TType::I16,
          ),
        2 => array(
          'var' => 'napos_num',
          'type' => TType::I32,
          ),
        3 => array(
          'var' => 'napos_rate',
          'type' => TType::DOUBLE,
          ),
        4 => array(
          'var' => 'trial_num',
          'type' => TType::I32,
          ),
        5 => array(
          'var' => 'trial_rate',
          'type' => TType::DOUBLE,
          ),
        6 => array(
          'var' => 'pay_num',
          'type' => TType::I32,
          ),
        7 => array(
          'var' => 'pay_rate',
          'type' => TType::DOUBLE,
          ),
        8 => array(
          'var' => 'temp_free_num',
          'type' => TType::I32,
          ),
        9 => array(
          'var' => 'temp_free_rate',
          'type' => TType::DOUBLE,
          ),
        10 => array(
          'var' => 'napos_mobile_num',
          'type' => TType::I32,
          ),
        11 => array(
          'var' => 'napos_mobile_rate',
          'type' => TType::DOUBLE,
          ),
        12 => array(
          'var' => 'has_food_img_num',
          'type' => TType::I32,
          ),
        13 => array(
          'var' => 'has_food_img_rate',
          'type' => TType::DOUBLE,
          ),
        14 => array(
          'var' => 'online_payment_num',
          'type' => TType::I32,
          ),
        15 => array(
          'var' => 'online_payment_rate',
          'type' => TType::DOUBLE,
          ),
        16 => array(
          'var' => 'has_food_activity_num',
          'type' => TType::I32,
          ),
        17 => array(
          'var' => 'has_food_activity_rate',
          'type' => TType::DOUBLE,
          ),
        18 => array(
          'var' => 'total_num',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TCRestaurantSaasStats';
  }

  public function read($input)
  {
    return $this->_read('TCRestaurantSaasStats', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TCRestaurantSaasStats', self::$_TSPEC, $output);
  }
}

class TCCommentWithReplies extends TBase {
  static $_TSPEC;

  public $comment = null;
  public $comment_replies = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'comment',
          'type' => TType::STRUCT,
          'class' => '\ERS\TRestaurantComment',
          ),
        2 => array(
          'var' => 'comment_replies',
          'type' => TType::LST,
          'etype' => TType::STRUCT,
          'elem' => array(
            'type' => TType::STRUCT,
            'class' => '\ERS\TRestaurantCommentReply',
            ),
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TCCommentWithReplies';
  }

  public function read($input)
  {
    return $this->_read('TCCommentWithReplies', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TCCommentWithReplies', self::$_TSPEC, $output);
  }
}

class TCFoodActivityWithRestaurantIds extends TBase {
  static $_TSPEC;

  public $food_activity = null;
  public $restaurant_ids = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'food_activity',
          'type' => TType::STRUCT,
          'class' => '\ERS\TFoodActivity',
          ),
        2 => array(
          'var' => 'restaurant_ids',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TCFoodActivityWithRestaurantIds';
  }

  public function read($input)
  {
    return $this->_read('TCFoodActivityWithRestaurantIds', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TCFoodActivityWithRestaurantIds', self::$_TSPEC, $output);
  }
}

class TCRestaurantActivityWithRestaurantIds extends TBase {
  static $_TSPEC;

  public $restaurant_activity = null;
  public $restaurant_ids = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'restaurant_activity',
          'type' => TType::STRUCT,
          'class' => '\ERS\TRestaurantActivity',
          ),
        2 => array(
          'var' => 'restaurant_ids',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TCRestaurantActivityWithRestaurantIds';
  }

  public function read($input)
  {
    return $this->_read('TCRestaurantActivityWithRestaurantIds', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TCRestaurantActivityWithRestaurantIds', self::$_TSPEC, $output);
  }
}

class TOperationRemindQuery extends TBase {
  static $_TSPEC;

  public $status = null;
  public $remind_time_out = null;
  public $by_user_id = null;
  public $restaurant_name = null;
  public $offset = null;
  public $limit = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'status',
          'type' => TType::I16,
          ),
        2 => array(
          'var' => 'remind_time_out',
          'type' => TType::BOOL,
          ),
        3 => array(
          'var' => 'by_user_id',
          'type' => TType::I32,
          ),
        4 => array(
          'var' => 'restaurant_name',
          'type' => TType::STRING,
          ),
        5 => array(
          'var' => 'offset',
          'type' => TType::I32,
          ),
        6 => array(
          'var' => 'limit',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TOperationRemindQuery';
  }

  public function read($input)
  {
    return $this->_read('TOperationRemindQuery', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TOperationRemindQuery', self::$_TSPEC, $output);
  }
}

class TCOperationRemind extends TBase {
  static $_TSPEC;

  public $id = null;
  public $restaurant_id = null;
  public $restaurant_name = null;
  public $description = null;
  public $by_user_id = null;
  public $status = null;
  public $remind_time = null;
  public $created_at = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'restaurant_id',
          'type' => TType::I32,
          ),
        3 => array(
          'var' => 'restaurant_name',
          'type' => TType::STRING,
          ),
        4 => array(
          'var' => 'description',
          'type' => TType::STRING,
          ),
        5 => array(
          'var' => 'by_user_id',
          'type' => TType::I32,
          ),
        6 => array(
          'var' => 'status',
          'type' => TType::I16,
          ),
        7 => array(
          'var' => 'remind_time',
          'type' => TType::I64,
          ),
        8 => array(
          'var' => 'created_at',
          'type' => TType::I64,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TCOperationRemind';
  }

  public function read($input)
  {
    return $this->_read('TCOperationRemind', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TCOperationRemind', self::$_TSPEC, $output);
  }
}

class TCFavoredUser extends TBase {
  static $_TSPEC;

  public $id = null;
  public $username = null;
  public $favored_time = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'username',
          'type' => TType::STRING,
          ),
        3 => array(
          'var' => 'favored_time',
          'type' => TType::I64,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TCFavoredUser';
  }

  public function read($input)
  {
    return $this->_read('TCFavoredUser', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TCFavoredUser', self::$_TSPEC, $output);
  }
}

class TNaposCommentQuery extends TBase {
  static $_TSPEC;

  public $restaurant_id = null;
  public $type = null;
  public $offset = null;
  public $limit = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'restaurant_id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'type',
          'type' => TType::STRING,
          ),
        3 => array(
          'var' => 'offset',
          'type' => TType::I32,
          ),
        4 => array(
          'var' => 'limit',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TNaposCommentQuery';
  }

  public function read($input)
  {
    return $this->_read('TNaposCommentQuery', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TNaposCommentQuery', self::$_TSPEC, $output);
  }
}

class TRestaurantMessage extends TBase {
  static $_TSPEC;

  public $id = null;
  public $restaurant_id = null;
  public $content = null;
  public $is_read = null;
  public $link = null;
  public $link_text = null;
  public $created_at = null;
  public $type_code = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'restaurant_id',
          'type' => TType::I32,
          ),
        3 => array(
          'var' => 'content',
          'type' => TType::STRING,
          ),
        4 => array(
          'var' => 'is_read',
          'type' => TType::BOOL,
          ),
        5 => array(
          'var' => 'link',
          'type' => TType::STRING,
          ),
        6 => array(
          'var' => 'link_text',
          'type' => TType::STRING,
          ),
        7 => array(
          'var' => 'created_at',
          'type' => TType::I64,
          ),
        8 => array(
          'var' => 'type_code',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TRestaurantMessage';
  }

  public function read($input)
  {
    return $this->_read('TRestaurantMessage', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TRestaurantMessage', self::$_TSPEC, $output);
  }
}

class TCWalleKPIStats extends TBase {
  static $_TSPEC;

  public $num = null;
  public $pay_num = null;
  public $trial_num = null;
  public $new_num = null;
  public $client_num = null;
  public $food_img_num = null;
  public $time_ensure_num = null;
  public $coupon_enabled_num = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'num',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'pay_num',
          'type' => TType::I32,
          ),
        3 => array(
          'var' => 'trial_num',
          'type' => TType::I32,
          ),
        4 => array(
          'var' => 'new_num',
          'type' => TType::I32,
          ),
        5 => array(
          'var' => 'client_num',
          'type' => TType::I32,
          ),
        6 => array(
          'var' => 'food_img_num',
          'type' => TType::I32,
          ),
        7 => array(
          'var' => 'time_ensure_num',
          'type' => TType::I32,
          ),
        8 => array(
          'var' => 'coupon_enabled_num',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TCWalleKPIStats';
  }

  public function read($input)
  {
    return $this->_read('TCWalleKPIStats', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TCWalleKPIStats', self::$_TSPEC, $output);
  }
}

class TOnlinePaymentApplyQuery extends TBase {
  static $_TSPEC;

  public $status = null;
  public $search = null;
  public $region_ids = null;
  public $offset = null;
  public $limit = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'status',
          'type' => TType::I16,
          ),
        2 => array(
          'var' => 'search',
          'type' => TType::STRING,
          ),
        3 => array(
          'var' => 'region_ids',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        4 => array(
          'var' => 'offset',
          'type' => TType::I32,
          ),
        5 => array(
          'var' => 'limit',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TOnlinePaymentApplyQuery';
  }

  public function read($input)
  {
    return $this->_read('TOnlinePaymentApplyQuery', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TOnlinePaymentApplyQuery', self::$_TSPEC, $output);
  }
}

class TCWalleOnlinePaymentApply extends TBase {
  static $_TSPEC;

  public $id = null;
  public $status = null;
  public $restaurant_id = null;
  public $restaurant_name = null;
  public $created_at = null;
  public $user_id = null;
  public $username = null;
  public $card_id = null;
  public $cardholder_name = null;
  public $bank_id = null;
  public $bank_name = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'status',
          'type' => TType::I16,
          ),
        3 => array(
          'var' => 'restaurant_id',
          'type' => TType::I32,
          ),
        4 => array(
          'var' => 'restaurant_name',
          'type' => TType::STRING,
          ),
        5 => array(
          'var' => 'created_at',
          'type' => TType::I64,
          ),
        6 => array(
          'var' => 'user_id',
          'type' => TType::I32,
          ),
        7 => array(
          'var' => 'username',
          'type' => TType::STRING,
          ),
        8 => array(
          'var' => 'card_id',
          'type' => TType::STRING,
          ),
        9 => array(
          'var' => 'cardholder_name',
          'type' => TType::STRING,
          ),
        10 => array(
          'var' => 'bank_id',
          'type' => TType::I32,
          ),
        11 => array(
          'var' => 'bank_name',
          'type' => TType::STRING,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TCWalleOnlinePaymentApply';
  }

  public function read($input)
  {
    return $this->_read('TCWalleOnlinePaymentApply', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TCWalleOnlinePaymentApply', self::$_TSPEC, $output);
  }
}

class TWhitelist extends TBase {
  static $_TSPEC;

  public $city_ids = null;
  public $region_group_ids = null;
  public $region_ids = null;
  public $restaurant_ids = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'city_ids',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        2 => array(
          'var' => 'region_group_ids',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        3 => array(
          'var' => 'region_ids',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        4 => array(
          'var' => 'restaurant_ids',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TWhitelist';
  }

  public function read($input)
  {
    return $this->_read('TWhitelist', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TWhitelist', self::$_TSPEC, $output);
  }
}

class TCRestaurantManageTree extends TBase {
  static $_TSPEC;

  public $region_id = null;
  public $region_name = null;
  public $region_group_id = null;
  public $region_group_name = null;
  public $city_id = null;
  public $city_name = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'region_id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'region_name',
          'type' => TType::STRING,
          ),
        3 => array(
          'var' => 'region_group_id',
          'type' => TType::I32,
          ),
        4 => array(
          'var' => 'region_group_name',
          'type' => TType::STRING,
          ),
        5 => array(
          'var' => 'city_id',
          'type' => TType::I32,
          ),
        6 => array(
          'var' => 'city_name',
          'type' => TType::STRING,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TCRestaurantManageTree';
  }

  public function read($input)
  {
    return $this->_read('TCRestaurantManageTree', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TCRestaurantManageTree', self::$_TSPEC, $output);
  }
}

class TPerformanceAssessmentBlock extends TBase {
  static $_TSPEC;

  public $id = null;
  public $name = null;
  public $type_code = null;
  public $city_id = null;
  public $region_group_ids = null;
  public $region_ids = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'name',
          'type' => TType::STRING,
          ),
        3 => array(
          'var' => 'type_code',
          'type' => TType::I32,
          ),
        4 => array(
          'var' => 'city_id',
          'type' => TType::I32,
          ),
        5 => array(
          'var' => 'region_group_ids',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        6 => array(
          'var' => 'region_ids',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TPerformanceAssessmentBlock';
  }

  public function read($input)
  {
    return $this->_read('TPerformanceAssessmentBlock', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TPerformanceAssessmentBlock', self::$_TSPEC, $output);
  }
}

class TNaposEnv extends TBase {
  static $_TSPEC;

  public $restaurant_id = null;
  public $food_safe_agreed = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'restaurant_id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'food_safe_agreed',
          'type' => TType::BOOL,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TNaposEnv';
  }

  public function read($input)
  {
    return $this->_read('TNaposEnv', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TNaposEnv', self::$_TSPEC, $output);
  }
}

class ERSUserException extends TException {
  static $_TSPEC;

  public $error_code = null;
  public $error_name = null;
  public $message = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'error_code',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'error_name',
          'type' => TType::STRING,
          ),
        3 => array(
          'var' => 'message',
          'type' => TType::STRING,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ERSUserException';
  }

  public function read($input)
  {
    return $this->_read('ERSUserException', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ERSUserException', self::$_TSPEC, $output);
  }
}

class ERSSystemException extends TException {
  static $_TSPEC;

  public $error_code = null;
  public $error_name = null;
  public $message = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'error_code',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'error_name',
          'type' => TType::STRING,
          ),
        3 => array(
          'var' => 'message',
          'type' => TType::STRING,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ERSSystemException';
  }

  public function read($input)
  {
    return $this->_read('ERSSystemException', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ERSSystemException', self::$_TSPEC, $output);
  }
}

class ERSUnknownException extends TException {
  static $_TSPEC;

  public $error_code = null;
  public $error_name = null;
  public $message = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'error_code',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'error_name',
          'type' => TType::STRING,
          ),
        3 => array(
          'var' => 'message',
          'type' => TType::STRING,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ERSUnknownException';
  }

  public function read($input)
  {
    return $this->_read('ERSUnknownException', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ERSUnknownException', self::$_TSPEC, $output);
  }
}

$GLOBALS['ers_CONSTANTS']['DEFAULT_LIST_SIZE'] = 100;

$GLOBALS['ers_CONSTANTS']['MAX_LIST_SIZE'] = 1000;

$GLOBALS['ers_CONSTANTS']['SORT_TYPE_DESC'] = 1;

$GLOBALS['ers_CONSTANTS']['SORT_TYPE_ASC'] = 2;

$GLOBALS['ers_CONSTANTS']['FOOD_DEFAULT_STOCK'] = 1000;

$GLOBALS['ers_CONSTANTS']['FOOD_STOCK_CACHE_PREFIX'] = "food:stock";

$GLOBALS['ers_CONSTANTS']['TIYANDIAN_RESTAURANT_ID'] = 59;

$GLOBALS['ers_CONSTANTS']['AREA_ALL'] = -1;

$GLOBALS['ers_CONSTANTS']['REGION_TYPE_ALL'] = -1;

$GLOBALS['ers_CONSTANTS']['AREA_UNGROUPED'] = -2;

$GLOBALS['ers_CONSTANTS']['SAAS_TRIAL_DAYS_LIMIT'] = 15;

$GLOBALS['ers_CONSTANTS']['SAAS_LOCK_PREFIX'] = "lock:saas:";

$GLOBALS['ers_CONSTANTS']['USER_ID_SYSTEM'] = -1;

$GLOBALS['ers_CONSTANTS']['REGION_CHANGE_TATUS_GEOS_FINISHED'] = 1;

$GLOBALS['ers_CONSTANTS']['REGION_CHANGE_TATUS_EOS_FINISHED'] = 2;

$GLOBALS['ers_CONSTANTS']['EXCLUDE_TEST_RESTAURANT'] = array(
  59,
  11811,
  11813,
  11814,
  25381,
  28817,
  28820,
);

$GLOBALS['ers_CONSTANTS']['INNER_TEST_RESTAURANT'] = array(
  11811,
  11813,
  11814,
  25381,
  28817,
  28820,
);

$GLOBALS['ers_CONSTANTS']['STATUS_NEED_NOTICE'] = array(
  "is_valid",
  "busy_level",
  "order_mode",
);

$GLOBALS['ers_CONSTANTS']['RESTAURANT_ATTR_HALF_PRICE'] = "half_price";

$GLOBALS['ers_CONSTANTS']['RESTAURANT_ATTR_HALF_PRICE_BACKUP'] = "half_price_backup";

$GLOBALS['ers_CONSTANTS']['RESTAURANT_ATTR_FREE_ORDER'] = "free_order";

$GLOBALS['ers_CONSTANTS']['RESTAURANT_ATTR_HUANBAO'] = "huanbao";

$GLOBALS['ers_CONSTANTS']['RESTAURANT_ATTR_HUANBAO_DOUBLE_POINT'] = "huanbao_double_point";

$GLOBALS['ers_CONSTANTS']['RESTAURANT_ATTR_COCA'] = "coca";

$GLOBALS['ers_CONSTANTS']['RESTAURANT_ATTR_DOUBLE_POINT'] = "double_point";

$GLOBALS['ers_CONSTANTS']['RESTAURANT_ATTR_FAPIAO'] = "fapiao";

$GLOBALS['ers_CONSTANTS']['RESTAURANT_ATTR_QUAN'] = "quan";

$GLOBALS['ers_CONSTANTS']['RESTAURANT_ATTR_DISCOUNT8'] = "discount8";

$GLOBALS['ers_CONSTANTS']['RESTAURANT_ATTR_ZHUKAO_HALF_PRICE'] = "zhukao_half_price";

$GLOBALS['ers_CONSTANTS']['RESTAURANT_ATTR_NEW_USER_DISCOUNT'] = "new_user_discount";

$GLOBALS['ers_CONSTANTS']['RESTAURANT_ATTR_NEW_USER_DISCOUNT_AMOUNT'] = "new_user_discount_amount";

$GLOBALS['ers_CONSTANTS']['RESTAURANT_ATTR_NEW_USER_DISCOUNT_RESTAURANT_PAY'] = "new_user_discount_restaurant_pay";

$GLOBALS['ers_CONSTANTS']['RESTAURANT_ATTR_COUPON_DISCOUNT_RESTAURANT_PAY'] = "coupon_discount_restaurant_pay";

$GLOBALS['ers_CONSTANTS']['RESTAURANT_ATTR_DISCOUNT_88'] = "discount_88";

$GLOBALS['ers_CONSTANTS']['RESTAURANT_ATTR_GUANGZHOU_COCA'] = "guangzhou_coca";

$GLOBALS['ers_CONSTANTS']['RESTAURANT_ATTR_EXTRA_DISCOUNT'] = "extra_discount";

$GLOBALS['ers_CONSTANTS']['RESTAURANT_ATTR_SETUP_STEP'] = "setup_step";

$GLOBALS['ers_CONSTANTS']['RESTAURANT_ATTR_DP_NEW_USER_DISCOUNT'] = "dp_new_user_discount";

$GLOBALS['ers_CONSTANTS']['RESTAURANT_ATTR_ELEME_BUY_DISCOUNT'] = "eleme_buy_discount";

$GLOBALS['ers_CONSTANTS']['RESTAURANT_ATTR_MUST_PAY_ONLINE'] = "must_pay_online";


