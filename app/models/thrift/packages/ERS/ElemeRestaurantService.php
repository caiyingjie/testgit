<?php
namespace ERS;
/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
use Thrift\Base\TBase;
use Thrift\Type\TType;
use Thrift\Type\TMessageType;
use Thrift\Exception\TException;
use Thrift\Exception\TProtocolException;
use Thrift\Protocol\TProtocol;
use Thrift\Protocol\TBinaryProtocolAccelerated;
use Thrift\Exception\TApplicationException;


interface ElemeRestaurantServiceIf {
  public function ping();
  public function search_restaurant(\ERS\TRestaurantSearchQuery $query_struct);
  public function search_area_restaurant(\ERS\TRestaurantAreaSearchQuery $query_struct);
  public function search_certification_restaurant(\ERS\TRestaurantCertificationSearchQuery $query_struct);
  public function search_area_food(\ERS\TRestaurantAreaSearchQuery $query_struct);
  public function search_food(\ERS\TFoodSearchQuery $query_struct);
  public function update_cache_for_replicator($name, $ids, $type_);
  public function update_cache($tablename, $ids);
  public function clear_cache($api_name, $params);
  public function check_favored($user_id, $restaurant_id);
  public function add_favored($user_id, $restaurant_id);
  public function remove_favored($user_id, $restaurant_id);
  public function count_favored($user_id);
  public function mcount_restaurant_by_entry_id($entry_ids);
  public function check_favor_food($user_id, $food_id);
  public function add_favor_food($user_id, $food_id);
  public function remove_favor_food($user_id, $food_id);
  public function add_comment($user_id, $username, $restaurant_id, $content);
  public function count_comment(\ERS\TRestaurantCommentQuery $query_struct);
  public function add_comment_reply($comment_id, $user_id, $content, $type);
  public function get_deliver_amount_by_entry($restaurant_id, $entry_id);
  public function get_foods_stock($food_ids);
  public function incr_foods_stock($food_stock_map);
  public function decr_foods_stock($food_stock_map);
  public function set_food_stock($food_id, $stock);
  public function set_restaurant_food_eleme_buy_discount($restaurant_id, $discount);
  public function refresh_food_stock($food_id);
  public function get_region_id($entry_id, $geohash, $restaurant_id);
  public function get_region_region_group_map($region_ids);
  public function get_restaurant_region_map($restaurant_ids);
  public function add_restaurant_message($restaurant_id, $message_type, $info);
  public function mset_activity_valid($activity_ids, $is_valid);
  public function mset_activity_default($activity_ids, $is_default);
  public function set_direct_struct($user_id, \ERS\TDirectStruct $update_struct);
  public function remove_activity($activity_id);
  public function update_activity(\ERS\TActivity $update_struct);
  public function save_activity($activity_id, \ERS\TActivity $save_struct);
  public function save_dock_corp($dock_corp_id, \ERS\TDockCorp $save_struct);
  public function set_restaurant_dock_corp($restaurant_id, $corp_id);
  public function delete_dock_corp_restaurant_by_restaurant_id($restaurant_id);
  public function mset_food_stock(\ERS\TFoodStock $mset_struct);
  public function mset_food_stock_by_category($category_id, $is_max);
  public function mset_food_stock_by_food_ids($food_ids, $is_max);
  public function update_food(\ERS\TFood $update_struct);
  public function save_food($food_id, \ERS\TFood $t_food);
  public function napos_save_food($food_id, \ERS\TFood $t_food);
  public function remove_food($food_id);
  public function set_food_position($food_id, $position);
  public function mset_food_position($food_ids);
  public function update_food_category(\ERS\TFoodCategory $update_struct);
  public function save_food_category($category_id, \ERS\TFoodCategory $t_category);
  public function remove_food_category($food_category_id);
  public function set_food_category_position($category_id, $position);
  public function mset_food_category_position($category_ids);
  public function add_food_category_attr($category_id, $attr);
  public function remove_food_category_attr($category_id, $attr);
  public function remove_food_garnish_category($food_garnish_category_id);
  public function update_food_garnish_category(\ERS\TFoodGarnishCategory $update_struct);
  public function food_ugc_image_upload($order_item_id, $image_hash_list, $come_from);
  public function process_food_ugc_image($food_ugc_image_id, $to_status, $user_id, $remark);
  public function remove_garnish($garnish_id);
  public function update_garnish(\ERS\TGarnish $update_struct);
  public function remove_garnish_category($garnish_category_id);
  public function update_garnish_category(\ERS\TGarnishCategory $update_struct);
  public function update_logo(\ERS\TLogo $update_struct);
  public function new_restaurant(\ERS\TRestaurant $new_struct);
  public function update_restaurant_geohash($restaurant_id);
  public function update_restaurant_region($restaurant_id, $region_id);
  public function reset_restaurant_region($restaurant_id);
  public function set_restaurant_status($restaurant_id, $status, $value, $user_id, $remark, $remind_time, $corp_id);
  public function mset_restaurant_status_direct($restaurant_ids, $status, $value, $user_id, $remark);
  public function send_restaurant_change_notice($record_id);
  public function send_saas_change_notice($record_id);
  public function get_free_gift_icon_by_category($entity_category_id);
  public function add_restaurant_open_apply($user_id, $applicant, $telephone, $mobilephone, $qq, $city_id, $entry_id, $geohash, $restaurant_name, $restaurant_address, $restaurant_description, $restaurant_url);
  public function is_reserved_restaurant_url($restaurant_url);
  public function get_city_entry_json($city_id);
  public function get_restaurant_ugc_image_json($restaurant_id, $limit);
  public function get_restaurant_ugc_image_json_new($restaurant_id, $limit);
  public function get_restaurant_menu_json($restaurant_id);
  public function get_restaurant_menu_json_new($restaurant_id);
  public function add_food_activity($food_activity_id, $food_ids, $weekdays);
  public function clear_food_activity($food_ids, $weekdays);
  public function sync_food_activity_with_category($food_id, $food_category_id);
  public function dismiss_food_activity($food_activity_id);
  public function count_seo_sm_place(\ERS\TSeoSmQuery $query_struct);
  public function update_restaurant($restaurant_id, $user_id, \ERS\TRestaurant $t_rst);
  public function overload_close_restaurant($order_modes, $saas_statuses, $sms_services, $exculde_city_ids, $exculde_region_group_ids, $exculde_region_ids, $exculde_restaurant_ids);
  public function get_restaurant_deliver_time($restaurant_id);
  public function get_restaurant_manage_tree($restaurant_id);
  public function all_restaurant_back_alive($from_datetime, $order_modes, $saas_statuses, $sms_services, $city_ids, $region_group_ids, $region_ids, $restaurant_ids);
  public function check_restaurant_permission($user_id, $restaurant_id);
  public function mget_restaurant_in_region($region_ids, $is_valid);
  public function archive_restaurant_status();
  public function do_archive_restaurant_status($restaurant_ids, $record_time);
  public function get_area_structure($user_id);
  public function get_stats_area_structure($user_id);
  public function filter_area($user_id, $struct_json);
  public function filter_stats_area($user_id, $struct_json);
  public function saas_status_touch($restaurant_id, $change_type, $user_id);
  public function saas_recharge_custom($restaurant_id, $change_attr, $change_amount, $user_id, $remark);
  public function saas_set_status_custom($restaurant_id, $status_new, $remark, $user_id);
  public function saas_set_trial($restaurant_id, $bonus, $user_id);
  public function saas_set_temp_free($restaurant_id, $end_date, $remark, $user_id);
  public function saas_abandon_contract($sn, $user_id, $remark);
  public function saas_archive_contract($sn, $user_id, $remark);
  public function saas_set_contract_bonus_sent($sn, $user_id, $remark);
  public function saas_confirm_income($sn, $payment_type, $user_id, $rec_date, $remark);
  public function saas_check_trials($restaurant_ids);
  public function saas_check_remains();
  public function saas_check_temp_frees();
  public function saas_check_abandons();
  public function saas_daily_report();
  public function save_saas_contract_plan($plan_id, \ERS\TSaasContractPlan $t_saas_contract_plan);
  public function count_saas_contract_plan(\ERS\TSaasContractPlanQuery $query_struct);
  public function query_saas_contract_plan(\ERS\TSaasContractPlanQuery $query_struct);
  public function get_saas_contract_plan($plan_id);
  public function new_saas_contract_record(\ERS\TSaasContractRecord $t_record);
  public function count_saas_contract_record(\ERS\TSaasContractRecordQuery $query_struct);
  public function query_saas_contract_record(\ERS\TSaasContractRecordQuery $query_struct);
  public function query_saas_status(\ERS\TSaasStatusQuery $query_struct);
  public function count_saas_status(\ERS\TSaasStatusQuery $query_struct);
  public function query_saas_status_change(\ERS\TSaasStatusChangeQuery $query_struct);
  public function count_saas_status_change(\ERS\TSaasStatusChangeQuery $query_struct);
  public function get_saas_contract_record($sn);
  public function mget_saas_contract_record($sns);
  public function saas_update_contract_ranking_info($sn, $ranking_infos, $user_id, $remark);
  public function get_saas_contract_combo($sn);
  public function mget_saas_contract_combo($sns);
  public function query_saas_contract_combo(\ERS\TSaasContractComboQuery $query_struct);
  public function count_saas_contract_combo(\ERS\TSaasContractComboQuery $query_struct);
  public function new_saas_contract_combo(\ERS\TSaasContractCombo $t_combo);
  public function confirm_saas_combo_income($sn, $payment_type, $user_id, $rec_date, $remark, $saas_duration, $saas_price, $ranking_duration, $ranking_price);
  public function stop_saas_contract_combo($sn, $user_id, $remark);
  public function abandon_saas_contract_combo($sn, $user_id, $remark);
  public function op_quit($restaurant_id, $admin_user_id, $password);
  public function new_food_activity(\ERS\TFoodActivity $new_activity);
  public function update_food_activity($food_activity_id, \ERS\TFoodActivity $activity_struct);
  public function get_restaurant_appliable_activity_ids($restaurant_id, $activity_category_id, $activity_type);
  public function get_restaurant_activity_status($restaurant_id, $activity_type);
  public function get_food_activity_status($restaurant_id);
  public function get_participatable_food_activity_ids($restaurant_id);
  public function apply_for_activity_subsidy_contract($restaurant_id, $activity_id, $activity_category_id, $subsidy, $submit_user_id);
  public function apply_for_complex_activity_subsidy_contract($restaurant_id, $activity_id, $activity_category_id, $subsidy_json, $submit_user_id);
  public function approve_activity_subsidy_contract($contract_ids);
  public function reject_activity_subsidy_contract($contract_ids);
  public function sign_activity_subsidy_contract($subsidy_contract_id, $restaurant_id);
  public function refuse_activity_subsidy_contract($subsidy_contract_id, $restaurant_id);
  public function get_restaurant_activity_subsidy($restaurant_id, $activity_id, $activity_category_id);
  public function get_restaurant_activity_complex_subsidy($restaurant_id, $activity_id, $activity_category_id);
  public function get_activity_subsidy_contract($subsidy_contract_id);
  public function query_activity_subsidy_contract(\ERS\TActivitySubsidyContractQuery $query_struct);
  public function save_city($city_id, \ERS\TCity $t_city);
  public function save_area($area_id, \ERS\TArea $t_area);
  public function delete_area($area_id);
  public function save_region($region_id, \ERS\TRegion $t_region);
  public function remove_region($region_id, $user_id);
  public function query_region(\ERS\TRegionQuery $query_struct);
  public function query_restaurant_in_region(\ERS\TRestaurantInRegionQuery $query_struct);
  public function save_entry($entry_id, \ERS\TEntry $t_entry);
  public function walle_count_entry(\ERS\TWalleEntryQuery $query_struct);
  public function walle_query_entry(\ERS\TWalleEntryQuery $query_struct);
  public function walle_get_kpi_stats(\ERS\TWalleKPIFilter $filter_struct);
  public function walle_count_online_payment_apply(\ERS\TOnlinePaymentApplyQuery $query_struct);
  public function walle_query_online_payment_apply(\ERS\TOnlinePaymentApplyQuery $query_struct);
  public function walle_new_online_payment_apply($user_bankcard_id, $restaurant_id);
  public function walle_online_payment_approve($record_id);
  public function walle_online_payment_overrule($record_id);
  public function fast_online_payment_approve($restaurant_id);
  public function save_district($district_id, \ERS\TDistrict $t_district);
  public function save_zone($zone_id, \ERS\TZone $t_zone);
  public function count_restaurant_in_region(\ERS\TRestaurantInRegionQuery $query_struct);
  public function query_device_restaurant(\ERS\TDeviceRestaurantQuery $query_struct);
  public function send_contract_notification($restaurant_ids);
  public function new_device_restaurant($restaurant_id, $device_id, $device_type, $eleme_guid, $version);
  public function remove_device_restaurant($id);
  public function walle_get_saas_stats_count(\ERS\TWalleFilter $filter_struct, $group_by);
  public function walle_query_restaurant(\ERS\TRestaurantQuery $query_struct);
  public function walle_get_saas_stats(\ERS\TWalleFilter $filter_struct, $group_by, $sort_key, $sort_type, $offset, $limit);
  public function walle_get_activity_list(\ERS\TActivityQuery $query_struct);
  public function walle_get_activity_list_by_ids($activity_ids);
  public function walle_get_logo_list(\ERS\TLogoQuery $query_struct);
  public function walle_get_restaurant_list(\ERS\TRestaurantQuery $query_struct);
  public function walle_get_restaurant_change_records($restaurant_id, $limit);
  public function walle_get_op_apply_restaurants($restaurant_ids, $regions_ids, $keyword);
  public function walle_get_restaurant_list_by_ids($restaurant_ids);
  public function walle_save_friend_link($friend_link_id, \ERS\TFriendLink $t_struct);
  public function walle_remove_friend_link($friend_link_id);
  public function walle_count_friend_link(\ERS\TFriendLinkQuery $query_struct);
  public function walle_query_friend_link(\ERS\TFriendLinkQuery $query_struct);
  public function walle_save_quick_message($quick_message_id, \ERS\TQuickMessage $t_struct);
  public function walle_remove_quick_message($quick_message_id);
  public function walle_count_quick_message(\ERS\TQuickMessageQuery $query_struct);
  public function walle_query_quick_message(\ERS\TQuickMessageQuery $query_struct);
  public function walle_count_comment_reply(\ERS\TWalleCommentReplyQuery $query_struct);
  public function walle_query_comment_reply(\ERS\TWalleCommentReplyQuery $query_struct);
  public function walle_set_comment_reply_valid($reply_id, $is_valid);
  public function walle_count_restaurant_comment(\ERS\TWalleRestaurantCommentQuery $query_struct);
  public function walle_query_restaurant_comment(\ERS\TWalleRestaurantCommentQuery $query_struct);
  public function walle_set_restaurant_comment_valid($comment_id, $is_valid);
  public function walle_reply_restaurant_comment($comment_id, $user_id, $content);
  public function mset_restaurant_open_apply_status($ids, $status);
  public function napos_restaurant_promotion_save($promotion_id, \ERS\TRestaurantPromotion $t_promotion);
  public function napos_count_comments(\ERS\TNaposCommentQuery $query_struct);
  public function napos_query_comments(\ERS\TNaposCommentQuery $query_struct);
  public function napos_get_message($message_id);
  public function napos_mget_message($restaurant_id, $offset, $limit);
  public function napos_count_unread_message($restaurant_id);
  public function napos_mget_unread_message($restaurant_id);
  public function napos_read_message($message_id);
  public function mset_operation_remind_status($or_ids, $status);
  public function openapi_get_new_restaurant_ids($city_id, $start_time, $end_time);
  public function revert_decr_foods_stock($order_id, $food_stock_map);
  public function process_saas_status_touch($order_id);
  public function process_post_bankcard_bind_approve($restaurant_id, $timestamp);
  public function mset_tuesday_half_price_food_stock($is_max);
  public function reset_half_price_food_stock_by_category($unique_week, $category_id);
  public function process_remove_market_staff($user_id);
  public function refresh_flavors_by_restaurant($restaurant_id);
  public function set_delete_region_task_status($dl_region_id, $status);
  public function set_update_region_task_status($cl_region_id, $status);
  public function send_update_restaurant_evaluation_task();
  public function daily_clear_restaurant_menu_cache();
  public function semi_send_update_restaurant_evaluation_task($offset, $limit);
  public function update_restaurant_evaluation($restaurant_id);
  public function notify_napos_mobile_to_sync($restaurant_id, $is_new_order);
  public function notify_napos_mobile_to_sync2($restaurant_id, $is_new_order, $timestamp);
  public function update_food_ugc_image_cover($food_id);
  public function refresh_food_has_activity($food_ids);
  public function refresh_restaurant_food_activity($restaurant_id);
  public function get($restaurant_id);
  public function mget($restaurant_ids);
  public function master_get($id);
  public function get_by_wireless_printer_esn($esn);
  public function get_by_name_for_url($name_for_url);
  public function get_by_mobile($mobile);
  public function get_by_admin($user_id);
  public function get_app_campaign_by_sn($sn);
  public function get_bankcard($restaurant_id);
  public function get_bankcard_new($restaurant_id);
  public function mget_bankcard($restaurant_ids);
  public function mget_restaurant_bankcard($restaurant_ids);
  public function update_bankcard(\ERS\TRestaurantBankcard $update_struct);
  public function remove_bankcard($restaurant_id);
  public function query_by_dock_corp($dock_corp_id);
  public function get_open_apply_by_admin($user_id);
  public function get_open_apply($id);
  public function query_restaurant_open_apply(\ERS\TRestaurantOpenApplyQuery $t_open_apply);
  public function count_restaurant_open_apply(\ERS\TRestaurantOpenApplyQuery $t_open_apply);
  public function get_entry($entry_id);
  public function mget_entry($ids);
  public function get_entry_by_sn($sn);
  public function query_entry(\ERS\TEntryQuery $query_struct);
  public function get_district($district_id);
  public function query_district(\ERS\TDistrictQuery $query_struct);
  public function get_zone($zone_id);
  public function query_zone(\ERS\TZoneQuery $query_struct);
  public function get_direct_struct($user_id);
  public function get_region($region_id);
  public function master_get_region($region_id);
  public function mget_region($region_ids);
  public function get_region_by_entry($entry_id);
  public function get_region_by_restaurant($restaurant_id);
  public function get_region_group($region_group_id);
  public function mget_region_group($region_group_ids);
  public function get_region_group_by_region($region_id);
  public function count_region_group(\ERS\TRegionGroupQuery $query_struct);
  public function query_region_group(\ERS\TRegionGroupQuery $query_struct);
  public function save_region_group($region_group_id, \ERS\TRegionGroup $region_group);
  public function remove_region_group($region_group_id);
  public function update_region_group_region($region_group_id, $region_id);
  public function get_regions_by_region_group_ids($region_group_ids);
  public function get_activity($activity_id);
  public function mget_activity($activity_ids);
  public function get_city($city_id);
  public function get_city_by_name($city_name);
  public function mget_city($city_ids);
  public function get_city_by_region($region_id);
  public function get_city_by_region_group($region_group_id);
  public function get_city_by_code($district_code);
  public function get_city_by_area_code($area_code);
  public function query_country_region(\ERS\TCountryRegionQuery $query_struct);
  public function query_city(\ERS\TCityQuery $query_struct);
  public function get_food($food_id);
  public function mget_food($food_ids);
  public function master_get_food($food_id);
  public function get_food_by_sn($sn);
  public function get_food_category($food_category_id);
  public function mget_food_category($food_category_ids);
  public function master_get_food_category($food_category_id);
  public function get_food_ugc_image($food_ugc_image_id);
  public function get_food_ugc_image_pr($food_ugc_image_id);
  public function mget_food_ugc_image($food_ugc_image_ids);
  public function get_food_ugc_image_by_sn($sn);
  public function get_food_ugc_image_by_order_item_id($order_item_id);
  public function query_food_ugc_image_by_user_id($user_id, $date, $max_day);
  public function count_food_ugc_image(\ERS\TFoodUgcImageQuery $query_struct);
  public function query_food_ugc_image(\ERS\TFoodUgcImageQuery $query_struct);
  public function count_food_ugc_image_cover(\ERS\TFoodUgcImageCoverQuery $query_struct);
  public function query_food_ugc_image_cover(\ERS\TFoodUgcImageCoverQuery $query_struct);
  public function like_food_ugc_image($user_id, $food_ugc_image_id);
  public function dislike_food_ugc_image($user_id, $food_ugc_image_id);
  public function filter_liked_food_ugc_image_ids($user_id, $food_ugc_image_ids);
  public function get_liked_food_ugc_image_cover_ids_by_user($restaurant_id, $user_id);
  public function report_food_ugc_image($user_id, $food_ugc_image_id);
  public function mget_garnish($garnish_ids);
  public function mget_garnish_by_food($food_id);
  public function mget_food_flavor_by_food_ids($food_ids);
  public function get_garnish_category($garnish_category_id);
  public function mget_garnish_category($garnish_category_ids);
  public function mget_garnish_category_by_food($food_id);
  public function query_activity(\ERS\TActivityQuery $query_struct);
  public function get_activity_by_sn($sn);
  public function get_activity_ids_by_geohash($geohash);
  public function get_dock_corp($id);
  public function get_dock_corp_by_restaurant($restaurant_id);
  public function get_dock_corp_by_app($app_id);
  public function mget_dock_corp($ids);
  public function count_dock_corp(\ERS\TDockCorpQuery $query_struct);
  public function query_dock_corp(\ERS\TDockCorpQuery $query_struct);
  public function get_dock_corp_restaurant($id);
  public function mget_dock_corp_restaurant($ids);
  public function query_dock_corp_restaurant($corp_ids, $restaurant_ids);
  public function get_logo($logo_id);
  public function mget_logo($logo_ids);
  public function get_current_logo();
  public function get_location_by_restaurant($restaurant_id);
  public function get_location_by_region($region_id);
  public function get_free_gift_activity($free_gift_activity_id);
  public function mget_free_gift_activity($free_gift_activity_ids);
  public function mget_free_gift_activity_list();
  public function mget_free_gift_activity_by_attributes($attrs);
  public function query_by_entry($entry_id);
  public function query_premium_by_entry($entry_id);
  public function query_premium_by_geohash2($geohash, $offset, $limit);
  public function count_premium_by_geohash($geohash);
  public function query_bookable_by_entry($entry_id, $deliver_time);
  public function query_favor_by_geohash($user_id, $geohash);
  public function query_favor_by_entry($user_id, $entry_id);
  public function query_favor_ids($user_id);
  public function query_favor($user_id);
  public function query_by_geohash($geohash, $offset, $limit);
  public function query_by_psn($psn, $offset, $limit);
  public function query_premium_by_geohash($geohash, $offset, $limit);
  public function query_premium_by_psn($psn, $offset, $limit);
  public function query_by_geohash2($geohash, $offset, $limit);
  public function query_bookable_by_geohash2($geohash, $deliver_time);
  public function query_favor_food_ids_by_restaurant($user_id, $restaurant_id);
  public function query_favor_food_ids_by_user($user_id);
  public function query_favor_food_by_user($user_id, $offset, $limit);
  public function query_food(\ERS\TFoodQuery $query_struct);
  public function query_food_by_restaurant($restaurant_id);
  public function query_food_category(\ERS\TFoodCategoryQuery $query_struct);
  public function query_food_garnish_category(\ERS\TFoodGarnishCategoryQuery $query_struct);
  public function query_food_category_by_restaurant($restaurant_id);
  public function query_garnish(\ERS\TGarnishQuery $query_struct);
  public function query_garnish_category(\ERS\TGarnishCategoryQuery $query_struct);
  public function get_comment($comment_id);
  public function query_entry_by_restaurant($restaurant_id);
  public function query_hot_food_by_entry($entry_id);
  public function query_hot_food_by_geohash($geohash);
  public function query_hot_food_by_restaurant($restaurant_id, $limit);
  public function query_comment_with_replies(\ERS\TRestaurantCommentQuery $query_struct);
  public function query_all_comment(\ERS\TRestaurantCommentQuery $query_struct);
  public function get_director_id($restaurant_id);
  public function get_director_ids_by_area($region_ids, $region_group_ids, $city_ids);
  public function query_restaurant_by_dock_corp($dock_corp_id);
  public function query_restaurant_flavor_by_restaurant_id($restaurant_id);
  public function query_free_gift_activity(\ERS\TFreeGiftActivityQuery $query_struct);
  public function query_food_activity(\ERS\TFoodActivityQuery $query_struct);
  public function count_food_activity(\ERS\TFoodActivityQuery $query_struct);
  public function get_food_activity($food_activity_id);
  public function mget_food_activity($food_activity_ids);
  public function get_food_activity_id_map($food_ids);
  public function get_weekday_food_activity_id_map($food_ids, $restaurant_id);
  public function get_weekday_food_activity_id_map_no_cache($food_ids, $restaurant_id);
  public function get_food_activity_with_restaurant_ids($restaurant_ids, $weekdays);
  public function add_restaurant_certification(\ERS\TRestaurantCertification $rest_cert);
  public function update_restaurant_certification(\ERS\TRestaurantCertification $rest_cert);
  public function process_certification($process_user_id, $restaurant_id, $to_status);
  public function get_restaurant_certification($restaurant_id);
  public function mget_restaurant_valid_certification($restaurant_ids);
  public function filter_uncertificated_restaurants($restaurant_ids);
  public function query_restaurant_certification_by_status($status, $offset, $limit);
  public function add_restaurant_activity(\ERS\TRestaurantActivity $activity);
  public function update_restaurant_activity($activity_id, \ERS\TRestaurantActivity $activity);
  public function get_participatable_restaurant_activity_ids($restaurant_id, $activity_type);
  public function participate_restaurant_activity($restaurant_id, $activity_id);
  public function quit_restaurant_activity($restaurant_id, $activity_id);
  public function get_restaurant_activity($activity_id);
  public function mget_restaurant_activity($activity_ids);
  public function query_restaurant_activity_by_restaurant($restaurant_id);
  public function javis_query_restaurant_activity_by_restaurant($restaurant_id);
  public function query_restaurant_activity_for_admin(\ERS\TRestaurantActivityQuery $query_struct);
  public function get_restaurant_activity_map_group_by_type($restaurant_ids);
  public function get_restaurant_activity_with_restaurant_ids($restaurant_ids);
  public function save_amended_poi($id, \ERS\TAmendedPoi $poi);
  public function query_amended_poi($city_id, $keyword);
  public function get_free_gift_activity_attribute_name_by_category($category_id);
  public function query_food_category_with_foods($restaurant_id);
  public function query_recent_removed_foods($restaurant_id);
  public function query_gum_food_by_restaurant($restaurant_id);
  public function get_restaurant_promotion($promotion_id);
  public function query_restaurant_promotion($restaurant_id);
  public function master_get_changelog_restaurant($cl_rst_id);
  public function master_get_changelog_region($cl_region_id);
  public function master_get_deletelog_region($dl_region_id);
  public function query_seo_sm_place(\ERS\TSeoSmQuery $query_struct);
  public function query_seo_sm_restaurant(\ERS\TSeoSmQuery $query_struct);
  public function query_seo_sm_city_index(\ERS\TSeoSmCityIndexQuery $query_struct);
  public function get_seo_sm_index_by_name($name);
  public function get_saas_status($restaurant_id);
  public function count_operation_remind(\ERS\TOperationRemindQuery $query_struct);
  public function query_operation_remind(\ERS\TOperationRemindQuery $query_struct);
  public function get_quick_message($quick_message_id);
  public function get_friend_link($friend_link_id);
  public function query_friend_link();
  public function count_favored_user($restaurant_id);
  public function mget_favored_user($restaurant_id);
  public function query_area_by_square($lt_latitude, $lt_longitude, $rb_latitude, $rb_longitude);
  public function get_evaluation($restaurant_id);
  public function get_all_performance_assessment_block();
  public function add_performance_assessment_block(\ERS\TPerformanceAssessmentBlock $pab);
  public function delete_performance_assessment_block($pa_block_id);
  public function query_close_restaurant_whitelist();
  public function save_close_restaurant_whitelist(\ERS\TWhitelist $whitelist_struct);
  public function get_restaurant_setup_step($restaurant_id);
  public function set_restaurant_setup_step($restaurant_id, $step);
  public function get_short_url($origin_url);
  public function is_restaurant_mobile_location_match($restaurant_id, $mobile);
  public function get_origin_url($short_url_hash);
  public function get_napos_env($restaurant_id);
  public function set_napos_env($restaurant_id, $key, $value);
  public function signal_post_make_order($order_id);
  public function signal_post_process_order($order_process_record_id);
  public function signal_update_restaurant($restaurant_ids);
  public function signal_update_food($food_ids);
  public function signal_update_food_category($food_category_ids);
  public function signal_menu_clear_cache($restaurant_ids);
  public function signal_update_menu_cache($restaurant_id);
  public function signal_update_food_activity($food_activity_ids);
  public function signal_post_process_food_ugc_image($process_food_ugc_image_pr_id);
  public function any_support_for_ol_payment($restaurant_ids);
}

class ElemeRestaurantServiceClient implements \ERS\ElemeRestaurantServiceIf {
  protected $input_ = null;
  protected $output_ = null;

  protected $seqid_ = 0;

  public function __construct($input, $output=null) {
    $this->input_ = $input;
    $this->output_ = $output ? $output : $input;
  }

  public function ping()
  {
    $this->send_ping();
    return $this->recv_ping();
  }

  public function send_ping()
  {
    $args = new \ERS\ElemeRestaurantService_ping_args();
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'ping', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('ping', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_ping()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_ping_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_ping_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("ping failed: unknown result");
  }

  public function search_restaurant(\ERS\TRestaurantSearchQuery $query_struct)
  {
    $this->send_search_restaurant($query_struct);
    return $this->recv_search_restaurant();
  }

  public function send_search_restaurant(\ERS\TRestaurantSearchQuery $query_struct)
  {
    $args = new \ERS\ElemeRestaurantService_search_restaurant_args();
    $args->query_struct = $query_struct;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'search_restaurant', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('search_restaurant', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_search_restaurant()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_search_restaurant_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_search_restaurant_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("search_restaurant failed: unknown result");
  }

  public function search_area_restaurant(\ERS\TRestaurantAreaSearchQuery $query_struct)
  {
    $this->send_search_area_restaurant($query_struct);
    return $this->recv_search_area_restaurant();
  }

  public function send_search_area_restaurant(\ERS\TRestaurantAreaSearchQuery $query_struct)
  {
    $args = new \ERS\ElemeRestaurantService_search_area_restaurant_args();
    $args->query_struct = $query_struct;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'search_area_restaurant', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('search_area_restaurant', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_search_area_restaurant()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_search_area_restaurant_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_search_area_restaurant_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("search_area_restaurant failed: unknown result");
  }

  public function search_certification_restaurant(\ERS\TRestaurantCertificationSearchQuery $query_struct)
  {
    $this->send_search_certification_restaurant($query_struct);
    return $this->recv_search_certification_restaurant();
  }

  public function send_search_certification_restaurant(\ERS\TRestaurantCertificationSearchQuery $query_struct)
  {
    $args = new \ERS\ElemeRestaurantService_search_certification_restaurant_args();
    $args->query_struct = $query_struct;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'search_certification_restaurant', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('search_certification_restaurant', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_search_certification_restaurant()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_search_certification_restaurant_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_search_certification_restaurant_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("search_certification_restaurant failed: unknown result");
  }

  public function search_area_food(\ERS\TRestaurantAreaSearchQuery $query_struct)
  {
    $this->send_search_area_food($query_struct);
    return $this->recv_search_area_food();
  }

  public function send_search_area_food(\ERS\TRestaurantAreaSearchQuery $query_struct)
  {
    $args = new \ERS\ElemeRestaurantService_search_area_food_args();
    $args->query_struct = $query_struct;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'search_area_food', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('search_area_food', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_search_area_food()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_search_area_food_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_search_area_food_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("search_area_food failed: unknown result");
  }

  public function search_food(\ERS\TFoodSearchQuery $query_struct)
  {
    $this->send_search_food($query_struct);
    return $this->recv_search_food();
  }

  public function send_search_food(\ERS\TFoodSearchQuery $query_struct)
  {
    $args = new \ERS\ElemeRestaurantService_search_food_args();
    $args->query_struct = $query_struct;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'search_food', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('search_food', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_search_food()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_search_food_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_search_food_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("search_food failed: unknown result");
  }

  public function update_cache_for_replicator($name, $ids, $type_)
  {
    $this->send_update_cache_for_replicator($name, $ids, $type_);
    $this->recv_update_cache_for_replicator();
  }

  public function send_update_cache_for_replicator($name, $ids, $type_)
  {
    $args = new \ERS\ElemeRestaurantService_update_cache_for_replicator_args();
    $args->name = $name;
    $args->ids = $ids;
    $args->type_ = $type_;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'update_cache_for_replicator', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('update_cache_for_replicator', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_update_cache_for_replicator()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_update_cache_for_replicator_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_update_cache_for_replicator_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unkown_exception !== null) {
      throw $result->unkown_exception;
    }
    return;
  }

  public function update_cache($tablename, $ids)
  {
    $this->send_update_cache($tablename, $ids);
    $this->recv_update_cache();
  }

  public function send_update_cache($tablename, $ids)
  {
    $args = new \ERS\ElemeRestaurantService_update_cache_args();
    $args->tablename = $tablename;
    $args->ids = $ids;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'update_cache', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('update_cache', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_update_cache()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_update_cache_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_update_cache_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unkown_exception !== null) {
      throw $result->unkown_exception;
    }
    return;
  }

  public function clear_cache($api_name, $params)
  {
    $this->send_clear_cache($api_name, $params);
    $this->recv_clear_cache();
  }

  public function send_clear_cache($api_name, $params)
  {
    $args = new \ERS\ElemeRestaurantService_clear_cache_args();
    $args->api_name = $api_name;
    $args->params = $params;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'clear_cache', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('clear_cache', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_clear_cache()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_clear_cache_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_clear_cache_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unkown_exception !== null) {
      throw $result->unkown_exception;
    }
    return;
  }

  public function check_favored($user_id, $restaurant_id)
  {
    $this->send_check_favored($user_id, $restaurant_id);
    return $this->recv_check_favored();
  }

  public function send_check_favored($user_id, $restaurant_id)
  {
    $args = new \ERS\ElemeRestaurantService_check_favored_args();
    $args->user_id = $user_id;
    $args->restaurant_id = $restaurant_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'check_favored', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('check_favored', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_check_favored()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_check_favored_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_check_favored_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("check_favored failed: unknown result");
  }

  public function add_favored($user_id, $restaurant_id)
  {
    $this->send_add_favored($user_id, $restaurant_id);
    $this->recv_add_favored();
  }

  public function send_add_favored($user_id, $restaurant_id)
  {
    $args = new \ERS\ElemeRestaurantService_add_favored_args();
    $args->user_id = $user_id;
    $args->restaurant_id = $restaurant_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'add_favored', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('add_favored', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_add_favored()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_add_favored_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_add_favored_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    return;
  }

  public function remove_favored($user_id, $restaurant_id)
  {
    $this->send_remove_favored($user_id, $restaurant_id);
    $this->recv_remove_favored();
  }

  public function send_remove_favored($user_id, $restaurant_id)
  {
    $args = new \ERS\ElemeRestaurantService_remove_favored_args();
    $args->user_id = $user_id;
    $args->restaurant_id = $restaurant_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'remove_favored', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('remove_favored', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_remove_favored()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_remove_favored_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_remove_favored_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    return;
  }

  public function count_favored($user_id)
  {
    $this->send_count_favored($user_id);
    return $this->recv_count_favored();
  }

  public function send_count_favored($user_id)
  {
    $args = new \ERS\ElemeRestaurantService_count_favored_args();
    $args->user_id = $user_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'count_favored', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('count_favored', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_count_favored()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_count_favored_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_count_favored_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("count_favored failed: unknown result");
  }

  public function mcount_restaurant_by_entry_id($entry_ids)
  {
    $this->send_mcount_restaurant_by_entry_id($entry_ids);
    return $this->recv_mcount_restaurant_by_entry_id();
  }

  public function send_mcount_restaurant_by_entry_id($entry_ids)
  {
    $args = new \ERS\ElemeRestaurantService_mcount_restaurant_by_entry_id_args();
    $args->entry_ids = $entry_ids;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'mcount_restaurant_by_entry_id', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('mcount_restaurant_by_entry_id', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_mcount_restaurant_by_entry_id()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_mcount_restaurant_by_entry_id_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_mcount_restaurant_by_entry_id_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("mcount_restaurant_by_entry_id failed: unknown result");
  }

  public function check_favor_food($user_id, $food_id)
  {
    $this->send_check_favor_food($user_id, $food_id);
    return $this->recv_check_favor_food();
  }

  public function send_check_favor_food($user_id, $food_id)
  {
    $args = new \ERS\ElemeRestaurantService_check_favor_food_args();
    $args->user_id = $user_id;
    $args->food_id = $food_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'check_favor_food', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('check_favor_food', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_check_favor_food()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_check_favor_food_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_check_favor_food_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("check_favor_food failed: unknown result");
  }

  public function add_favor_food($user_id, $food_id)
  {
    $this->send_add_favor_food($user_id, $food_id);
    $this->recv_add_favor_food();
  }

  public function send_add_favor_food($user_id, $food_id)
  {
    $args = new \ERS\ElemeRestaurantService_add_favor_food_args();
    $args->user_id = $user_id;
    $args->food_id = $food_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'add_favor_food', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('add_favor_food', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_add_favor_food()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_add_favor_food_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_add_favor_food_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    return;
  }

  public function remove_favor_food($user_id, $food_id)
  {
    $this->send_remove_favor_food($user_id, $food_id);
    $this->recv_remove_favor_food();
  }

  public function send_remove_favor_food($user_id, $food_id)
  {
    $args = new \ERS\ElemeRestaurantService_remove_favor_food_args();
    $args->user_id = $user_id;
    $args->food_id = $food_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'remove_favor_food', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('remove_favor_food', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_remove_favor_food()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_remove_favor_food_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_remove_favor_food_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    return;
  }

  public function add_comment($user_id, $username, $restaurant_id, $content)
  {
    $this->send_add_comment($user_id, $username, $restaurant_id, $content);
    $this->recv_add_comment();
  }

  public function send_add_comment($user_id, $username, $restaurant_id, $content)
  {
    $args = new \ERS\ElemeRestaurantService_add_comment_args();
    $args->user_id = $user_id;
    $args->username = $username;
    $args->restaurant_id = $restaurant_id;
    $args->content = $content;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'add_comment', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('add_comment', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_add_comment()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_add_comment_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_add_comment_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    return;
  }

  public function count_comment(\ERS\TRestaurantCommentQuery $query_struct)
  {
    $this->send_count_comment($query_struct);
    return $this->recv_count_comment();
  }

  public function send_count_comment(\ERS\TRestaurantCommentQuery $query_struct)
  {
    $args = new \ERS\ElemeRestaurantService_count_comment_args();
    $args->query_struct = $query_struct;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'count_comment', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('count_comment', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_count_comment()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_count_comment_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_count_comment_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("count_comment failed: unknown result");
  }

  public function add_comment_reply($comment_id, $user_id, $content, $type)
  {
    $this->send_add_comment_reply($comment_id, $user_id, $content, $type);
    $this->recv_add_comment_reply();
  }

  public function send_add_comment_reply($comment_id, $user_id, $content, $type)
  {
    $args = new \ERS\ElemeRestaurantService_add_comment_reply_args();
    $args->comment_id = $comment_id;
    $args->user_id = $user_id;
    $args->content = $content;
    $args->type = $type;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'add_comment_reply', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('add_comment_reply', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_add_comment_reply()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_add_comment_reply_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_add_comment_reply_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    return;
  }

  public function get_deliver_amount_by_entry($restaurant_id, $entry_id)
  {
    $this->send_get_deliver_amount_by_entry($restaurant_id, $entry_id);
    return $this->recv_get_deliver_amount_by_entry();
  }

  public function send_get_deliver_amount_by_entry($restaurant_id, $entry_id)
  {
    $args = new \ERS\ElemeRestaurantService_get_deliver_amount_by_entry_args();
    $args->restaurant_id = $restaurant_id;
    $args->entry_id = $entry_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'get_deliver_amount_by_entry', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('get_deliver_amount_by_entry', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_get_deliver_amount_by_entry()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_get_deliver_amount_by_entry_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_get_deliver_amount_by_entry_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("get_deliver_amount_by_entry failed: unknown result");
  }

  public function get_foods_stock($food_ids)
  {
    $this->send_get_foods_stock($food_ids);
    return $this->recv_get_foods_stock();
  }

  public function send_get_foods_stock($food_ids)
  {
    $args = new \ERS\ElemeRestaurantService_get_foods_stock_args();
    $args->food_ids = $food_ids;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'get_foods_stock', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('get_foods_stock', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_get_foods_stock()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_get_foods_stock_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_get_foods_stock_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("get_foods_stock failed: unknown result");
  }

  public function incr_foods_stock($food_stock_map)
  {
    $this->send_incr_foods_stock($food_stock_map);
    $this->recv_incr_foods_stock();
  }

  public function send_incr_foods_stock($food_stock_map)
  {
    $args = new \ERS\ElemeRestaurantService_incr_foods_stock_args();
    $args->food_stock_map = $food_stock_map;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'incr_foods_stock', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('incr_foods_stock', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_incr_foods_stock()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_incr_foods_stock_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_incr_foods_stock_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    return;
  }

  public function decr_foods_stock($food_stock_map)
  {
    $this->send_decr_foods_stock($food_stock_map);
    $this->recv_decr_foods_stock();
  }

  public function send_decr_foods_stock($food_stock_map)
  {
    $args = new \ERS\ElemeRestaurantService_decr_foods_stock_args();
    $args->food_stock_map = $food_stock_map;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'decr_foods_stock', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('decr_foods_stock', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_decr_foods_stock()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_decr_foods_stock_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_decr_foods_stock_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    return;
  }

  public function set_food_stock($food_id, $stock)
  {
    $this->send_set_food_stock($food_id, $stock);
    $this->recv_set_food_stock();
  }

  public function send_set_food_stock($food_id, $stock)
  {
    $args = new \ERS\ElemeRestaurantService_set_food_stock_args();
    $args->food_id = $food_id;
    $args->stock = $stock;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'set_food_stock', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('set_food_stock', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_set_food_stock()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_set_food_stock_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_set_food_stock_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    return;
  }

  public function set_restaurant_food_eleme_buy_discount($restaurant_id, $discount)
  {
    $this->send_set_restaurant_food_eleme_buy_discount($restaurant_id, $discount);
    $this->recv_set_restaurant_food_eleme_buy_discount();
  }

  public function send_set_restaurant_food_eleme_buy_discount($restaurant_id, $discount)
  {
    $args = new \ERS\ElemeRestaurantService_set_restaurant_food_eleme_buy_discount_args();
    $args->restaurant_id = $restaurant_id;
    $args->discount = $discount;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'set_restaurant_food_eleme_buy_discount', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('set_restaurant_food_eleme_buy_discount', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_set_restaurant_food_eleme_buy_discount()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_set_restaurant_food_eleme_buy_discount_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_set_restaurant_food_eleme_buy_discount_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    return;
  }

  public function refresh_food_stock($food_id)
  {
    $this->send_refresh_food_stock($food_id);
    $this->recv_refresh_food_stock();
  }

  public function send_refresh_food_stock($food_id)
  {
    $args = new \ERS\ElemeRestaurantService_refresh_food_stock_args();
    $args->food_id = $food_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'refresh_food_stock', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('refresh_food_stock', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_refresh_food_stock()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_refresh_food_stock_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_refresh_food_stock_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    return;
  }

  public function get_region_id($entry_id, $geohash, $restaurant_id)
  {
    $this->send_get_region_id($entry_id, $geohash, $restaurant_id);
    return $this->recv_get_region_id();
  }

  public function send_get_region_id($entry_id, $geohash, $restaurant_id)
  {
    $args = new \ERS\ElemeRestaurantService_get_region_id_args();
    $args->entry_id = $entry_id;
    $args->geohash = $geohash;
    $args->restaurant_id = $restaurant_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'get_region_id', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('get_region_id', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_get_region_id()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_get_region_id_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_get_region_id_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("get_region_id failed: unknown result");
  }

  public function get_region_region_group_map($region_ids)
  {
    $this->send_get_region_region_group_map($region_ids);
    return $this->recv_get_region_region_group_map();
  }

  public function send_get_region_region_group_map($region_ids)
  {
    $args = new \ERS\ElemeRestaurantService_get_region_region_group_map_args();
    $args->region_ids = $region_ids;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'get_region_region_group_map', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('get_region_region_group_map', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_get_region_region_group_map()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_get_region_region_group_map_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_get_region_region_group_map_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("get_region_region_group_map failed: unknown result");
  }

  public function get_restaurant_region_map($restaurant_ids)
  {
    $this->send_get_restaurant_region_map($restaurant_ids);
    return $this->recv_get_restaurant_region_map();
  }

  public function send_get_restaurant_region_map($restaurant_ids)
  {
    $args = new \ERS\ElemeRestaurantService_get_restaurant_region_map_args();
    $args->restaurant_ids = $restaurant_ids;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'get_restaurant_region_map', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('get_restaurant_region_map', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_get_restaurant_region_map()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_get_restaurant_region_map_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_get_restaurant_region_map_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("get_restaurant_region_map failed: unknown result");
  }

  public function add_restaurant_message($restaurant_id, $message_type, $info)
  {
    $this->send_add_restaurant_message($restaurant_id, $message_type, $info);
    $this->recv_add_restaurant_message();
  }

  public function send_add_restaurant_message($restaurant_id, $message_type, $info)
  {
    $args = new \ERS\ElemeRestaurantService_add_restaurant_message_args();
    $args->restaurant_id = $restaurant_id;
    $args->message_type = $message_type;
    $args->info = $info;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'add_restaurant_message', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('add_restaurant_message', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_add_restaurant_message()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_add_restaurant_message_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_add_restaurant_message_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    return;
  }

  public function mset_activity_valid($activity_ids, $is_valid)
  {
    $this->send_mset_activity_valid($activity_ids, $is_valid);
    $this->recv_mset_activity_valid();
  }

  public function send_mset_activity_valid($activity_ids, $is_valid)
  {
    $args = new \ERS\ElemeRestaurantService_mset_activity_valid_args();
    $args->activity_ids = $activity_ids;
    $args->is_valid = $is_valid;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'mset_activity_valid', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('mset_activity_valid', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_mset_activity_valid()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_mset_activity_valid_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_mset_activity_valid_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    return;
  }

  public function mset_activity_default($activity_ids, $is_default)
  {
    $this->send_mset_activity_default($activity_ids, $is_default);
    $this->recv_mset_activity_default();
  }

  public function send_mset_activity_default($activity_ids, $is_default)
  {
    $args = new \ERS\ElemeRestaurantService_mset_activity_default_args();
    $args->activity_ids = $activity_ids;
    $args->is_default = $is_default;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'mset_activity_default', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('mset_activity_default', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_mset_activity_default()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_mset_activity_default_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_mset_activity_default_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    return;
  }

  public function set_direct_struct($user_id, \ERS\TDirectStruct $update_struct)
  {
    $this->send_set_direct_struct($user_id, $update_struct);
    $this->recv_set_direct_struct();
  }

  public function send_set_direct_struct($user_id, \ERS\TDirectStruct $update_struct)
  {
    $args = new \ERS\ElemeRestaurantService_set_direct_struct_args();
    $args->user_id = $user_id;
    $args->update_struct = $update_struct;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'set_direct_struct', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('set_direct_struct', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_set_direct_struct()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_set_direct_struct_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_set_direct_struct_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    return;
  }

  public function remove_activity($activity_id)
  {
    $this->send_remove_activity($activity_id);
    $this->recv_remove_activity();
  }

  public function send_remove_activity($activity_id)
  {
    $args = new \ERS\ElemeRestaurantService_remove_activity_args();
    $args->activity_id = $activity_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'remove_activity', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('remove_activity', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_remove_activity()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_remove_activity_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_remove_activity_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    return;
  }

  public function update_activity(\ERS\TActivity $update_struct)
  {
    $this->send_update_activity($update_struct);
    return $this->recv_update_activity();
  }

  public function send_update_activity(\ERS\TActivity $update_struct)
  {
    $args = new \ERS\ElemeRestaurantService_update_activity_args();
    $args->update_struct = $update_struct;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'update_activity', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('update_activity', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_update_activity()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_update_activity_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_update_activity_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("update_activity failed: unknown result");
  }

  public function save_activity($activity_id, \ERS\TActivity $save_struct)
  {
    $this->send_save_activity($activity_id, $save_struct);
    return $this->recv_save_activity();
  }

  public function send_save_activity($activity_id, \ERS\TActivity $save_struct)
  {
    $args = new \ERS\ElemeRestaurantService_save_activity_args();
    $args->activity_id = $activity_id;
    $args->save_struct = $save_struct;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'save_activity', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('save_activity', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_save_activity()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_save_activity_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_save_activity_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("save_activity failed: unknown result");
  }

  public function save_dock_corp($dock_corp_id, \ERS\TDockCorp $save_struct)
  {
    $this->send_save_dock_corp($dock_corp_id, $save_struct);
    return $this->recv_save_dock_corp();
  }

  public function send_save_dock_corp($dock_corp_id, \ERS\TDockCorp $save_struct)
  {
    $args = new \ERS\ElemeRestaurantService_save_dock_corp_args();
    $args->dock_corp_id = $dock_corp_id;
    $args->save_struct = $save_struct;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'save_dock_corp', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('save_dock_corp', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_save_dock_corp()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_save_dock_corp_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_save_dock_corp_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("save_dock_corp failed: unknown result");
  }

  public function set_restaurant_dock_corp($restaurant_id, $corp_id)
  {
    $this->send_set_restaurant_dock_corp($restaurant_id, $corp_id);
    return $this->recv_set_restaurant_dock_corp();
  }

  public function send_set_restaurant_dock_corp($restaurant_id, $corp_id)
  {
    $args = new \ERS\ElemeRestaurantService_set_restaurant_dock_corp_args();
    $args->restaurant_id = $restaurant_id;
    $args->corp_id = $corp_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'set_restaurant_dock_corp', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('set_restaurant_dock_corp', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_set_restaurant_dock_corp()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_set_restaurant_dock_corp_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_set_restaurant_dock_corp_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("set_restaurant_dock_corp failed: unknown result");
  }

  public function delete_dock_corp_restaurant_by_restaurant_id($restaurant_id)
  {
    $this->send_delete_dock_corp_restaurant_by_restaurant_id($restaurant_id);
    $this->recv_delete_dock_corp_restaurant_by_restaurant_id();
  }

  public function send_delete_dock_corp_restaurant_by_restaurant_id($restaurant_id)
  {
    $args = new \ERS\ElemeRestaurantService_delete_dock_corp_restaurant_by_restaurant_id_args();
    $args->restaurant_id = $restaurant_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'delete_dock_corp_restaurant_by_restaurant_id', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('delete_dock_corp_restaurant_by_restaurant_id', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_delete_dock_corp_restaurant_by_restaurant_id()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_delete_dock_corp_restaurant_by_restaurant_id_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_delete_dock_corp_restaurant_by_restaurant_id_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    return;
  }

  public function mset_food_stock(\ERS\TFoodStock $mset_struct)
  {
    $this->send_mset_food_stock($mset_struct);
    $this->recv_mset_food_stock();
  }

  public function send_mset_food_stock(\ERS\TFoodStock $mset_struct)
  {
    $args = new \ERS\ElemeRestaurantService_mset_food_stock_args();
    $args->mset_struct = $mset_struct;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'mset_food_stock', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('mset_food_stock', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_mset_food_stock()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_mset_food_stock_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_mset_food_stock_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    return;
  }

  public function mset_food_stock_by_category($category_id, $is_max)
  {
    $this->send_mset_food_stock_by_category($category_id, $is_max);
    $this->recv_mset_food_stock_by_category();
  }

  public function send_mset_food_stock_by_category($category_id, $is_max)
  {
    $args = new \ERS\ElemeRestaurantService_mset_food_stock_by_category_args();
    $args->category_id = $category_id;
    $args->is_max = $is_max;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'mset_food_stock_by_category', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('mset_food_stock_by_category', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_mset_food_stock_by_category()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_mset_food_stock_by_category_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_mset_food_stock_by_category_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    return;
  }

  public function mset_food_stock_by_food_ids($food_ids, $is_max)
  {
    $this->send_mset_food_stock_by_food_ids($food_ids, $is_max);
    $this->recv_mset_food_stock_by_food_ids();
  }

  public function send_mset_food_stock_by_food_ids($food_ids, $is_max)
  {
    $args = new \ERS\ElemeRestaurantService_mset_food_stock_by_food_ids_args();
    $args->food_ids = $food_ids;
    $args->is_max = $is_max;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'mset_food_stock_by_food_ids', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('mset_food_stock_by_food_ids', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_mset_food_stock_by_food_ids()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_mset_food_stock_by_food_ids_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_mset_food_stock_by_food_ids_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    return;
  }

  public function update_food(\ERS\TFood $update_struct)
  {
    $this->send_update_food($update_struct);
    return $this->recv_update_food();
  }

  public function send_update_food(\ERS\TFood $update_struct)
  {
    $args = new \ERS\ElemeRestaurantService_update_food_args();
    $args->update_struct = $update_struct;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'update_food', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('update_food', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_update_food()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_update_food_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_update_food_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("update_food failed: unknown result");
  }

  public function save_food($food_id, \ERS\TFood $t_food)
  {
    $this->send_save_food($food_id, $t_food);
    return $this->recv_save_food();
  }

  public function send_save_food($food_id, \ERS\TFood $t_food)
  {
    $args = new \ERS\ElemeRestaurantService_save_food_args();
    $args->food_id = $food_id;
    $args->t_food = $t_food;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'save_food', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('save_food', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_save_food()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_save_food_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_save_food_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("save_food failed: unknown result");
  }

  public function napos_save_food($food_id, \ERS\TFood $t_food)
  {
    $this->send_napos_save_food($food_id, $t_food);
    return $this->recv_napos_save_food();
  }

  public function send_napos_save_food($food_id, \ERS\TFood $t_food)
  {
    $args = new \ERS\ElemeRestaurantService_napos_save_food_args();
    $args->food_id = $food_id;
    $args->t_food = $t_food;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'napos_save_food', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('napos_save_food', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_napos_save_food()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_napos_save_food_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_napos_save_food_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("napos_save_food failed: unknown result");
  }

  public function remove_food($food_id)
  {
    $this->send_remove_food($food_id);
    $this->recv_remove_food();
  }

  public function send_remove_food($food_id)
  {
    $args = new \ERS\ElemeRestaurantService_remove_food_args();
    $args->food_id = $food_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'remove_food', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('remove_food', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_remove_food()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_remove_food_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_remove_food_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    return;
  }

  public function set_food_position($food_id, $position)
  {
    $this->send_set_food_position($food_id, $position);
    $this->recv_set_food_position();
  }

  public function send_set_food_position($food_id, $position)
  {
    $args = new \ERS\ElemeRestaurantService_set_food_position_args();
    $args->food_id = $food_id;
    $args->position = $position;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'set_food_position', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('set_food_position', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_set_food_position()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_set_food_position_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_set_food_position_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    return;
  }

  public function mset_food_position($food_ids)
  {
    $this->send_mset_food_position($food_ids);
    return $this->recv_mset_food_position();
  }

  public function send_mset_food_position($food_ids)
  {
    $args = new \ERS\ElemeRestaurantService_mset_food_position_args();
    $args->food_ids = $food_ids;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'mset_food_position', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('mset_food_position', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_mset_food_position()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_mset_food_position_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_mset_food_position_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("mset_food_position failed: unknown result");
  }

  public function update_food_category(\ERS\TFoodCategory $update_struct)
  {
    $this->send_update_food_category($update_struct);
    return $this->recv_update_food_category();
  }

  public function send_update_food_category(\ERS\TFoodCategory $update_struct)
  {
    $args = new \ERS\ElemeRestaurantService_update_food_category_args();
    $args->update_struct = $update_struct;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'update_food_category', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('update_food_category', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_update_food_category()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_update_food_category_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_update_food_category_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("update_food_category failed: unknown result");
  }

  public function save_food_category($category_id, \ERS\TFoodCategory $t_category)
  {
    $this->send_save_food_category($category_id, $t_category);
    return $this->recv_save_food_category();
  }

  public function send_save_food_category($category_id, \ERS\TFoodCategory $t_category)
  {
    $args = new \ERS\ElemeRestaurantService_save_food_category_args();
    $args->category_id = $category_id;
    $args->t_category = $t_category;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'save_food_category', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('save_food_category', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_save_food_category()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_save_food_category_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_save_food_category_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("save_food_category failed: unknown result");
  }

  public function remove_food_category($food_category_id)
  {
    $this->send_remove_food_category($food_category_id);
    $this->recv_remove_food_category();
  }

  public function send_remove_food_category($food_category_id)
  {
    $args = new \ERS\ElemeRestaurantService_remove_food_category_args();
    $args->food_category_id = $food_category_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'remove_food_category', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('remove_food_category', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_remove_food_category()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_remove_food_category_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_remove_food_category_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    return;
  }

  public function set_food_category_position($category_id, $position)
  {
    $this->send_set_food_category_position($category_id, $position);
    $this->recv_set_food_category_position();
  }

  public function send_set_food_category_position($category_id, $position)
  {
    $args = new \ERS\ElemeRestaurantService_set_food_category_position_args();
    $args->category_id = $category_id;
    $args->position = $position;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'set_food_category_position', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('set_food_category_position', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_set_food_category_position()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_set_food_category_position_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_set_food_category_position_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    return;
  }

  public function mset_food_category_position($category_ids)
  {
    $this->send_mset_food_category_position($category_ids);
    return $this->recv_mset_food_category_position();
  }

  public function send_mset_food_category_position($category_ids)
  {
    $args = new \ERS\ElemeRestaurantService_mset_food_category_position_args();
    $args->category_ids = $category_ids;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'mset_food_category_position', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('mset_food_category_position', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_mset_food_category_position()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_mset_food_category_position_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_mset_food_category_position_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("mset_food_category_position failed: unknown result");
  }

  public function add_food_category_attr($category_id, $attr)
  {
    $this->send_add_food_category_attr($category_id, $attr);
    $this->recv_add_food_category_attr();
  }

  public function send_add_food_category_attr($category_id, $attr)
  {
    $args = new \ERS\ElemeRestaurantService_add_food_category_attr_args();
    $args->category_id = $category_id;
    $args->attr = $attr;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'add_food_category_attr', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('add_food_category_attr', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_add_food_category_attr()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_add_food_category_attr_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_add_food_category_attr_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    return;
  }

  public function remove_food_category_attr($category_id, $attr)
  {
    $this->send_remove_food_category_attr($category_id, $attr);
    $this->recv_remove_food_category_attr();
  }

  public function send_remove_food_category_attr($category_id, $attr)
  {
    $args = new \ERS\ElemeRestaurantService_remove_food_category_attr_args();
    $args->category_id = $category_id;
    $args->attr = $attr;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'remove_food_category_attr', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('remove_food_category_attr', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_remove_food_category_attr()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_remove_food_category_attr_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_remove_food_category_attr_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    return;
  }

  public function remove_food_garnish_category($food_garnish_category_id)
  {
    $this->send_remove_food_garnish_category($food_garnish_category_id);
    $this->recv_remove_food_garnish_category();
  }

  public function send_remove_food_garnish_category($food_garnish_category_id)
  {
    $args = new \ERS\ElemeRestaurantService_remove_food_garnish_category_args();
    $args->food_garnish_category_id = $food_garnish_category_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'remove_food_garnish_category', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('remove_food_garnish_category', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_remove_food_garnish_category()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_remove_food_garnish_category_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_remove_food_garnish_category_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    return;
  }

  public function update_food_garnish_category(\ERS\TFoodGarnishCategory $update_struct)
  {
    $this->send_update_food_garnish_category($update_struct);
    return $this->recv_update_food_garnish_category();
  }

  public function send_update_food_garnish_category(\ERS\TFoodGarnishCategory $update_struct)
  {
    $args = new \ERS\ElemeRestaurantService_update_food_garnish_category_args();
    $args->update_struct = $update_struct;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'update_food_garnish_category', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('update_food_garnish_category', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_update_food_garnish_category()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_update_food_garnish_category_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_update_food_garnish_category_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("update_food_garnish_category failed: unknown result");
  }

  public function food_ugc_image_upload($order_item_id, $image_hash_list, $come_from)
  {
    $this->send_food_ugc_image_upload($order_item_id, $image_hash_list, $come_from);
    return $this->recv_food_ugc_image_upload();
  }

  public function send_food_ugc_image_upload($order_item_id, $image_hash_list, $come_from)
  {
    $args = new \ERS\ElemeRestaurantService_food_ugc_image_upload_args();
    $args->order_item_id = $order_item_id;
    $args->image_hash_list = $image_hash_list;
    $args->come_from = $come_from;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'food_ugc_image_upload', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('food_ugc_image_upload', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_food_ugc_image_upload()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_food_ugc_image_upload_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_food_ugc_image_upload_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("food_ugc_image_upload failed: unknown result");
  }

  public function process_food_ugc_image($food_ugc_image_id, $to_status, $user_id, $remark)
  {
    $this->send_process_food_ugc_image($food_ugc_image_id, $to_status, $user_id, $remark);
    $this->recv_process_food_ugc_image();
  }

  public function send_process_food_ugc_image($food_ugc_image_id, $to_status, $user_id, $remark)
  {
    $args = new \ERS\ElemeRestaurantService_process_food_ugc_image_args();
    $args->food_ugc_image_id = $food_ugc_image_id;
    $args->to_status = $to_status;
    $args->user_id = $user_id;
    $args->remark = $remark;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'process_food_ugc_image', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('process_food_ugc_image', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_process_food_ugc_image()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_process_food_ugc_image_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_process_food_ugc_image_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    return;
  }

  public function remove_garnish($garnish_id)
  {
    $this->send_remove_garnish($garnish_id);
    $this->recv_remove_garnish();
  }

  public function send_remove_garnish($garnish_id)
  {
    $args = new \ERS\ElemeRestaurantService_remove_garnish_args();
    $args->garnish_id = $garnish_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'remove_garnish', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('remove_garnish', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_remove_garnish()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_remove_garnish_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_remove_garnish_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    return;
  }

  public function update_garnish(\ERS\TGarnish $update_struct)
  {
    $this->send_update_garnish($update_struct);
    return $this->recv_update_garnish();
  }

  public function send_update_garnish(\ERS\TGarnish $update_struct)
  {
    $args = new \ERS\ElemeRestaurantService_update_garnish_args();
    $args->update_struct = $update_struct;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'update_garnish', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('update_garnish', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_update_garnish()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_update_garnish_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_update_garnish_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("update_garnish failed: unknown result");
  }

  public function remove_garnish_category($garnish_category_id)
  {
    $this->send_remove_garnish_category($garnish_category_id);
    $this->recv_remove_garnish_category();
  }

  public function send_remove_garnish_category($garnish_category_id)
  {
    $args = new \ERS\ElemeRestaurantService_remove_garnish_category_args();
    $args->garnish_category_id = $garnish_category_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'remove_garnish_category', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('remove_garnish_category', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_remove_garnish_category()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_remove_garnish_category_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_remove_garnish_category_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    return;
  }

  public function update_garnish_category(\ERS\TGarnishCategory $update_struct)
  {
    $this->send_update_garnish_category($update_struct);
    return $this->recv_update_garnish_category();
  }

  public function send_update_garnish_category(\ERS\TGarnishCategory $update_struct)
  {
    $args = new \ERS\ElemeRestaurantService_update_garnish_category_args();
    $args->update_struct = $update_struct;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'update_garnish_category', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('update_garnish_category', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_update_garnish_category()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_update_garnish_category_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_update_garnish_category_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("update_garnish_category failed: unknown result");
  }

  public function update_logo(\ERS\TLogo $update_struct)
  {
    $this->send_update_logo($update_struct);
    return $this->recv_update_logo();
  }

  public function send_update_logo(\ERS\TLogo $update_struct)
  {
    $args = new \ERS\ElemeRestaurantService_update_logo_args();
    $args->update_struct = $update_struct;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'update_logo', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('update_logo', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_update_logo()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_update_logo_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_update_logo_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("update_logo failed: unknown result");
  }

  public function new_restaurant(\ERS\TRestaurant $new_struct)
  {
    $this->send_new_restaurant($new_struct);
    return $this->recv_new_restaurant();
  }

  public function send_new_restaurant(\ERS\TRestaurant $new_struct)
  {
    $args = new \ERS\ElemeRestaurantService_new_restaurant_args();
    $args->new_struct = $new_struct;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'new_restaurant', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('new_restaurant', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_new_restaurant()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_new_restaurant_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_new_restaurant_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("new_restaurant failed: unknown result");
  }

  public function update_restaurant_geohash($restaurant_id)
  {
    $this->send_update_restaurant_geohash($restaurant_id);
    $this->recv_update_restaurant_geohash();
  }

  public function send_update_restaurant_geohash($restaurant_id)
  {
    $args = new \ERS\ElemeRestaurantService_update_restaurant_geohash_args();
    $args->restaurant_id = $restaurant_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'update_restaurant_geohash', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('update_restaurant_geohash', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_update_restaurant_geohash()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_update_restaurant_geohash_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_update_restaurant_geohash_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    return;
  }

  public function update_restaurant_region($restaurant_id, $region_id)
  {
    $this->send_update_restaurant_region($restaurant_id, $region_id);
    $this->recv_update_restaurant_region();
  }

  public function send_update_restaurant_region($restaurant_id, $region_id)
  {
    $args = new \ERS\ElemeRestaurantService_update_restaurant_region_args();
    $args->restaurant_id = $restaurant_id;
    $args->region_id = $region_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'update_restaurant_region', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('update_restaurant_region', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_update_restaurant_region()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_update_restaurant_region_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_update_restaurant_region_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    return;
  }

  public function reset_restaurant_region($restaurant_id)
  {
    $this->send_reset_restaurant_region($restaurant_id);
    $this->recv_reset_restaurant_region();
  }

  public function send_reset_restaurant_region($restaurant_id)
  {
    $args = new \ERS\ElemeRestaurantService_reset_restaurant_region_args();
    $args->restaurant_id = $restaurant_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'reset_restaurant_region', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('reset_restaurant_region', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_reset_restaurant_region()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_reset_restaurant_region_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_reset_restaurant_region_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    return;
  }

  public function set_restaurant_status($restaurant_id, $status, $value, $user_id, $remark, $remind_time, $corp_id)
  {
    $this->send_set_restaurant_status($restaurant_id, $status, $value, $user_id, $remark, $remind_time, $corp_id);
    $this->recv_set_restaurant_status();
  }

  public function send_set_restaurant_status($restaurant_id, $status, $value, $user_id, $remark, $remind_time, $corp_id)
  {
    $args = new \ERS\ElemeRestaurantService_set_restaurant_status_args();
    $args->restaurant_id = $restaurant_id;
    $args->status = $status;
    $args->value = $value;
    $args->user_id = $user_id;
    $args->remark = $remark;
    $args->remind_time = $remind_time;
    $args->corp_id = $corp_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'set_restaurant_status', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('set_restaurant_status', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_set_restaurant_status()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_set_restaurant_status_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_set_restaurant_status_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    return;
  }

  public function mset_restaurant_status_direct($restaurant_ids, $status, $value, $user_id, $remark)
  {
    $this->send_mset_restaurant_status_direct($restaurant_ids, $status, $value, $user_id, $remark);
    $this->recv_mset_restaurant_status_direct();
  }

  public function send_mset_restaurant_status_direct($restaurant_ids, $status, $value, $user_id, $remark)
  {
    $args = new \ERS\ElemeRestaurantService_mset_restaurant_status_direct_args();
    $args->restaurant_ids = $restaurant_ids;
    $args->status = $status;
    $args->value = $value;
    $args->user_id = $user_id;
    $args->remark = $remark;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'mset_restaurant_status_direct', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('mset_restaurant_status_direct', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_mset_restaurant_status_direct()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_mset_restaurant_status_direct_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_mset_restaurant_status_direct_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    return;
  }

  public function send_restaurant_change_notice($record_id)
  {
    $this->send_send_restaurant_change_notice($record_id);
    $this->recv_send_restaurant_change_notice();
  }

  public function send_send_restaurant_change_notice($record_id)
  {
    $args = new \ERS\ElemeRestaurantService_send_restaurant_change_notice_args();
    $args->record_id = $record_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'send_restaurant_change_notice', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('send_restaurant_change_notice', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_send_restaurant_change_notice()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_send_restaurant_change_notice_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_send_restaurant_change_notice_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    return;
  }

  public function send_saas_change_notice($record_id)
  {
    $this->send_send_saas_change_notice($record_id);
    $this->recv_send_saas_change_notice();
  }

  public function send_send_saas_change_notice($record_id)
  {
    $args = new \ERS\ElemeRestaurantService_send_saas_change_notice_args();
    $args->record_id = $record_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'send_saas_change_notice', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('send_saas_change_notice', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_send_saas_change_notice()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_send_saas_change_notice_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_send_saas_change_notice_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    return;
  }

  public function get_free_gift_icon_by_category($entity_category_id)
  {
    $this->send_get_free_gift_icon_by_category($entity_category_id);
    return $this->recv_get_free_gift_icon_by_category();
  }

  public function send_get_free_gift_icon_by_category($entity_category_id)
  {
    $args = new \ERS\ElemeRestaurantService_get_free_gift_icon_by_category_args();
    $args->entity_category_id = $entity_category_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'get_free_gift_icon_by_category', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('get_free_gift_icon_by_category', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_get_free_gift_icon_by_category()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_get_free_gift_icon_by_category_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_get_free_gift_icon_by_category_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("get_free_gift_icon_by_category failed: unknown result");
  }

  public function add_restaurant_open_apply($user_id, $applicant, $telephone, $mobilephone, $qq, $city_id, $entry_id, $geohash, $restaurant_name, $restaurant_address, $restaurant_description, $restaurant_url)
  {
    $this->send_add_restaurant_open_apply($user_id, $applicant, $telephone, $mobilephone, $qq, $city_id, $entry_id, $geohash, $restaurant_name, $restaurant_address, $restaurant_description, $restaurant_url);
    $this->recv_add_restaurant_open_apply();
  }

  public function send_add_restaurant_open_apply($user_id, $applicant, $telephone, $mobilephone, $qq, $city_id, $entry_id, $geohash, $restaurant_name, $restaurant_address, $restaurant_description, $restaurant_url)
  {
    $args = new \ERS\ElemeRestaurantService_add_restaurant_open_apply_args();
    $args->user_id = $user_id;
    $args->applicant = $applicant;
    $args->telephone = $telephone;
    $args->mobilephone = $mobilephone;
    $args->qq = $qq;
    $args->city_id = $city_id;
    $args->entry_id = $entry_id;
    $args->geohash = $geohash;
    $args->restaurant_name = $restaurant_name;
    $args->restaurant_address = $restaurant_address;
    $args->restaurant_description = $restaurant_description;
    $args->restaurant_url = $restaurant_url;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'add_restaurant_open_apply', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('add_restaurant_open_apply', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_add_restaurant_open_apply()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_add_restaurant_open_apply_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_add_restaurant_open_apply_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    return;
  }

  public function is_reserved_restaurant_url($restaurant_url)
  {
    $this->send_is_reserved_restaurant_url($restaurant_url);
    return $this->recv_is_reserved_restaurant_url();
  }

  public function send_is_reserved_restaurant_url($restaurant_url)
  {
    $args = new \ERS\ElemeRestaurantService_is_reserved_restaurant_url_args();
    $args->restaurant_url = $restaurant_url;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'is_reserved_restaurant_url', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('is_reserved_restaurant_url', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_is_reserved_restaurant_url()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_is_reserved_restaurant_url_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_is_reserved_restaurant_url_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("is_reserved_restaurant_url failed: unknown result");
  }

  public function get_city_entry_json($city_id)
  {
    $this->send_get_city_entry_json($city_id);
    return $this->recv_get_city_entry_json();
  }

  public function send_get_city_entry_json($city_id)
  {
    $args = new \ERS\ElemeRestaurantService_get_city_entry_json_args();
    $args->city_id = $city_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'get_city_entry_json', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('get_city_entry_json', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_get_city_entry_json()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_get_city_entry_json_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_get_city_entry_json_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("get_city_entry_json failed: unknown result");
  }

  public function get_restaurant_ugc_image_json($restaurant_id, $limit)
  {
    $this->send_get_restaurant_ugc_image_json($restaurant_id, $limit);
    return $this->recv_get_restaurant_ugc_image_json();
  }

  public function send_get_restaurant_ugc_image_json($restaurant_id, $limit)
  {
    $args = new \ERS\ElemeRestaurantService_get_restaurant_ugc_image_json_args();
    $args->restaurant_id = $restaurant_id;
    $args->limit = $limit;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'get_restaurant_ugc_image_json', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('get_restaurant_ugc_image_json', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_get_restaurant_ugc_image_json()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_get_restaurant_ugc_image_json_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_get_restaurant_ugc_image_json_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("get_restaurant_ugc_image_json failed: unknown result");
  }

  public function get_restaurant_ugc_image_json_new($restaurant_id, $limit)
  {
    $this->send_get_restaurant_ugc_image_json_new($restaurant_id, $limit);
    return $this->recv_get_restaurant_ugc_image_json_new();
  }

  public function send_get_restaurant_ugc_image_json_new($restaurant_id, $limit)
  {
    $args = new \ERS\ElemeRestaurantService_get_restaurant_ugc_image_json_new_args();
    $args->restaurant_id = $restaurant_id;
    $args->limit = $limit;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'get_restaurant_ugc_image_json_new', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('get_restaurant_ugc_image_json_new', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_get_restaurant_ugc_image_json_new()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_get_restaurant_ugc_image_json_new_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_get_restaurant_ugc_image_json_new_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("get_restaurant_ugc_image_json_new failed: unknown result");
  }

  public function get_restaurant_menu_json($restaurant_id)
  {
    $this->send_get_restaurant_menu_json($restaurant_id);
    return $this->recv_get_restaurant_menu_json();
  }

  public function send_get_restaurant_menu_json($restaurant_id)
  {
    $args = new \ERS\ElemeRestaurantService_get_restaurant_menu_json_args();
    $args->restaurant_id = $restaurant_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'get_restaurant_menu_json', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('get_restaurant_menu_json', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_get_restaurant_menu_json()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_get_restaurant_menu_json_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_get_restaurant_menu_json_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("get_restaurant_menu_json failed: unknown result");
  }

  public function get_restaurant_menu_json_new($restaurant_id)
  {
    $this->send_get_restaurant_menu_json_new($restaurant_id);
    return $this->recv_get_restaurant_menu_json_new();
  }

  public function send_get_restaurant_menu_json_new($restaurant_id)
  {
    $args = new \ERS\ElemeRestaurantService_get_restaurant_menu_json_new_args();
    $args->restaurant_id = $restaurant_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'get_restaurant_menu_json_new', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('get_restaurant_menu_json_new', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_get_restaurant_menu_json_new()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_get_restaurant_menu_json_new_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_get_restaurant_menu_json_new_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("get_restaurant_menu_json_new failed: unknown result");
  }

  public function add_food_activity($food_activity_id, $food_ids, $weekdays)
  {
    $this->send_add_food_activity($food_activity_id, $food_ids, $weekdays);
    $this->recv_add_food_activity();
  }

  public function send_add_food_activity($food_activity_id, $food_ids, $weekdays)
  {
    $args = new \ERS\ElemeRestaurantService_add_food_activity_args();
    $args->food_activity_id = $food_activity_id;
    $args->food_ids = $food_ids;
    $args->weekdays = $weekdays;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'add_food_activity', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('add_food_activity', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_add_food_activity()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_add_food_activity_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_add_food_activity_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    return;
  }

  public function clear_food_activity($food_ids, $weekdays)
  {
    $this->send_clear_food_activity($food_ids, $weekdays);
    $this->recv_clear_food_activity();
  }

  public function send_clear_food_activity($food_ids, $weekdays)
  {
    $args = new \ERS\ElemeRestaurantService_clear_food_activity_args();
    $args->food_ids = $food_ids;
    $args->weekdays = $weekdays;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'clear_food_activity', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('clear_food_activity', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_clear_food_activity()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_clear_food_activity_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_clear_food_activity_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    return;
  }

  public function sync_food_activity_with_category($food_id, $food_category_id)
  {
    $this->send_sync_food_activity_with_category($food_id, $food_category_id);
    $this->recv_sync_food_activity_with_category();
  }

  public function send_sync_food_activity_with_category($food_id, $food_category_id)
  {
    $args = new \ERS\ElemeRestaurantService_sync_food_activity_with_category_args();
    $args->food_id = $food_id;
    $args->food_category_id = $food_category_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'sync_food_activity_with_category', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('sync_food_activity_with_category', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_sync_food_activity_with_category()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_sync_food_activity_with_category_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_sync_food_activity_with_category_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    return;
  }

  public function dismiss_food_activity($food_activity_id)
  {
    $this->send_dismiss_food_activity($food_activity_id);
    $this->recv_dismiss_food_activity();
  }

  public function send_dismiss_food_activity($food_activity_id)
  {
    $args = new \ERS\ElemeRestaurantService_dismiss_food_activity_args();
    $args->food_activity_id = $food_activity_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'dismiss_food_activity', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('dismiss_food_activity', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_dismiss_food_activity()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_dismiss_food_activity_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_dismiss_food_activity_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    return;
  }

  public function count_seo_sm_place(\ERS\TSeoSmQuery $query_struct)
  {
    $this->send_count_seo_sm_place($query_struct);
    return $this->recv_count_seo_sm_place();
  }

  public function send_count_seo_sm_place(\ERS\TSeoSmQuery $query_struct)
  {
    $args = new \ERS\ElemeRestaurantService_count_seo_sm_place_args();
    $args->query_struct = $query_struct;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'count_seo_sm_place', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('count_seo_sm_place', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_count_seo_sm_place()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_count_seo_sm_place_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_count_seo_sm_place_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("count_seo_sm_place failed: unknown result");
  }

  public function update_restaurant($restaurant_id, $user_id, \ERS\TRestaurant $t_rst)
  {
    $this->send_update_restaurant($restaurant_id, $user_id, $t_rst);
    $this->recv_update_restaurant();
  }

  public function send_update_restaurant($restaurant_id, $user_id, \ERS\TRestaurant $t_rst)
  {
    $args = new \ERS\ElemeRestaurantService_update_restaurant_args();
    $args->restaurant_id = $restaurant_id;
    $args->user_id = $user_id;
    $args->t_rst = $t_rst;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'update_restaurant', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('update_restaurant', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_update_restaurant()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_update_restaurant_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_update_restaurant_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    return;
  }

  public function overload_close_restaurant($order_modes, $saas_statuses, $sms_services, $exculde_city_ids, $exculde_region_group_ids, $exculde_region_ids, $exculde_restaurant_ids)
  {
    $this->send_overload_close_restaurant($order_modes, $saas_statuses, $sms_services, $exculde_city_ids, $exculde_region_group_ids, $exculde_region_ids, $exculde_restaurant_ids);
    $this->recv_overload_close_restaurant();
  }

  public function send_overload_close_restaurant($order_modes, $saas_statuses, $sms_services, $exculde_city_ids, $exculde_region_group_ids, $exculde_region_ids, $exculde_restaurant_ids)
  {
    $args = new \ERS\ElemeRestaurantService_overload_close_restaurant_args();
    $args->order_modes = $order_modes;
    $args->saas_statuses = $saas_statuses;
    $args->sms_services = $sms_services;
    $args->exculde_city_ids = $exculde_city_ids;
    $args->exculde_region_group_ids = $exculde_region_group_ids;
    $args->exculde_region_ids = $exculde_region_ids;
    $args->exculde_restaurant_ids = $exculde_restaurant_ids;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'overload_close_restaurant', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('overload_close_restaurant', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_overload_close_restaurant()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_overload_close_restaurant_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_overload_close_restaurant_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    return;
  }

  public function get_restaurant_deliver_time($restaurant_id)
  {
    $this->send_get_restaurant_deliver_time($restaurant_id);
    return $this->recv_get_restaurant_deliver_time();
  }

  public function send_get_restaurant_deliver_time($restaurant_id)
  {
    $args = new \ERS\ElemeRestaurantService_get_restaurant_deliver_time_args();
    $args->restaurant_id = $restaurant_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'get_restaurant_deliver_time', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('get_restaurant_deliver_time', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_get_restaurant_deliver_time()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_get_restaurant_deliver_time_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_get_restaurant_deliver_time_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("get_restaurant_deliver_time failed: unknown result");
  }

  public function get_restaurant_manage_tree($restaurant_id)
  {
    $this->send_get_restaurant_manage_tree($restaurant_id);
    return $this->recv_get_restaurant_manage_tree();
  }

  public function send_get_restaurant_manage_tree($restaurant_id)
  {
    $args = new \ERS\ElemeRestaurantService_get_restaurant_manage_tree_args();
    $args->restaurant_id = $restaurant_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'get_restaurant_manage_tree', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('get_restaurant_manage_tree', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_get_restaurant_manage_tree()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_get_restaurant_manage_tree_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_get_restaurant_manage_tree_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("get_restaurant_manage_tree failed: unknown result");
  }

  public function all_restaurant_back_alive($from_datetime, $order_modes, $saas_statuses, $sms_services, $city_ids, $region_group_ids, $region_ids, $restaurant_ids)
  {
    $this->send_all_restaurant_back_alive($from_datetime, $order_modes, $saas_statuses, $sms_services, $city_ids, $region_group_ids, $region_ids, $restaurant_ids);
    $this->recv_all_restaurant_back_alive();
  }

  public function send_all_restaurant_back_alive($from_datetime, $order_modes, $saas_statuses, $sms_services, $city_ids, $region_group_ids, $region_ids, $restaurant_ids)
  {
    $args = new \ERS\ElemeRestaurantService_all_restaurant_back_alive_args();
    $args->from_datetime = $from_datetime;
    $args->order_modes = $order_modes;
    $args->saas_statuses = $saas_statuses;
    $args->sms_services = $sms_services;
    $args->city_ids = $city_ids;
    $args->region_group_ids = $region_group_ids;
    $args->region_ids = $region_ids;
    $args->restaurant_ids = $restaurant_ids;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'all_restaurant_back_alive', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('all_restaurant_back_alive', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_all_restaurant_back_alive()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_all_restaurant_back_alive_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_all_restaurant_back_alive_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    return;
  }

  public function check_restaurant_permission($user_id, $restaurant_id)
  {
    $this->send_check_restaurant_permission($user_id, $restaurant_id);
    return $this->recv_check_restaurant_permission();
  }

  public function send_check_restaurant_permission($user_id, $restaurant_id)
  {
    $args = new \ERS\ElemeRestaurantService_check_restaurant_permission_args();
    $args->user_id = $user_id;
    $args->restaurant_id = $restaurant_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'check_restaurant_permission', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('check_restaurant_permission', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_check_restaurant_permission()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_check_restaurant_permission_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_check_restaurant_permission_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("check_restaurant_permission failed: unknown result");
  }

  public function mget_restaurant_in_region($region_ids, $is_valid)
  {
    $this->send_mget_restaurant_in_region($region_ids, $is_valid);
    return $this->recv_mget_restaurant_in_region();
  }

  public function send_mget_restaurant_in_region($region_ids, $is_valid)
  {
    $args = new \ERS\ElemeRestaurantService_mget_restaurant_in_region_args();
    $args->region_ids = $region_ids;
    $args->is_valid = $is_valid;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'mget_restaurant_in_region', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('mget_restaurant_in_region', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_mget_restaurant_in_region()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_mget_restaurant_in_region_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_mget_restaurant_in_region_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("mget_restaurant_in_region failed: unknown result");
  }

  public function archive_restaurant_status()
  {
    $this->send_archive_restaurant_status();
    $this->recv_archive_restaurant_status();
  }

  public function send_archive_restaurant_status()
  {
    $args = new \ERS\ElemeRestaurantService_archive_restaurant_status_args();
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'archive_restaurant_status', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('archive_restaurant_status', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_archive_restaurant_status()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_archive_restaurant_status_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_archive_restaurant_status_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    return;
  }

  public function do_archive_restaurant_status($restaurant_ids, $record_time)
  {
    $this->send_do_archive_restaurant_status($restaurant_ids, $record_time);
    $this->recv_do_archive_restaurant_status();
  }

  public function send_do_archive_restaurant_status($restaurant_ids, $record_time)
  {
    $args = new \ERS\ElemeRestaurantService_do_archive_restaurant_status_args();
    $args->restaurant_ids = $restaurant_ids;
    $args->record_time = $record_time;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'do_archive_restaurant_status', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('do_archive_restaurant_status', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_do_archive_restaurant_status()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_do_archive_restaurant_status_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_do_archive_restaurant_status_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    return;
  }

  public function get_area_structure($user_id)
  {
    $this->send_get_area_structure($user_id);
    return $this->recv_get_area_structure();
  }

  public function send_get_area_structure($user_id)
  {
    $args = new \ERS\ElemeRestaurantService_get_area_structure_args();
    $args->user_id = $user_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'get_area_structure', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('get_area_structure', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_get_area_structure()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_get_area_structure_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_get_area_structure_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("get_area_structure failed: unknown result");
  }

  public function get_stats_area_structure($user_id)
  {
    $this->send_get_stats_area_structure($user_id);
    return $this->recv_get_stats_area_structure();
  }

  public function send_get_stats_area_structure($user_id)
  {
    $args = new \ERS\ElemeRestaurantService_get_stats_area_structure_args();
    $args->user_id = $user_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'get_stats_area_structure', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('get_stats_area_structure', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_get_stats_area_structure()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_get_stats_area_structure_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_get_stats_area_structure_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("get_stats_area_structure failed: unknown result");
  }

  public function filter_area($user_id, $struct_json)
  {
    $this->send_filter_area($user_id, $struct_json);
    return $this->recv_filter_area();
  }

  public function send_filter_area($user_id, $struct_json)
  {
    $args = new \ERS\ElemeRestaurantService_filter_area_args();
    $args->user_id = $user_id;
    $args->struct_json = $struct_json;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'filter_area', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('filter_area', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_filter_area()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_filter_area_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_filter_area_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("filter_area failed: unknown result");
  }

  public function filter_stats_area($user_id, $struct_json)
  {
    $this->send_filter_stats_area($user_id, $struct_json);
    return $this->recv_filter_stats_area();
  }

  public function send_filter_stats_area($user_id, $struct_json)
  {
    $args = new \ERS\ElemeRestaurantService_filter_stats_area_args();
    $args->user_id = $user_id;
    $args->struct_json = $struct_json;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'filter_stats_area', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('filter_stats_area', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_filter_stats_area()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_filter_stats_area_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_filter_stats_area_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("filter_stats_area failed: unknown result");
  }

  public function saas_status_touch($restaurant_id, $change_type, $user_id)
  {
    $this->send_saas_status_touch($restaurant_id, $change_type, $user_id);
    return $this->recv_saas_status_touch();
  }

  public function send_saas_status_touch($restaurant_id, $change_type, $user_id)
  {
    $args = new \ERS\ElemeRestaurantService_saas_status_touch_args();
    $args->restaurant_id = $restaurant_id;
    $args->change_type = $change_type;
    $args->user_id = $user_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'saas_status_touch', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('saas_status_touch', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_saas_status_touch()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_saas_status_touch_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_saas_status_touch_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("saas_status_touch failed: unknown result");
  }

  public function saas_recharge_custom($restaurant_id, $change_attr, $change_amount, $user_id, $remark)
  {
    $this->send_saas_recharge_custom($restaurant_id, $change_attr, $change_amount, $user_id, $remark);
    $this->recv_saas_recharge_custom();
  }

  public function send_saas_recharge_custom($restaurant_id, $change_attr, $change_amount, $user_id, $remark)
  {
    $args = new \ERS\ElemeRestaurantService_saas_recharge_custom_args();
    $args->restaurant_id = $restaurant_id;
    $args->change_attr = $change_attr;
    $args->change_amount = $change_amount;
    $args->user_id = $user_id;
    $args->remark = $remark;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'saas_recharge_custom', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('saas_recharge_custom', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_saas_recharge_custom()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_saas_recharge_custom_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_saas_recharge_custom_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    return;
  }

  public function saas_set_status_custom($restaurant_id, $status_new, $remark, $user_id)
  {
    $this->send_saas_set_status_custom($restaurant_id, $status_new, $remark, $user_id);
    $this->recv_saas_set_status_custom();
  }

  public function send_saas_set_status_custom($restaurant_id, $status_new, $remark, $user_id)
  {
    $args = new \ERS\ElemeRestaurantService_saas_set_status_custom_args();
    $args->restaurant_id = $restaurant_id;
    $args->status_new = $status_new;
    $args->remark = $remark;
    $args->user_id = $user_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'saas_set_status_custom', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('saas_set_status_custom', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_saas_set_status_custom()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_saas_set_status_custom_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_saas_set_status_custom_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    return;
  }

  public function saas_set_trial($restaurant_id, $bonus, $user_id)
  {
    $this->send_saas_set_trial($restaurant_id, $bonus, $user_id);
    $this->recv_saas_set_trial();
  }

  public function send_saas_set_trial($restaurant_id, $bonus, $user_id)
  {
    $args = new \ERS\ElemeRestaurantService_saas_set_trial_args();
    $args->restaurant_id = $restaurant_id;
    $args->bonus = $bonus;
    $args->user_id = $user_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'saas_set_trial', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('saas_set_trial', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_saas_set_trial()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_saas_set_trial_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_saas_set_trial_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    return;
  }

  public function saas_set_temp_free($restaurant_id, $end_date, $remark, $user_id)
  {
    $this->send_saas_set_temp_free($restaurant_id, $end_date, $remark, $user_id);
    $this->recv_saas_set_temp_free();
  }

  public function send_saas_set_temp_free($restaurant_id, $end_date, $remark, $user_id)
  {
    $args = new \ERS\ElemeRestaurantService_saas_set_temp_free_args();
    $args->restaurant_id = $restaurant_id;
    $args->end_date = $end_date;
    $args->remark = $remark;
    $args->user_id = $user_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'saas_set_temp_free', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('saas_set_temp_free', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_saas_set_temp_free()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_saas_set_temp_free_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_saas_set_temp_free_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    return;
  }

  public function saas_abandon_contract($sn, $user_id, $remark)
  {
    $this->send_saas_abandon_contract($sn, $user_id, $remark);
    $this->recv_saas_abandon_contract();
  }

  public function send_saas_abandon_contract($sn, $user_id, $remark)
  {
    $args = new \ERS\ElemeRestaurantService_saas_abandon_contract_args();
    $args->sn = $sn;
    $args->user_id = $user_id;
    $args->remark = $remark;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'saas_abandon_contract', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('saas_abandon_contract', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_saas_abandon_contract()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_saas_abandon_contract_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_saas_abandon_contract_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    return;
  }

  public function saas_archive_contract($sn, $user_id, $remark)
  {
    $this->send_saas_archive_contract($sn, $user_id, $remark);
    $this->recv_saas_archive_contract();
  }

  public function send_saas_archive_contract($sn, $user_id, $remark)
  {
    $args = new \ERS\ElemeRestaurantService_saas_archive_contract_args();
    $args->sn = $sn;
    $args->user_id = $user_id;
    $args->remark = $remark;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'saas_archive_contract', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('saas_archive_contract', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_saas_archive_contract()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_saas_archive_contract_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_saas_archive_contract_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    return;
  }

  public function saas_set_contract_bonus_sent($sn, $user_id, $remark)
  {
    $this->send_saas_set_contract_bonus_sent($sn, $user_id, $remark);
    $this->recv_saas_set_contract_bonus_sent();
  }

  public function send_saas_set_contract_bonus_sent($sn, $user_id, $remark)
  {
    $args = new \ERS\ElemeRestaurantService_saas_set_contract_bonus_sent_args();
    $args->sn = $sn;
    $args->user_id = $user_id;
    $args->remark = $remark;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'saas_set_contract_bonus_sent', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('saas_set_contract_bonus_sent', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_saas_set_contract_bonus_sent()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_saas_set_contract_bonus_sent_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_saas_set_contract_bonus_sent_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    return;
  }

  public function saas_confirm_income($sn, $payment_type, $user_id, $rec_date, $remark)
  {
    $this->send_saas_confirm_income($sn, $payment_type, $user_id, $rec_date, $remark);
    $this->recv_saas_confirm_income();
  }

  public function send_saas_confirm_income($sn, $payment_type, $user_id, $rec_date, $remark)
  {
    $args = new \ERS\ElemeRestaurantService_saas_confirm_income_args();
    $args->sn = $sn;
    $args->payment_type = $payment_type;
    $args->user_id = $user_id;
    $args->rec_date = $rec_date;
    $args->remark = $remark;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'saas_confirm_income', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('saas_confirm_income', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_saas_confirm_income()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_saas_confirm_income_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_saas_confirm_income_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    return;
  }

  public function saas_check_trials($restaurant_ids)
  {
    $this->send_saas_check_trials($restaurant_ids);
    $this->recv_saas_check_trials();
  }

  public function send_saas_check_trials($restaurant_ids)
  {
    $args = new \ERS\ElemeRestaurantService_saas_check_trials_args();
    $args->restaurant_ids = $restaurant_ids;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'saas_check_trials', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('saas_check_trials', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_saas_check_trials()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_saas_check_trials_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_saas_check_trials_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    return;
  }

  public function saas_check_remains()
  {
    $this->send_saas_check_remains();
    $this->recv_saas_check_remains();
  }

  public function send_saas_check_remains()
  {
    $args = new \ERS\ElemeRestaurantService_saas_check_remains_args();
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'saas_check_remains', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('saas_check_remains', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_saas_check_remains()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_saas_check_remains_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_saas_check_remains_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    return;
  }

  public function saas_check_temp_frees()
  {
    $this->send_saas_check_temp_frees();
    $this->recv_saas_check_temp_frees();
  }

  public function send_saas_check_temp_frees()
  {
    $args = new \ERS\ElemeRestaurantService_saas_check_temp_frees_args();
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'saas_check_temp_frees', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('saas_check_temp_frees', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_saas_check_temp_frees()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_saas_check_temp_frees_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_saas_check_temp_frees_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    return;
  }

  public function saas_check_abandons()
  {
    $this->send_saas_check_abandons();
    $this->recv_saas_check_abandons();
  }

  public function send_saas_check_abandons()
  {
    $args = new \ERS\ElemeRestaurantService_saas_check_abandons_args();
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'saas_check_abandons', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('saas_check_abandons', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_saas_check_abandons()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_saas_check_abandons_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_saas_check_abandons_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    return;
  }

  public function saas_daily_report()
  {
    $this->send_saas_daily_report();
    $this->recv_saas_daily_report();
  }

  public function send_saas_daily_report()
  {
    $args = new \ERS\ElemeRestaurantService_saas_daily_report_args();
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'saas_daily_report', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('saas_daily_report', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_saas_daily_report()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_saas_daily_report_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_saas_daily_report_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    return;
  }

  public function save_saas_contract_plan($plan_id, \ERS\TSaasContractPlan $t_saas_contract_plan)
  {
    $this->send_save_saas_contract_plan($plan_id, $t_saas_contract_plan);
    return $this->recv_save_saas_contract_plan();
  }

  public function send_save_saas_contract_plan($plan_id, \ERS\TSaasContractPlan $t_saas_contract_plan)
  {
    $args = new \ERS\ElemeRestaurantService_save_saas_contract_plan_args();
    $args->plan_id = $plan_id;
    $args->t_saas_contract_plan = $t_saas_contract_plan;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'save_saas_contract_plan', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('save_saas_contract_plan', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_save_saas_contract_plan()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_save_saas_contract_plan_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_save_saas_contract_plan_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("save_saas_contract_plan failed: unknown result");
  }

  public function count_saas_contract_plan(\ERS\TSaasContractPlanQuery $query_struct)
  {
    $this->send_count_saas_contract_plan($query_struct);
    return $this->recv_count_saas_contract_plan();
  }

  public function send_count_saas_contract_plan(\ERS\TSaasContractPlanQuery $query_struct)
  {
    $args = new \ERS\ElemeRestaurantService_count_saas_contract_plan_args();
    $args->query_struct = $query_struct;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'count_saas_contract_plan', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('count_saas_contract_plan', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_count_saas_contract_plan()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_count_saas_contract_plan_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_count_saas_contract_plan_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("count_saas_contract_plan failed: unknown result");
  }

  public function query_saas_contract_plan(\ERS\TSaasContractPlanQuery $query_struct)
  {
    $this->send_query_saas_contract_plan($query_struct);
    return $this->recv_query_saas_contract_plan();
  }

  public function send_query_saas_contract_plan(\ERS\TSaasContractPlanQuery $query_struct)
  {
    $args = new \ERS\ElemeRestaurantService_query_saas_contract_plan_args();
    $args->query_struct = $query_struct;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'query_saas_contract_plan', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('query_saas_contract_plan', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_query_saas_contract_plan()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_query_saas_contract_plan_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_query_saas_contract_plan_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("query_saas_contract_plan failed: unknown result");
  }

  public function get_saas_contract_plan($plan_id)
  {
    $this->send_get_saas_contract_plan($plan_id);
    return $this->recv_get_saas_contract_plan();
  }

  public function send_get_saas_contract_plan($plan_id)
  {
    $args = new \ERS\ElemeRestaurantService_get_saas_contract_plan_args();
    $args->plan_id = $plan_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'get_saas_contract_plan', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('get_saas_contract_plan', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_get_saas_contract_plan()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_get_saas_contract_plan_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_get_saas_contract_plan_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("get_saas_contract_plan failed: unknown result");
  }

  public function new_saas_contract_record(\ERS\TSaasContractRecord $t_record)
  {
    $this->send_new_saas_contract_record($t_record);
    return $this->recv_new_saas_contract_record();
  }

  public function send_new_saas_contract_record(\ERS\TSaasContractRecord $t_record)
  {
    $args = new \ERS\ElemeRestaurantService_new_saas_contract_record_args();
    $args->t_record = $t_record;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'new_saas_contract_record', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('new_saas_contract_record', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_new_saas_contract_record()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_new_saas_contract_record_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_new_saas_contract_record_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("new_saas_contract_record failed: unknown result");
  }

  public function count_saas_contract_record(\ERS\TSaasContractRecordQuery $query_struct)
  {
    $this->send_count_saas_contract_record($query_struct);
    return $this->recv_count_saas_contract_record();
  }

  public function send_count_saas_contract_record(\ERS\TSaasContractRecordQuery $query_struct)
  {
    $args = new \ERS\ElemeRestaurantService_count_saas_contract_record_args();
    $args->query_struct = $query_struct;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'count_saas_contract_record', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('count_saas_contract_record', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_count_saas_contract_record()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_count_saas_contract_record_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_count_saas_contract_record_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("count_saas_contract_record failed: unknown result");
  }

  public function query_saas_contract_record(\ERS\TSaasContractRecordQuery $query_struct)
  {
    $this->send_query_saas_contract_record($query_struct);
    return $this->recv_query_saas_contract_record();
  }

  public function send_query_saas_contract_record(\ERS\TSaasContractRecordQuery $query_struct)
  {
    $args = new \ERS\ElemeRestaurantService_query_saas_contract_record_args();
    $args->query_struct = $query_struct;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'query_saas_contract_record', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('query_saas_contract_record', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_query_saas_contract_record()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_query_saas_contract_record_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_query_saas_contract_record_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("query_saas_contract_record failed: unknown result");
  }

  public function query_saas_status(\ERS\TSaasStatusQuery $query_struct)
  {
    $this->send_query_saas_status($query_struct);
    return $this->recv_query_saas_status();
  }

  public function send_query_saas_status(\ERS\TSaasStatusQuery $query_struct)
  {
    $args = new \ERS\ElemeRestaurantService_query_saas_status_args();
    $args->query_struct = $query_struct;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'query_saas_status', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('query_saas_status', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_query_saas_status()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_query_saas_status_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_query_saas_status_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("query_saas_status failed: unknown result");
  }

  public function count_saas_status(\ERS\TSaasStatusQuery $query_struct)
  {
    $this->send_count_saas_status($query_struct);
    return $this->recv_count_saas_status();
  }

  public function send_count_saas_status(\ERS\TSaasStatusQuery $query_struct)
  {
    $args = new \ERS\ElemeRestaurantService_count_saas_status_args();
    $args->query_struct = $query_struct;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'count_saas_status', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('count_saas_status', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_count_saas_status()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_count_saas_status_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_count_saas_status_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("count_saas_status failed: unknown result");
  }

  public function query_saas_status_change(\ERS\TSaasStatusChangeQuery $query_struct)
  {
    $this->send_query_saas_status_change($query_struct);
    return $this->recv_query_saas_status_change();
  }

  public function send_query_saas_status_change(\ERS\TSaasStatusChangeQuery $query_struct)
  {
    $args = new \ERS\ElemeRestaurantService_query_saas_status_change_args();
    $args->query_struct = $query_struct;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'query_saas_status_change', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('query_saas_status_change', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_query_saas_status_change()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_query_saas_status_change_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_query_saas_status_change_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("query_saas_status_change failed: unknown result");
  }

  public function count_saas_status_change(\ERS\TSaasStatusChangeQuery $query_struct)
  {
    $this->send_count_saas_status_change($query_struct);
    return $this->recv_count_saas_status_change();
  }

  public function send_count_saas_status_change(\ERS\TSaasStatusChangeQuery $query_struct)
  {
    $args = new \ERS\ElemeRestaurantService_count_saas_status_change_args();
    $args->query_struct = $query_struct;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'count_saas_status_change', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('count_saas_status_change', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_count_saas_status_change()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_count_saas_status_change_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_count_saas_status_change_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("count_saas_status_change failed: unknown result");
  }

  public function get_saas_contract_record($sn)
  {
    $this->send_get_saas_contract_record($sn);
    return $this->recv_get_saas_contract_record();
  }

  public function send_get_saas_contract_record($sn)
  {
    $args = new \ERS\ElemeRestaurantService_get_saas_contract_record_args();
    $args->sn = $sn;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'get_saas_contract_record', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('get_saas_contract_record', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_get_saas_contract_record()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_get_saas_contract_record_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_get_saas_contract_record_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("get_saas_contract_record failed: unknown result");
  }

  public function mget_saas_contract_record($sns)
  {
    $this->send_mget_saas_contract_record($sns);
    return $this->recv_mget_saas_contract_record();
  }

  public function send_mget_saas_contract_record($sns)
  {
    $args = new \ERS\ElemeRestaurantService_mget_saas_contract_record_args();
    $args->sns = $sns;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'mget_saas_contract_record', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('mget_saas_contract_record', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_mget_saas_contract_record()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_mget_saas_contract_record_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_mget_saas_contract_record_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("mget_saas_contract_record failed: unknown result");
  }

  public function saas_update_contract_ranking_info($sn, $ranking_infos, $user_id, $remark)
  {
    $this->send_saas_update_contract_ranking_info($sn, $ranking_infos, $user_id, $remark);
    $this->recv_saas_update_contract_ranking_info();
  }

  public function send_saas_update_contract_ranking_info($sn, $ranking_infos, $user_id, $remark)
  {
    $args = new \ERS\ElemeRestaurantService_saas_update_contract_ranking_info_args();
    $args->sn = $sn;
    $args->ranking_infos = $ranking_infos;
    $args->user_id = $user_id;
    $args->remark = $remark;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'saas_update_contract_ranking_info', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('saas_update_contract_ranking_info', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_saas_update_contract_ranking_info()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_saas_update_contract_ranking_info_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_saas_update_contract_ranking_info_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    return;
  }

  public function get_saas_contract_combo($sn)
  {
    $this->send_get_saas_contract_combo($sn);
    return $this->recv_get_saas_contract_combo();
  }

  public function send_get_saas_contract_combo($sn)
  {
    $args = new \ERS\ElemeRestaurantService_get_saas_contract_combo_args();
    $args->sn = $sn;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'get_saas_contract_combo', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('get_saas_contract_combo', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_get_saas_contract_combo()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_get_saas_contract_combo_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_get_saas_contract_combo_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("get_saas_contract_combo failed: unknown result");
  }

  public function mget_saas_contract_combo($sns)
  {
    $this->send_mget_saas_contract_combo($sns);
    return $this->recv_mget_saas_contract_combo();
  }

  public function send_mget_saas_contract_combo($sns)
  {
    $args = new \ERS\ElemeRestaurantService_mget_saas_contract_combo_args();
    $args->sns = $sns;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'mget_saas_contract_combo', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('mget_saas_contract_combo', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_mget_saas_contract_combo()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_mget_saas_contract_combo_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_mget_saas_contract_combo_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("mget_saas_contract_combo failed: unknown result");
  }

  public function query_saas_contract_combo(\ERS\TSaasContractComboQuery $query_struct)
  {
    $this->send_query_saas_contract_combo($query_struct);
    return $this->recv_query_saas_contract_combo();
  }

  public function send_query_saas_contract_combo(\ERS\TSaasContractComboQuery $query_struct)
  {
    $args = new \ERS\ElemeRestaurantService_query_saas_contract_combo_args();
    $args->query_struct = $query_struct;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'query_saas_contract_combo', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('query_saas_contract_combo', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_query_saas_contract_combo()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_query_saas_contract_combo_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_query_saas_contract_combo_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("query_saas_contract_combo failed: unknown result");
  }

  public function count_saas_contract_combo(\ERS\TSaasContractComboQuery $query_struct)
  {
    $this->send_count_saas_contract_combo($query_struct);
    return $this->recv_count_saas_contract_combo();
  }

  public function send_count_saas_contract_combo(\ERS\TSaasContractComboQuery $query_struct)
  {
    $args = new \ERS\ElemeRestaurantService_count_saas_contract_combo_args();
    $args->query_struct = $query_struct;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'count_saas_contract_combo', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('count_saas_contract_combo', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_count_saas_contract_combo()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_count_saas_contract_combo_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_count_saas_contract_combo_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("count_saas_contract_combo failed: unknown result");
  }

  public function new_saas_contract_combo(\ERS\TSaasContractCombo $t_combo)
  {
    $this->send_new_saas_contract_combo($t_combo);
    return $this->recv_new_saas_contract_combo();
  }

  public function send_new_saas_contract_combo(\ERS\TSaasContractCombo $t_combo)
  {
    $args = new \ERS\ElemeRestaurantService_new_saas_contract_combo_args();
    $args->t_combo = $t_combo;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'new_saas_contract_combo', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('new_saas_contract_combo', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_new_saas_contract_combo()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_new_saas_contract_combo_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_new_saas_contract_combo_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("new_saas_contract_combo failed: unknown result");
  }

  public function confirm_saas_combo_income($sn, $payment_type, $user_id, $rec_date, $remark, $saas_duration, $saas_price, $ranking_duration, $ranking_price)
  {
    $this->send_confirm_saas_combo_income($sn, $payment_type, $user_id, $rec_date, $remark, $saas_duration, $saas_price, $ranking_duration, $ranking_price);
    $this->recv_confirm_saas_combo_income();
  }

  public function send_confirm_saas_combo_income($sn, $payment_type, $user_id, $rec_date, $remark, $saas_duration, $saas_price, $ranking_duration, $ranking_price)
  {
    $args = new \ERS\ElemeRestaurantService_confirm_saas_combo_income_args();
    $args->sn = $sn;
    $args->payment_type = $payment_type;
    $args->user_id = $user_id;
    $args->rec_date = $rec_date;
    $args->remark = $remark;
    $args->saas_duration = $saas_duration;
    $args->saas_price = $saas_price;
    $args->ranking_duration = $ranking_duration;
    $args->ranking_price = $ranking_price;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'confirm_saas_combo_income', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('confirm_saas_combo_income', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_confirm_saas_combo_income()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_confirm_saas_combo_income_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_confirm_saas_combo_income_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    return;
  }

  public function stop_saas_contract_combo($sn, $user_id, $remark)
  {
    $this->send_stop_saas_contract_combo($sn, $user_id, $remark);
    $this->recv_stop_saas_contract_combo();
  }

  public function send_stop_saas_contract_combo($sn, $user_id, $remark)
  {
    $args = new \ERS\ElemeRestaurantService_stop_saas_contract_combo_args();
    $args->sn = $sn;
    $args->user_id = $user_id;
    $args->remark = $remark;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'stop_saas_contract_combo', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('stop_saas_contract_combo', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_stop_saas_contract_combo()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_stop_saas_contract_combo_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_stop_saas_contract_combo_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    return;
  }

  public function abandon_saas_contract_combo($sn, $user_id, $remark)
  {
    $this->send_abandon_saas_contract_combo($sn, $user_id, $remark);
    $this->recv_abandon_saas_contract_combo();
  }

  public function send_abandon_saas_contract_combo($sn, $user_id, $remark)
  {
    $args = new \ERS\ElemeRestaurantService_abandon_saas_contract_combo_args();
    $args->sn = $sn;
    $args->user_id = $user_id;
    $args->remark = $remark;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'abandon_saas_contract_combo', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('abandon_saas_contract_combo', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_abandon_saas_contract_combo()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_abandon_saas_contract_combo_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_abandon_saas_contract_combo_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    return;
  }

  public function op_quit($restaurant_id, $admin_user_id, $password)
  {
    $this->send_op_quit($restaurant_id, $admin_user_id, $password);
    $this->recv_op_quit();
  }

  public function send_op_quit($restaurant_id, $admin_user_id, $password)
  {
    $args = new \ERS\ElemeRestaurantService_op_quit_args();
    $args->restaurant_id = $restaurant_id;
    $args->admin_user_id = $admin_user_id;
    $args->password = $password;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'op_quit', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('op_quit', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_op_quit()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_op_quit_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_op_quit_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    return;
  }

  public function new_food_activity(\ERS\TFoodActivity $new_activity)
  {
    $this->send_new_food_activity($new_activity);
    return $this->recv_new_food_activity();
  }

  public function send_new_food_activity(\ERS\TFoodActivity $new_activity)
  {
    $args = new \ERS\ElemeRestaurantService_new_food_activity_args();
    $args->new_activity = $new_activity;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'new_food_activity', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('new_food_activity', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_new_food_activity()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_new_food_activity_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_new_food_activity_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("new_food_activity failed: unknown result");
  }

  public function update_food_activity($food_activity_id, \ERS\TFoodActivity $activity_struct)
  {
    $this->send_update_food_activity($food_activity_id, $activity_struct);
    $this->recv_update_food_activity();
  }

  public function send_update_food_activity($food_activity_id, \ERS\TFoodActivity $activity_struct)
  {
    $args = new \ERS\ElemeRestaurantService_update_food_activity_args();
    $args->food_activity_id = $food_activity_id;
    $args->activity_struct = $activity_struct;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'update_food_activity', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('update_food_activity', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_update_food_activity()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_update_food_activity_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_update_food_activity_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    return;
  }

  public function get_restaurant_appliable_activity_ids($restaurant_id, $activity_category_id, $activity_type)
  {
    $this->send_get_restaurant_appliable_activity_ids($restaurant_id, $activity_category_id, $activity_type);
    return $this->recv_get_restaurant_appliable_activity_ids();
  }

  public function send_get_restaurant_appliable_activity_ids($restaurant_id, $activity_category_id, $activity_type)
  {
    $args = new \ERS\ElemeRestaurantService_get_restaurant_appliable_activity_ids_args();
    $args->restaurant_id = $restaurant_id;
    $args->activity_category_id = $activity_category_id;
    $args->activity_type = $activity_type;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'get_restaurant_appliable_activity_ids', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('get_restaurant_appliable_activity_ids', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_get_restaurant_appliable_activity_ids()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_get_restaurant_appliable_activity_ids_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_get_restaurant_appliable_activity_ids_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("get_restaurant_appliable_activity_ids failed: unknown result");
  }

  public function get_restaurant_activity_status($restaurant_id, $activity_type)
  {
    $this->send_get_restaurant_activity_status($restaurant_id, $activity_type);
    return $this->recv_get_restaurant_activity_status();
  }

  public function send_get_restaurant_activity_status($restaurant_id, $activity_type)
  {
    $args = new \ERS\ElemeRestaurantService_get_restaurant_activity_status_args();
    $args->restaurant_id = $restaurant_id;
    $args->activity_type = $activity_type;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'get_restaurant_activity_status', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('get_restaurant_activity_status', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_get_restaurant_activity_status()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_get_restaurant_activity_status_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_get_restaurant_activity_status_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("get_restaurant_activity_status failed: unknown result");
  }

  public function get_food_activity_status($restaurant_id)
  {
    $this->send_get_food_activity_status($restaurant_id);
    return $this->recv_get_food_activity_status();
  }

  public function send_get_food_activity_status($restaurant_id)
  {
    $args = new \ERS\ElemeRestaurantService_get_food_activity_status_args();
    $args->restaurant_id = $restaurant_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'get_food_activity_status', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('get_food_activity_status', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_get_food_activity_status()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_get_food_activity_status_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_get_food_activity_status_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("get_food_activity_status failed: unknown result");
  }

  public function get_participatable_food_activity_ids($restaurant_id)
  {
    $this->send_get_participatable_food_activity_ids($restaurant_id);
    return $this->recv_get_participatable_food_activity_ids();
  }

  public function send_get_participatable_food_activity_ids($restaurant_id)
  {
    $args = new \ERS\ElemeRestaurantService_get_participatable_food_activity_ids_args();
    $args->restaurant_id = $restaurant_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'get_participatable_food_activity_ids', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('get_participatable_food_activity_ids', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_get_participatable_food_activity_ids()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_get_participatable_food_activity_ids_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_get_participatable_food_activity_ids_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("get_participatable_food_activity_ids failed: unknown result");
  }

  public function apply_for_activity_subsidy_contract($restaurant_id, $activity_id, $activity_category_id, $subsidy, $submit_user_id)
  {
    $this->send_apply_for_activity_subsidy_contract($restaurant_id, $activity_id, $activity_category_id, $subsidy, $submit_user_id);
    $this->recv_apply_for_activity_subsidy_contract();
  }

  public function send_apply_for_activity_subsidy_contract($restaurant_id, $activity_id, $activity_category_id, $subsidy, $submit_user_id)
  {
    $args = new \ERS\ElemeRestaurantService_apply_for_activity_subsidy_contract_args();
    $args->restaurant_id = $restaurant_id;
    $args->activity_id = $activity_id;
    $args->activity_category_id = $activity_category_id;
    $args->subsidy = $subsidy;
    $args->submit_user_id = $submit_user_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'apply_for_activity_subsidy_contract', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('apply_for_activity_subsidy_contract', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_apply_for_activity_subsidy_contract()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_apply_for_activity_subsidy_contract_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_apply_for_activity_subsidy_contract_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    return;
  }

  public function apply_for_complex_activity_subsidy_contract($restaurant_id, $activity_id, $activity_category_id, $subsidy_json, $submit_user_id)
  {
    $this->send_apply_for_complex_activity_subsidy_contract($restaurant_id, $activity_id, $activity_category_id, $subsidy_json, $submit_user_id);
    $this->recv_apply_for_complex_activity_subsidy_contract();
  }

  public function send_apply_for_complex_activity_subsidy_contract($restaurant_id, $activity_id, $activity_category_id, $subsidy_json, $submit_user_id)
  {
    $args = new \ERS\ElemeRestaurantService_apply_for_complex_activity_subsidy_contract_args();
    $args->restaurant_id = $restaurant_id;
    $args->activity_id = $activity_id;
    $args->activity_category_id = $activity_category_id;
    $args->subsidy_json = $subsidy_json;
    $args->submit_user_id = $submit_user_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'apply_for_complex_activity_subsidy_contract', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('apply_for_complex_activity_subsidy_contract', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_apply_for_complex_activity_subsidy_contract()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_apply_for_complex_activity_subsidy_contract_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_apply_for_complex_activity_subsidy_contract_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    return;
  }

  public function approve_activity_subsidy_contract($contract_ids)
  {
    $this->send_approve_activity_subsidy_contract($contract_ids);
    $this->recv_approve_activity_subsidy_contract();
  }

  public function send_approve_activity_subsidy_contract($contract_ids)
  {
    $args = new \ERS\ElemeRestaurantService_approve_activity_subsidy_contract_args();
    $args->contract_ids = $contract_ids;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'approve_activity_subsidy_contract', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('approve_activity_subsidy_contract', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_approve_activity_subsidy_contract()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_approve_activity_subsidy_contract_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_approve_activity_subsidy_contract_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    return;
  }

  public function reject_activity_subsidy_contract($contract_ids)
  {
    $this->send_reject_activity_subsidy_contract($contract_ids);
    $this->recv_reject_activity_subsidy_contract();
  }

  public function send_reject_activity_subsidy_contract($contract_ids)
  {
    $args = new \ERS\ElemeRestaurantService_reject_activity_subsidy_contract_args();
    $args->contract_ids = $contract_ids;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'reject_activity_subsidy_contract', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('reject_activity_subsidy_contract', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_reject_activity_subsidy_contract()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_reject_activity_subsidy_contract_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_reject_activity_subsidy_contract_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    return;
  }

  public function sign_activity_subsidy_contract($subsidy_contract_id, $restaurant_id)
  {
    $this->send_sign_activity_subsidy_contract($subsidy_contract_id, $restaurant_id);
    $this->recv_sign_activity_subsidy_contract();
  }

  public function send_sign_activity_subsidy_contract($subsidy_contract_id, $restaurant_id)
  {
    $args = new \ERS\ElemeRestaurantService_sign_activity_subsidy_contract_args();
    $args->subsidy_contract_id = $subsidy_contract_id;
    $args->restaurant_id = $restaurant_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'sign_activity_subsidy_contract', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('sign_activity_subsidy_contract', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_sign_activity_subsidy_contract()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_sign_activity_subsidy_contract_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_sign_activity_subsidy_contract_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    return;
  }

  public function refuse_activity_subsidy_contract($subsidy_contract_id, $restaurant_id)
  {
    $this->send_refuse_activity_subsidy_contract($subsidy_contract_id, $restaurant_id);
    $this->recv_refuse_activity_subsidy_contract();
  }

  public function send_refuse_activity_subsidy_contract($subsidy_contract_id, $restaurant_id)
  {
    $args = new \ERS\ElemeRestaurantService_refuse_activity_subsidy_contract_args();
    $args->subsidy_contract_id = $subsidy_contract_id;
    $args->restaurant_id = $restaurant_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'refuse_activity_subsidy_contract', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('refuse_activity_subsidy_contract', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_refuse_activity_subsidy_contract()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_refuse_activity_subsidy_contract_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_refuse_activity_subsidy_contract_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    return;
  }

  public function get_restaurant_activity_subsidy($restaurant_id, $activity_id, $activity_category_id)
  {
    $this->send_get_restaurant_activity_subsidy($restaurant_id, $activity_id, $activity_category_id);
    return $this->recv_get_restaurant_activity_subsidy();
  }

  public function send_get_restaurant_activity_subsidy($restaurant_id, $activity_id, $activity_category_id)
  {
    $args = new \ERS\ElemeRestaurantService_get_restaurant_activity_subsidy_args();
    $args->restaurant_id = $restaurant_id;
    $args->activity_id = $activity_id;
    $args->activity_category_id = $activity_category_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'get_restaurant_activity_subsidy', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('get_restaurant_activity_subsidy', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_get_restaurant_activity_subsidy()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_get_restaurant_activity_subsidy_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_get_restaurant_activity_subsidy_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("get_restaurant_activity_subsidy failed: unknown result");
  }

  public function get_restaurant_activity_complex_subsidy($restaurant_id, $activity_id, $activity_category_id)
  {
    $this->send_get_restaurant_activity_complex_subsidy($restaurant_id, $activity_id, $activity_category_id);
    return $this->recv_get_restaurant_activity_complex_subsidy();
  }

  public function send_get_restaurant_activity_complex_subsidy($restaurant_id, $activity_id, $activity_category_id)
  {
    $args = new \ERS\ElemeRestaurantService_get_restaurant_activity_complex_subsidy_args();
    $args->restaurant_id = $restaurant_id;
    $args->activity_id = $activity_id;
    $args->activity_category_id = $activity_category_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'get_restaurant_activity_complex_subsidy', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('get_restaurant_activity_complex_subsidy', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_get_restaurant_activity_complex_subsidy()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_get_restaurant_activity_complex_subsidy_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_get_restaurant_activity_complex_subsidy_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("get_restaurant_activity_complex_subsidy failed: unknown result");
  }

  public function get_activity_subsidy_contract($subsidy_contract_id)
  {
    $this->send_get_activity_subsidy_contract($subsidy_contract_id);
    return $this->recv_get_activity_subsidy_contract();
  }

  public function send_get_activity_subsidy_contract($subsidy_contract_id)
  {
    $args = new \ERS\ElemeRestaurantService_get_activity_subsidy_contract_args();
    $args->subsidy_contract_id = $subsidy_contract_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'get_activity_subsidy_contract', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('get_activity_subsidy_contract', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_get_activity_subsidy_contract()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_get_activity_subsidy_contract_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_get_activity_subsidy_contract_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("get_activity_subsidy_contract failed: unknown result");
  }

  public function query_activity_subsidy_contract(\ERS\TActivitySubsidyContractQuery $query_struct)
  {
    $this->send_query_activity_subsidy_contract($query_struct);
    return $this->recv_query_activity_subsidy_contract();
  }

  public function send_query_activity_subsidy_contract(\ERS\TActivitySubsidyContractQuery $query_struct)
  {
    $args = new \ERS\ElemeRestaurantService_query_activity_subsidy_contract_args();
    $args->query_struct = $query_struct;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'query_activity_subsidy_contract', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('query_activity_subsidy_contract', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_query_activity_subsidy_contract()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_query_activity_subsidy_contract_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_query_activity_subsidy_contract_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("query_activity_subsidy_contract failed: unknown result");
  }

  public function save_city($city_id, \ERS\TCity $t_city)
  {
    $this->send_save_city($city_id, $t_city);
    return $this->recv_save_city();
  }

  public function send_save_city($city_id, \ERS\TCity $t_city)
  {
    $args = new \ERS\ElemeRestaurantService_save_city_args();
    $args->city_id = $city_id;
    $args->t_city = $t_city;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'save_city', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('save_city', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_save_city()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_save_city_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_save_city_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("save_city failed: unknown result");
  }

  public function save_area($area_id, \ERS\TArea $t_area)
  {
    $this->send_save_area($area_id, $t_area);
    return $this->recv_save_area();
  }

  public function send_save_area($area_id, \ERS\TArea $t_area)
  {
    $args = new \ERS\ElemeRestaurantService_save_area_args();
    $args->area_id = $area_id;
    $args->t_area = $t_area;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'save_area', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('save_area', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_save_area()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_save_area_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_save_area_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("save_area failed: unknown result");
  }

  public function delete_area($area_id)
  {
    $this->send_delete_area($area_id);
    $this->recv_delete_area();
  }

  public function send_delete_area($area_id)
  {
    $args = new \ERS\ElemeRestaurantService_delete_area_args();
    $args->area_id = $area_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'delete_area', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('delete_area', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_delete_area()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_delete_area_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_delete_area_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    return;
  }

  public function save_region($region_id, \ERS\TRegion $t_region)
  {
    $this->send_save_region($region_id, $t_region);
    return $this->recv_save_region();
  }

  public function send_save_region($region_id, \ERS\TRegion $t_region)
  {
    $args = new \ERS\ElemeRestaurantService_save_region_args();
    $args->region_id = $region_id;
    $args->t_region = $t_region;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'save_region', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('save_region', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_save_region()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_save_region_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_save_region_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("save_region failed: unknown result");
  }

  public function remove_region($region_id, $user_id)
  {
    $this->send_remove_region($region_id, $user_id);
    $this->recv_remove_region();
  }

  public function send_remove_region($region_id, $user_id)
  {
    $args = new \ERS\ElemeRestaurantService_remove_region_args();
    $args->region_id = $region_id;
    $args->user_id = $user_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'remove_region', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('remove_region', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_remove_region()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_remove_region_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_remove_region_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    return;
  }

  public function query_region(\ERS\TRegionQuery $query_struct)
  {
    $this->send_query_region($query_struct);
    return $this->recv_query_region();
  }

  public function send_query_region(\ERS\TRegionQuery $query_struct)
  {
    $args = new \ERS\ElemeRestaurantService_query_region_args();
    $args->query_struct = $query_struct;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'query_region', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('query_region', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_query_region()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_query_region_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_query_region_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("query_region failed: unknown result");
  }

  public function query_restaurant_in_region(\ERS\TRestaurantInRegionQuery $query_struct)
  {
    $this->send_query_restaurant_in_region($query_struct);
    return $this->recv_query_restaurant_in_region();
  }

  public function send_query_restaurant_in_region(\ERS\TRestaurantInRegionQuery $query_struct)
  {
    $args = new \ERS\ElemeRestaurantService_query_restaurant_in_region_args();
    $args->query_struct = $query_struct;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'query_restaurant_in_region', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('query_restaurant_in_region', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_query_restaurant_in_region()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_query_restaurant_in_region_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_query_restaurant_in_region_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("query_restaurant_in_region failed: unknown result");
  }

  public function save_entry($entry_id, \ERS\TEntry $t_entry)
  {
    $this->send_save_entry($entry_id, $t_entry);
    return $this->recv_save_entry();
  }

  public function send_save_entry($entry_id, \ERS\TEntry $t_entry)
  {
    $args = new \ERS\ElemeRestaurantService_save_entry_args();
    $args->entry_id = $entry_id;
    $args->t_entry = $t_entry;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'save_entry', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('save_entry', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_save_entry()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_save_entry_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_save_entry_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("save_entry failed: unknown result");
  }

  public function walle_count_entry(\ERS\TWalleEntryQuery $query_struct)
  {
    $this->send_walle_count_entry($query_struct);
    return $this->recv_walle_count_entry();
  }

  public function send_walle_count_entry(\ERS\TWalleEntryQuery $query_struct)
  {
    $args = new \ERS\ElemeRestaurantService_walle_count_entry_args();
    $args->query_struct = $query_struct;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'walle_count_entry', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('walle_count_entry', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_walle_count_entry()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_walle_count_entry_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_walle_count_entry_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("walle_count_entry failed: unknown result");
  }

  public function walle_query_entry(\ERS\TWalleEntryQuery $query_struct)
  {
    $this->send_walle_query_entry($query_struct);
    return $this->recv_walle_query_entry();
  }

  public function send_walle_query_entry(\ERS\TWalleEntryQuery $query_struct)
  {
    $args = new \ERS\ElemeRestaurantService_walle_query_entry_args();
    $args->query_struct = $query_struct;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'walle_query_entry', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('walle_query_entry', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_walle_query_entry()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_walle_query_entry_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_walle_query_entry_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("walle_query_entry failed: unknown result");
  }

  public function walle_get_kpi_stats(\ERS\TWalleKPIFilter $filter_struct)
  {
    $this->send_walle_get_kpi_stats($filter_struct);
    return $this->recv_walle_get_kpi_stats();
  }

  public function send_walle_get_kpi_stats(\ERS\TWalleKPIFilter $filter_struct)
  {
    $args = new \ERS\ElemeRestaurantService_walle_get_kpi_stats_args();
    $args->filter_struct = $filter_struct;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'walle_get_kpi_stats', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('walle_get_kpi_stats', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_walle_get_kpi_stats()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_walle_get_kpi_stats_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_walle_get_kpi_stats_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("walle_get_kpi_stats failed: unknown result");
  }

  public function walle_count_online_payment_apply(\ERS\TOnlinePaymentApplyQuery $query_struct)
  {
    $this->send_walle_count_online_payment_apply($query_struct);
    return $this->recv_walle_count_online_payment_apply();
  }

  public function send_walle_count_online_payment_apply(\ERS\TOnlinePaymentApplyQuery $query_struct)
  {
    $args = new \ERS\ElemeRestaurantService_walle_count_online_payment_apply_args();
    $args->query_struct = $query_struct;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'walle_count_online_payment_apply', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('walle_count_online_payment_apply', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_walle_count_online_payment_apply()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_walle_count_online_payment_apply_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_walle_count_online_payment_apply_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("walle_count_online_payment_apply failed: unknown result");
  }

  public function walle_query_online_payment_apply(\ERS\TOnlinePaymentApplyQuery $query_struct)
  {
    $this->send_walle_query_online_payment_apply($query_struct);
    return $this->recv_walle_query_online_payment_apply();
  }

  public function send_walle_query_online_payment_apply(\ERS\TOnlinePaymentApplyQuery $query_struct)
  {
    $args = new \ERS\ElemeRestaurantService_walle_query_online_payment_apply_args();
    $args->query_struct = $query_struct;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'walle_query_online_payment_apply', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('walle_query_online_payment_apply', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_walle_query_online_payment_apply()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_walle_query_online_payment_apply_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_walle_query_online_payment_apply_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("walle_query_online_payment_apply failed: unknown result");
  }

  public function walle_new_online_payment_apply($user_bankcard_id, $restaurant_id)
  {
    $this->send_walle_new_online_payment_apply($user_bankcard_id, $restaurant_id);
    return $this->recv_walle_new_online_payment_apply();
  }

  public function send_walle_new_online_payment_apply($user_bankcard_id, $restaurant_id)
  {
    $args = new \ERS\ElemeRestaurantService_walle_new_online_payment_apply_args();
    $args->user_bankcard_id = $user_bankcard_id;
    $args->restaurant_id = $restaurant_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'walle_new_online_payment_apply', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('walle_new_online_payment_apply', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_walle_new_online_payment_apply()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_walle_new_online_payment_apply_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_walle_new_online_payment_apply_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("walle_new_online_payment_apply failed: unknown result");
  }

  public function walle_online_payment_approve($record_id)
  {
    $this->send_walle_online_payment_approve($record_id);
    $this->recv_walle_online_payment_approve();
  }

  public function send_walle_online_payment_approve($record_id)
  {
    $args = new \ERS\ElemeRestaurantService_walle_online_payment_approve_args();
    $args->record_id = $record_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'walle_online_payment_approve', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('walle_online_payment_approve', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_walle_online_payment_approve()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_walle_online_payment_approve_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_walle_online_payment_approve_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    return;
  }

  public function walle_online_payment_overrule($record_id)
  {
    $this->send_walle_online_payment_overrule($record_id);
    $this->recv_walle_online_payment_overrule();
  }

  public function send_walle_online_payment_overrule($record_id)
  {
    $args = new \ERS\ElemeRestaurantService_walle_online_payment_overrule_args();
    $args->record_id = $record_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'walle_online_payment_overrule', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('walle_online_payment_overrule', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_walle_online_payment_overrule()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_walle_online_payment_overrule_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_walle_online_payment_overrule_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    return;
  }

  public function fast_online_payment_approve($restaurant_id)
  {
    $this->send_fast_online_payment_approve($restaurant_id);
    $this->recv_fast_online_payment_approve();
  }

  public function send_fast_online_payment_approve($restaurant_id)
  {
    $args = new \ERS\ElemeRestaurantService_fast_online_payment_approve_args();
    $args->restaurant_id = $restaurant_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'fast_online_payment_approve', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('fast_online_payment_approve', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_fast_online_payment_approve()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_fast_online_payment_approve_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_fast_online_payment_approve_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    return;
  }

  public function save_district($district_id, \ERS\TDistrict $t_district)
  {
    $this->send_save_district($district_id, $t_district);
    return $this->recv_save_district();
  }

  public function send_save_district($district_id, \ERS\TDistrict $t_district)
  {
    $args = new \ERS\ElemeRestaurantService_save_district_args();
    $args->district_id = $district_id;
    $args->t_district = $t_district;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'save_district', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('save_district', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_save_district()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_save_district_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_save_district_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("save_district failed: unknown result");
  }

  public function save_zone($zone_id, \ERS\TZone $t_zone)
  {
    $this->send_save_zone($zone_id, $t_zone);
    return $this->recv_save_zone();
  }

  public function send_save_zone($zone_id, \ERS\TZone $t_zone)
  {
    $args = new \ERS\ElemeRestaurantService_save_zone_args();
    $args->zone_id = $zone_id;
    $args->t_zone = $t_zone;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'save_zone', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('save_zone', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_save_zone()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_save_zone_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_save_zone_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("save_zone failed: unknown result");
  }

  public function count_restaurant_in_region(\ERS\TRestaurantInRegionQuery $query_struct)
  {
    $this->send_count_restaurant_in_region($query_struct);
    return $this->recv_count_restaurant_in_region();
  }

  public function send_count_restaurant_in_region(\ERS\TRestaurantInRegionQuery $query_struct)
  {
    $args = new \ERS\ElemeRestaurantService_count_restaurant_in_region_args();
    $args->query_struct = $query_struct;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'count_restaurant_in_region', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('count_restaurant_in_region', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_count_restaurant_in_region()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_count_restaurant_in_region_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_count_restaurant_in_region_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("count_restaurant_in_region failed: unknown result");
  }

  public function query_device_restaurant(\ERS\TDeviceRestaurantQuery $query_struct)
  {
    $this->send_query_device_restaurant($query_struct);
    return $this->recv_query_device_restaurant();
  }

  public function send_query_device_restaurant(\ERS\TDeviceRestaurantQuery $query_struct)
  {
    $args = new \ERS\ElemeRestaurantService_query_device_restaurant_args();
    $args->query_struct = $query_struct;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'query_device_restaurant', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('query_device_restaurant', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_query_device_restaurant()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_query_device_restaurant_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_query_device_restaurant_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("query_device_restaurant failed: unknown result");
  }

  public function send_contract_notification($restaurant_ids)
  {
    $this->send_send_contract_notification($restaurant_ids);
    $this->recv_send_contract_notification();
  }

  public function send_send_contract_notification($restaurant_ids)
  {
    $args = new \ERS\ElemeRestaurantService_send_contract_notification_args();
    $args->restaurant_ids = $restaurant_ids;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'send_contract_notification', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('send_contract_notification', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_send_contract_notification()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_send_contract_notification_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_send_contract_notification_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    return;
  }

  public function new_device_restaurant($restaurant_id, $device_id, $device_type, $eleme_guid, $version)
  {
    $this->send_new_device_restaurant($restaurant_id, $device_id, $device_type, $eleme_guid, $version);
    return $this->recv_new_device_restaurant();
  }

  public function send_new_device_restaurant($restaurant_id, $device_id, $device_type, $eleme_guid, $version)
  {
    $args = new \ERS\ElemeRestaurantService_new_device_restaurant_args();
    $args->restaurant_id = $restaurant_id;
    $args->device_id = $device_id;
    $args->device_type = $device_type;
    $args->eleme_guid = $eleme_guid;
    $args->version = $version;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'new_device_restaurant', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('new_device_restaurant', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_new_device_restaurant()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_new_device_restaurant_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_new_device_restaurant_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("new_device_restaurant failed: unknown result");
  }

  public function remove_device_restaurant($id)
  {
    $this->send_remove_device_restaurant($id);
    $this->recv_remove_device_restaurant();
  }

  public function send_remove_device_restaurant($id)
  {
    $args = new \ERS\ElemeRestaurantService_remove_device_restaurant_args();
    $args->id = $id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'remove_device_restaurant', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('remove_device_restaurant', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_remove_device_restaurant()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_remove_device_restaurant_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_remove_device_restaurant_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    return;
  }

  public function walle_get_saas_stats_count(\ERS\TWalleFilter $filter_struct, $group_by)
  {
    $this->send_walle_get_saas_stats_count($filter_struct, $group_by);
    return $this->recv_walle_get_saas_stats_count();
  }

  public function send_walle_get_saas_stats_count(\ERS\TWalleFilter $filter_struct, $group_by)
  {
    $args = new \ERS\ElemeRestaurantService_walle_get_saas_stats_count_args();
    $args->filter_struct = $filter_struct;
    $args->group_by = $group_by;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'walle_get_saas_stats_count', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('walle_get_saas_stats_count', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_walle_get_saas_stats_count()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_walle_get_saas_stats_count_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_walle_get_saas_stats_count_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("walle_get_saas_stats_count failed: unknown result");
  }

  public function walle_query_restaurant(\ERS\TRestaurantQuery $query_struct)
  {
    $this->send_walle_query_restaurant($query_struct);
    return $this->recv_walle_query_restaurant();
  }

  public function send_walle_query_restaurant(\ERS\TRestaurantQuery $query_struct)
  {
    $args = new \ERS\ElemeRestaurantService_walle_query_restaurant_args();
    $args->query_struct = $query_struct;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'walle_query_restaurant', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('walle_query_restaurant', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_walle_query_restaurant()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_walle_query_restaurant_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_walle_query_restaurant_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("walle_query_restaurant failed: unknown result");
  }

  public function walle_get_saas_stats(\ERS\TWalleFilter $filter_struct, $group_by, $sort_key, $sort_type, $offset, $limit)
  {
    $this->send_walle_get_saas_stats($filter_struct, $group_by, $sort_key, $sort_type, $offset, $limit);
    return $this->recv_walle_get_saas_stats();
  }

  public function send_walle_get_saas_stats(\ERS\TWalleFilter $filter_struct, $group_by, $sort_key, $sort_type, $offset, $limit)
  {
    $args = new \ERS\ElemeRestaurantService_walle_get_saas_stats_args();
    $args->filter_struct = $filter_struct;
    $args->group_by = $group_by;
    $args->sort_key = $sort_key;
    $args->sort_type = $sort_type;
    $args->offset = $offset;
    $args->limit = $limit;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'walle_get_saas_stats', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('walle_get_saas_stats', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_walle_get_saas_stats()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_walle_get_saas_stats_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_walle_get_saas_stats_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("walle_get_saas_stats failed: unknown result");
  }

  public function walle_get_activity_list(\ERS\TActivityQuery $query_struct)
  {
    $this->send_walle_get_activity_list($query_struct);
    return $this->recv_walle_get_activity_list();
  }

  public function send_walle_get_activity_list(\ERS\TActivityQuery $query_struct)
  {
    $args = new \ERS\ElemeRestaurantService_walle_get_activity_list_args();
    $args->query_struct = $query_struct;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'walle_get_activity_list', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('walle_get_activity_list', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_walle_get_activity_list()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_walle_get_activity_list_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_walle_get_activity_list_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("walle_get_activity_list failed: unknown result");
  }

  public function walle_get_activity_list_by_ids($activity_ids)
  {
    $this->send_walle_get_activity_list_by_ids($activity_ids);
    return $this->recv_walle_get_activity_list_by_ids();
  }

  public function send_walle_get_activity_list_by_ids($activity_ids)
  {
    $args = new \ERS\ElemeRestaurantService_walle_get_activity_list_by_ids_args();
    $args->activity_ids = $activity_ids;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'walle_get_activity_list_by_ids', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('walle_get_activity_list_by_ids', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_walle_get_activity_list_by_ids()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_walle_get_activity_list_by_ids_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_walle_get_activity_list_by_ids_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("walle_get_activity_list_by_ids failed: unknown result");
  }

  public function walle_get_logo_list(\ERS\TLogoQuery $query_struct)
  {
    $this->send_walle_get_logo_list($query_struct);
    return $this->recv_walle_get_logo_list();
  }

  public function send_walle_get_logo_list(\ERS\TLogoQuery $query_struct)
  {
    $args = new \ERS\ElemeRestaurantService_walle_get_logo_list_args();
    $args->query_struct = $query_struct;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'walle_get_logo_list', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('walle_get_logo_list', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_walle_get_logo_list()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_walle_get_logo_list_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_walle_get_logo_list_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("walle_get_logo_list failed: unknown result");
  }

  public function walle_get_restaurant_list(\ERS\TRestaurantQuery $query_struct)
  {
    $this->send_walle_get_restaurant_list($query_struct);
    return $this->recv_walle_get_restaurant_list();
  }

  public function send_walle_get_restaurant_list(\ERS\TRestaurantQuery $query_struct)
  {
    $args = new \ERS\ElemeRestaurantService_walle_get_restaurant_list_args();
    $args->query_struct = $query_struct;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'walle_get_restaurant_list', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('walle_get_restaurant_list', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_walle_get_restaurant_list()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_walle_get_restaurant_list_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_walle_get_restaurant_list_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("walle_get_restaurant_list failed: unknown result");
  }

  public function walle_get_restaurant_change_records($restaurant_id, $limit)
  {
    $this->send_walle_get_restaurant_change_records($restaurant_id, $limit);
    return $this->recv_walle_get_restaurant_change_records();
  }

  public function send_walle_get_restaurant_change_records($restaurant_id, $limit)
  {
    $args = new \ERS\ElemeRestaurantService_walle_get_restaurant_change_records_args();
    $args->restaurant_id = $restaurant_id;
    $args->limit = $limit;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'walle_get_restaurant_change_records', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('walle_get_restaurant_change_records', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_walle_get_restaurant_change_records()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_walle_get_restaurant_change_records_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_walle_get_restaurant_change_records_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("walle_get_restaurant_change_records failed: unknown result");
  }

  public function walle_get_op_apply_restaurants($restaurant_ids, $regions_ids, $keyword)
  {
    $this->send_walle_get_op_apply_restaurants($restaurant_ids, $regions_ids, $keyword);
    return $this->recv_walle_get_op_apply_restaurants();
  }

  public function send_walle_get_op_apply_restaurants($restaurant_ids, $regions_ids, $keyword)
  {
    $args = new \ERS\ElemeRestaurantService_walle_get_op_apply_restaurants_args();
    $args->restaurant_ids = $restaurant_ids;
    $args->regions_ids = $regions_ids;
    $args->keyword = $keyword;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'walle_get_op_apply_restaurants', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('walle_get_op_apply_restaurants', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_walle_get_op_apply_restaurants()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_walle_get_op_apply_restaurants_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_walle_get_op_apply_restaurants_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("walle_get_op_apply_restaurants failed: unknown result");
  }

  public function walle_get_restaurant_list_by_ids($restaurant_ids)
  {
    $this->send_walle_get_restaurant_list_by_ids($restaurant_ids);
    return $this->recv_walle_get_restaurant_list_by_ids();
  }

  public function send_walle_get_restaurant_list_by_ids($restaurant_ids)
  {
    $args = new \ERS\ElemeRestaurantService_walle_get_restaurant_list_by_ids_args();
    $args->restaurant_ids = $restaurant_ids;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'walle_get_restaurant_list_by_ids', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('walle_get_restaurant_list_by_ids', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_walle_get_restaurant_list_by_ids()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_walle_get_restaurant_list_by_ids_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_walle_get_restaurant_list_by_ids_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("walle_get_restaurant_list_by_ids failed: unknown result");
  }

  public function walle_save_friend_link($friend_link_id, \ERS\TFriendLink $t_struct)
  {
    $this->send_walle_save_friend_link($friend_link_id, $t_struct);
    return $this->recv_walle_save_friend_link();
  }

  public function send_walle_save_friend_link($friend_link_id, \ERS\TFriendLink $t_struct)
  {
    $args = new \ERS\ElemeRestaurantService_walle_save_friend_link_args();
    $args->friend_link_id = $friend_link_id;
    $args->t_struct = $t_struct;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'walle_save_friend_link', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('walle_save_friend_link', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_walle_save_friend_link()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_walle_save_friend_link_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_walle_save_friend_link_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("walle_save_friend_link failed: unknown result");
  }

  public function walle_remove_friend_link($friend_link_id)
  {
    $this->send_walle_remove_friend_link($friend_link_id);
    $this->recv_walle_remove_friend_link();
  }

  public function send_walle_remove_friend_link($friend_link_id)
  {
    $args = new \ERS\ElemeRestaurantService_walle_remove_friend_link_args();
    $args->friend_link_id = $friend_link_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'walle_remove_friend_link', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('walle_remove_friend_link', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_walle_remove_friend_link()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_walle_remove_friend_link_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_walle_remove_friend_link_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    return;
  }

  public function walle_count_friend_link(\ERS\TFriendLinkQuery $query_struct)
  {
    $this->send_walle_count_friend_link($query_struct);
    return $this->recv_walle_count_friend_link();
  }

  public function send_walle_count_friend_link(\ERS\TFriendLinkQuery $query_struct)
  {
    $args = new \ERS\ElemeRestaurantService_walle_count_friend_link_args();
    $args->query_struct = $query_struct;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'walle_count_friend_link', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('walle_count_friend_link', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_walle_count_friend_link()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_walle_count_friend_link_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_walle_count_friend_link_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("walle_count_friend_link failed: unknown result");
  }

  public function walle_query_friend_link(\ERS\TFriendLinkQuery $query_struct)
  {
    $this->send_walle_query_friend_link($query_struct);
    return $this->recv_walle_query_friend_link();
  }

  public function send_walle_query_friend_link(\ERS\TFriendLinkQuery $query_struct)
  {
    $args = new \ERS\ElemeRestaurantService_walle_query_friend_link_args();
    $args->query_struct = $query_struct;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'walle_query_friend_link', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('walle_query_friend_link', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_walle_query_friend_link()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_walle_query_friend_link_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_walle_query_friend_link_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("walle_query_friend_link failed: unknown result");
  }

  public function walle_save_quick_message($quick_message_id, \ERS\TQuickMessage $t_struct)
  {
    $this->send_walle_save_quick_message($quick_message_id, $t_struct);
    return $this->recv_walle_save_quick_message();
  }

  public function send_walle_save_quick_message($quick_message_id, \ERS\TQuickMessage $t_struct)
  {
    $args = new \ERS\ElemeRestaurantService_walle_save_quick_message_args();
    $args->quick_message_id = $quick_message_id;
    $args->t_struct = $t_struct;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'walle_save_quick_message', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('walle_save_quick_message', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_walle_save_quick_message()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_walle_save_quick_message_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_walle_save_quick_message_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("walle_save_quick_message failed: unknown result");
  }

  public function walle_remove_quick_message($quick_message_id)
  {
    $this->send_walle_remove_quick_message($quick_message_id);
    $this->recv_walle_remove_quick_message();
  }

  public function send_walle_remove_quick_message($quick_message_id)
  {
    $args = new \ERS\ElemeRestaurantService_walle_remove_quick_message_args();
    $args->quick_message_id = $quick_message_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'walle_remove_quick_message', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('walle_remove_quick_message', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_walle_remove_quick_message()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_walle_remove_quick_message_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_walle_remove_quick_message_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    return;
  }

  public function walle_count_quick_message(\ERS\TQuickMessageQuery $query_struct)
  {
    $this->send_walle_count_quick_message($query_struct);
    return $this->recv_walle_count_quick_message();
  }

  public function send_walle_count_quick_message(\ERS\TQuickMessageQuery $query_struct)
  {
    $args = new \ERS\ElemeRestaurantService_walle_count_quick_message_args();
    $args->query_struct = $query_struct;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'walle_count_quick_message', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('walle_count_quick_message', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_walle_count_quick_message()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_walle_count_quick_message_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_walle_count_quick_message_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("walle_count_quick_message failed: unknown result");
  }

  public function walle_query_quick_message(\ERS\TQuickMessageQuery $query_struct)
  {
    $this->send_walle_query_quick_message($query_struct);
    return $this->recv_walle_query_quick_message();
  }

  public function send_walle_query_quick_message(\ERS\TQuickMessageQuery $query_struct)
  {
    $args = new \ERS\ElemeRestaurantService_walle_query_quick_message_args();
    $args->query_struct = $query_struct;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'walle_query_quick_message', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('walle_query_quick_message', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_walle_query_quick_message()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_walle_query_quick_message_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_walle_query_quick_message_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("walle_query_quick_message failed: unknown result");
  }

  public function walle_count_comment_reply(\ERS\TWalleCommentReplyQuery $query_struct)
  {
    $this->send_walle_count_comment_reply($query_struct);
    return $this->recv_walle_count_comment_reply();
  }

  public function send_walle_count_comment_reply(\ERS\TWalleCommentReplyQuery $query_struct)
  {
    $args = new \ERS\ElemeRestaurantService_walle_count_comment_reply_args();
    $args->query_struct = $query_struct;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'walle_count_comment_reply', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('walle_count_comment_reply', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_walle_count_comment_reply()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_walle_count_comment_reply_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_walle_count_comment_reply_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("walle_count_comment_reply failed: unknown result");
  }

  public function walle_query_comment_reply(\ERS\TWalleCommentReplyQuery $query_struct)
  {
    $this->send_walle_query_comment_reply($query_struct);
    return $this->recv_walle_query_comment_reply();
  }

  public function send_walle_query_comment_reply(\ERS\TWalleCommentReplyQuery $query_struct)
  {
    $args = new \ERS\ElemeRestaurantService_walle_query_comment_reply_args();
    $args->query_struct = $query_struct;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'walle_query_comment_reply', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('walle_query_comment_reply', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_walle_query_comment_reply()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_walle_query_comment_reply_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_walle_query_comment_reply_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("walle_query_comment_reply failed: unknown result");
  }

  public function walle_set_comment_reply_valid($reply_id, $is_valid)
  {
    $this->send_walle_set_comment_reply_valid($reply_id, $is_valid);
    $this->recv_walle_set_comment_reply_valid();
  }

  public function send_walle_set_comment_reply_valid($reply_id, $is_valid)
  {
    $args = new \ERS\ElemeRestaurantService_walle_set_comment_reply_valid_args();
    $args->reply_id = $reply_id;
    $args->is_valid = $is_valid;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'walle_set_comment_reply_valid', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('walle_set_comment_reply_valid', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_walle_set_comment_reply_valid()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_walle_set_comment_reply_valid_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_walle_set_comment_reply_valid_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    return;
  }

  public function walle_count_restaurant_comment(\ERS\TWalleRestaurantCommentQuery $query_struct)
  {
    $this->send_walle_count_restaurant_comment($query_struct);
    return $this->recv_walle_count_restaurant_comment();
  }

  public function send_walle_count_restaurant_comment(\ERS\TWalleRestaurantCommentQuery $query_struct)
  {
    $args = new \ERS\ElemeRestaurantService_walle_count_restaurant_comment_args();
    $args->query_struct = $query_struct;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'walle_count_restaurant_comment', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('walle_count_restaurant_comment', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_walle_count_restaurant_comment()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_walle_count_restaurant_comment_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_walle_count_restaurant_comment_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("walle_count_restaurant_comment failed: unknown result");
  }

  public function walle_query_restaurant_comment(\ERS\TWalleRestaurantCommentQuery $query_struct)
  {
    $this->send_walle_query_restaurant_comment($query_struct);
    return $this->recv_walle_query_restaurant_comment();
  }

  public function send_walle_query_restaurant_comment(\ERS\TWalleRestaurantCommentQuery $query_struct)
  {
    $args = new \ERS\ElemeRestaurantService_walle_query_restaurant_comment_args();
    $args->query_struct = $query_struct;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'walle_query_restaurant_comment', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('walle_query_restaurant_comment', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_walle_query_restaurant_comment()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_walle_query_restaurant_comment_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_walle_query_restaurant_comment_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("walle_query_restaurant_comment failed: unknown result");
  }

  public function walle_set_restaurant_comment_valid($comment_id, $is_valid)
  {
    $this->send_walle_set_restaurant_comment_valid($comment_id, $is_valid);
    $this->recv_walle_set_restaurant_comment_valid();
  }

  public function send_walle_set_restaurant_comment_valid($comment_id, $is_valid)
  {
    $args = new \ERS\ElemeRestaurantService_walle_set_restaurant_comment_valid_args();
    $args->comment_id = $comment_id;
    $args->is_valid = $is_valid;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'walle_set_restaurant_comment_valid', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('walle_set_restaurant_comment_valid', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_walle_set_restaurant_comment_valid()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_walle_set_restaurant_comment_valid_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_walle_set_restaurant_comment_valid_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    return;
  }

  public function walle_reply_restaurant_comment($comment_id, $user_id, $content)
  {
    $this->send_walle_reply_restaurant_comment($comment_id, $user_id, $content);
    $this->recv_walle_reply_restaurant_comment();
  }

  public function send_walle_reply_restaurant_comment($comment_id, $user_id, $content)
  {
    $args = new \ERS\ElemeRestaurantService_walle_reply_restaurant_comment_args();
    $args->comment_id = $comment_id;
    $args->user_id = $user_id;
    $args->content = $content;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'walle_reply_restaurant_comment', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('walle_reply_restaurant_comment', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_walle_reply_restaurant_comment()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_walle_reply_restaurant_comment_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_walle_reply_restaurant_comment_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    return;
  }

  public function mset_restaurant_open_apply_status($ids, $status)
  {
    $this->send_mset_restaurant_open_apply_status($ids, $status);
    $this->recv_mset_restaurant_open_apply_status();
  }

  public function send_mset_restaurant_open_apply_status($ids, $status)
  {
    $args = new \ERS\ElemeRestaurantService_mset_restaurant_open_apply_status_args();
    $args->ids = $ids;
    $args->status = $status;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'mset_restaurant_open_apply_status', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('mset_restaurant_open_apply_status', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_mset_restaurant_open_apply_status()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_mset_restaurant_open_apply_status_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_mset_restaurant_open_apply_status_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    return;
  }

  public function napos_restaurant_promotion_save($promotion_id, \ERS\TRestaurantPromotion $t_promotion)
  {
    $this->send_napos_restaurant_promotion_save($promotion_id, $t_promotion);
    $this->recv_napos_restaurant_promotion_save();
  }

  public function send_napos_restaurant_promotion_save($promotion_id, \ERS\TRestaurantPromotion $t_promotion)
  {
    $args = new \ERS\ElemeRestaurantService_napos_restaurant_promotion_save_args();
    $args->promotion_id = $promotion_id;
    $args->t_promotion = $t_promotion;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'napos_restaurant_promotion_save', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('napos_restaurant_promotion_save', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_napos_restaurant_promotion_save()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_napos_restaurant_promotion_save_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_napos_restaurant_promotion_save_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    return;
  }

  public function napos_count_comments(\ERS\TNaposCommentQuery $query_struct)
  {
    $this->send_napos_count_comments($query_struct);
    return $this->recv_napos_count_comments();
  }

  public function send_napos_count_comments(\ERS\TNaposCommentQuery $query_struct)
  {
    $args = new \ERS\ElemeRestaurantService_napos_count_comments_args();
    $args->query_struct = $query_struct;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'napos_count_comments', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('napos_count_comments', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_napos_count_comments()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_napos_count_comments_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_napos_count_comments_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("napos_count_comments failed: unknown result");
  }

  public function napos_query_comments(\ERS\TNaposCommentQuery $query_struct)
  {
    $this->send_napos_query_comments($query_struct);
    return $this->recv_napos_query_comments();
  }

  public function send_napos_query_comments(\ERS\TNaposCommentQuery $query_struct)
  {
    $args = new \ERS\ElemeRestaurantService_napos_query_comments_args();
    $args->query_struct = $query_struct;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'napos_query_comments', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('napos_query_comments', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_napos_query_comments()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_napos_query_comments_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_napos_query_comments_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("napos_query_comments failed: unknown result");
  }

  public function napos_get_message($message_id)
  {
    $this->send_napos_get_message($message_id);
    return $this->recv_napos_get_message();
  }

  public function send_napos_get_message($message_id)
  {
    $args = new \ERS\ElemeRestaurantService_napos_get_message_args();
    $args->message_id = $message_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'napos_get_message', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('napos_get_message', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_napos_get_message()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_napos_get_message_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_napos_get_message_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("napos_get_message failed: unknown result");
  }

  public function napos_mget_message($restaurant_id, $offset, $limit)
  {
    $this->send_napos_mget_message($restaurant_id, $offset, $limit);
    return $this->recv_napos_mget_message();
  }

  public function send_napos_mget_message($restaurant_id, $offset, $limit)
  {
    $args = new \ERS\ElemeRestaurantService_napos_mget_message_args();
    $args->restaurant_id = $restaurant_id;
    $args->offset = $offset;
    $args->limit = $limit;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'napos_mget_message', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('napos_mget_message', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_napos_mget_message()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_napos_mget_message_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_napos_mget_message_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("napos_mget_message failed: unknown result");
  }

  public function napos_count_unread_message($restaurant_id)
  {
    $this->send_napos_count_unread_message($restaurant_id);
    return $this->recv_napos_count_unread_message();
  }

  public function send_napos_count_unread_message($restaurant_id)
  {
    $args = new \ERS\ElemeRestaurantService_napos_count_unread_message_args();
    $args->restaurant_id = $restaurant_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'napos_count_unread_message', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('napos_count_unread_message', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_napos_count_unread_message()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_napos_count_unread_message_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_napos_count_unread_message_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("napos_count_unread_message failed: unknown result");
  }

  public function napos_mget_unread_message($restaurant_id)
  {
    $this->send_napos_mget_unread_message($restaurant_id);
    return $this->recv_napos_mget_unread_message();
  }

  public function send_napos_mget_unread_message($restaurant_id)
  {
    $args = new \ERS\ElemeRestaurantService_napos_mget_unread_message_args();
    $args->restaurant_id = $restaurant_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'napos_mget_unread_message', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('napos_mget_unread_message', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_napos_mget_unread_message()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_napos_mget_unread_message_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_napos_mget_unread_message_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("napos_mget_unread_message failed: unknown result");
  }

  public function napos_read_message($message_id)
  {
    $this->send_napos_read_message($message_id);
    $this->recv_napos_read_message();
  }

  public function send_napos_read_message($message_id)
  {
    $args = new \ERS\ElemeRestaurantService_napos_read_message_args();
    $args->message_id = $message_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'napos_read_message', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('napos_read_message', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_napos_read_message()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_napos_read_message_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_napos_read_message_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    return;
  }

  public function mset_operation_remind_status($or_ids, $status)
  {
    $this->send_mset_operation_remind_status($or_ids, $status);
    $this->recv_mset_operation_remind_status();
  }

  public function send_mset_operation_remind_status($or_ids, $status)
  {
    $args = new \ERS\ElemeRestaurantService_mset_operation_remind_status_args();
    $args->or_ids = $or_ids;
    $args->status = $status;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'mset_operation_remind_status', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('mset_operation_remind_status', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_mset_operation_remind_status()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_mset_operation_remind_status_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_mset_operation_remind_status_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    return;
  }

  public function openapi_get_new_restaurant_ids($city_id, $start_time, $end_time)
  {
    $this->send_openapi_get_new_restaurant_ids($city_id, $start_time, $end_time);
    return $this->recv_openapi_get_new_restaurant_ids();
  }

  public function send_openapi_get_new_restaurant_ids($city_id, $start_time, $end_time)
  {
    $args = new \ERS\ElemeRestaurantService_openapi_get_new_restaurant_ids_args();
    $args->city_id = $city_id;
    $args->start_time = $start_time;
    $args->end_time = $end_time;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'openapi_get_new_restaurant_ids', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('openapi_get_new_restaurant_ids', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_openapi_get_new_restaurant_ids()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_openapi_get_new_restaurant_ids_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_openapi_get_new_restaurant_ids_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("openapi_get_new_restaurant_ids failed: unknown result");
  }

  public function revert_decr_foods_stock($order_id, $food_stock_map)
  {
    $this->send_revert_decr_foods_stock($order_id, $food_stock_map);
    $this->recv_revert_decr_foods_stock();
  }

  public function send_revert_decr_foods_stock($order_id, $food_stock_map)
  {
    $args = new \ERS\ElemeRestaurantService_revert_decr_foods_stock_args();
    $args->order_id = $order_id;
    $args->food_stock_map = $food_stock_map;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'revert_decr_foods_stock', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('revert_decr_foods_stock', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_revert_decr_foods_stock()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_revert_decr_foods_stock_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_revert_decr_foods_stock_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    return;
  }

  public function process_saas_status_touch($order_id)
  {
    $this->send_process_saas_status_touch($order_id);
    $this->recv_process_saas_status_touch();
  }

  public function send_process_saas_status_touch($order_id)
  {
    $args = new \ERS\ElemeRestaurantService_process_saas_status_touch_args();
    $args->order_id = $order_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'process_saas_status_touch', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('process_saas_status_touch', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_process_saas_status_touch()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_process_saas_status_touch_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_process_saas_status_touch_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    return;
  }

  public function process_post_bankcard_bind_approve($restaurant_id, $timestamp)
  {
    $this->send_process_post_bankcard_bind_approve($restaurant_id, $timestamp);
    $this->recv_process_post_bankcard_bind_approve();
  }

  public function send_process_post_bankcard_bind_approve($restaurant_id, $timestamp)
  {
    $args = new \ERS\ElemeRestaurantService_process_post_bankcard_bind_approve_args();
    $args->restaurant_id = $restaurant_id;
    $args->timestamp = $timestamp;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'process_post_bankcard_bind_approve', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('process_post_bankcard_bind_approve', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_process_post_bankcard_bind_approve()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_process_post_bankcard_bind_approve_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_process_post_bankcard_bind_approve_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    return;
  }

  public function mset_tuesday_half_price_food_stock($is_max)
  {
    $this->send_mset_tuesday_half_price_food_stock($is_max);
    $this->recv_mset_tuesday_half_price_food_stock();
  }

  public function send_mset_tuesday_half_price_food_stock($is_max)
  {
    $args = new \ERS\ElemeRestaurantService_mset_tuesday_half_price_food_stock_args();
    $args->is_max = $is_max;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'mset_tuesday_half_price_food_stock', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('mset_tuesday_half_price_food_stock', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_mset_tuesday_half_price_food_stock()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_mset_tuesday_half_price_food_stock_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_mset_tuesday_half_price_food_stock_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    return;
  }

  public function reset_half_price_food_stock_by_category($unique_week, $category_id)
  {
    $this->send_reset_half_price_food_stock_by_category($unique_week, $category_id);
    $this->recv_reset_half_price_food_stock_by_category();
  }

  public function send_reset_half_price_food_stock_by_category($unique_week, $category_id)
  {
    $args = new \ERS\ElemeRestaurantService_reset_half_price_food_stock_by_category_args();
    $args->unique_week = $unique_week;
    $args->category_id = $category_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'reset_half_price_food_stock_by_category', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('reset_half_price_food_stock_by_category', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_reset_half_price_food_stock_by_category()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_reset_half_price_food_stock_by_category_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_reset_half_price_food_stock_by_category_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    return;
  }

  public function process_remove_market_staff($user_id)
  {
    $this->send_process_remove_market_staff($user_id);
    $this->recv_process_remove_market_staff();
  }

  public function send_process_remove_market_staff($user_id)
  {
    $args = new \ERS\ElemeRestaurantService_process_remove_market_staff_args();
    $args->user_id = $user_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'process_remove_market_staff', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('process_remove_market_staff', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_process_remove_market_staff()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_process_remove_market_staff_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_process_remove_market_staff_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    return;
  }

  public function refresh_flavors_by_restaurant($restaurant_id)
  {
    $this->send_refresh_flavors_by_restaurant($restaurant_id);
    $this->recv_refresh_flavors_by_restaurant();
  }

  public function send_refresh_flavors_by_restaurant($restaurant_id)
  {
    $args = new \ERS\ElemeRestaurantService_refresh_flavors_by_restaurant_args();
    $args->restaurant_id = $restaurant_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'refresh_flavors_by_restaurant', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('refresh_flavors_by_restaurant', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_refresh_flavors_by_restaurant()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_refresh_flavors_by_restaurant_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_refresh_flavors_by_restaurant_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    return;
  }

  public function set_delete_region_task_status($dl_region_id, $status)
  {
    $this->send_set_delete_region_task_status($dl_region_id, $status);
    $this->recv_set_delete_region_task_status();
  }

  public function send_set_delete_region_task_status($dl_region_id, $status)
  {
    $args = new \ERS\ElemeRestaurantService_set_delete_region_task_status_args();
    $args->dl_region_id = $dl_region_id;
    $args->status = $status;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'set_delete_region_task_status', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('set_delete_region_task_status', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_set_delete_region_task_status()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_set_delete_region_task_status_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_set_delete_region_task_status_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    return;
  }

  public function set_update_region_task_status($cl_region_id, $status)
  {
    $this->send_set_update_region_task_status($cl_region_id, $status);
    $this->recv_set_update_region_task_status();
  }

  public function send_set_update_region_task_status($cl_region_id, $status)
  {
    $args = new \ERS\ElemeRestaurantService_set_update_region_task_status_args();
    $args->cl_region_id = $cl_region_id;
    $args->status = $status;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'set_update_region_task_status', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('set_update_region_task_status', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_set_update_region_task_status()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_set_update_region_task_status_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_set_update_region_task_status_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    return;
  }

  public function send_update_restaurant_evaluation_task()
  {
    $this->send_send_update_restaurant_evaluation_task();
    $this->recv_send_update_restaurant_evaluation_task();
  }

  public function send_send_update_restaurant_evaluation_task()
  {
    $args = new \ERS\ElemeRestaurantService_send_update_restaurant_evaluation_task_args();
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'send_update_restaurant_evaluation_task', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('send_update_restaurant_evaluation_task', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_send_update_restaurant_evaluation_task()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_send_update_restaurant_evaluation_task_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_send_update_restaurant_evaluation_task_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    return;
  }

  public function daily_clear_restaurant_menu_cache()
  {
    $this->send_daily_clear_restaurant_menu_cache();
    $this->recv_daily_clear_restaurant_menu_cache();
  }

  public function send_daily_clear_restaurant_menu_cache()
  {
    $args = new \ERS\ElemeRestaurantService_daily_clear_restaurant_menu_cache_args();
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'daily_clear_restaurant_menu_cache', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('daily_clear_restaurant_menu_cache', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_daily_clear_restaurant_menu_cache()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_daily_clear_restaurant_menu_cache_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_daily_clear_restaurant_menu_cache_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    return;
  }

  public function semi_send_update_restaurant_evaluation_task($offset, $limit)
  {
    $this->send_semi_send_update_restaurant_evaluation_task($offset, $limit);
    $this->recv_semi_send_update_restaurant_evaluation_task();
  }

  public function send_semi_send_update_restaurant_evaluation_task($offset, $limit)
  {
    $args = new \ERS\ElemeRestaurantService_semi_send_update_restaurant_evaluation_task_args();
    $args->offset = $offset;
    $args->limit = $limit;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'semi_send_update_restaurant_evaluation_task', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('semi_send_update_restaurant_evaluation_task', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_semi_send_update_restaurant_evaluation_task()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_semi_send_update_restaurant_evaluation_task_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_semi_send_update_restaurant_evaluation_task_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    return;
  }

  public function update_restaurant_evaluation($restaurant_id)
  {
    $this->send_update_restaurant_evaluation($restaurant_id);
    $this->recv_update_restaurant_evaluation();
  }

  public function send_update_restaurant_evaluation($restaurant_id)
  {
    $args = new \ERS\ElemeRestaurantService_update_restaurant_evaluation_args();
    $args->restaurant_id = $restaurant_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'update_restaurant_evaluation', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('update_restaurant_evaluation', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_update_restaurant_evaluation()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_update_restaurant_evaluation_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_update_restaurant_evaluation_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    return;
  }

  public function notify_napos_mobile_to_sync($restaurant_id, $is_new_order)
  {
    $this->send_notify_napos_mobile_to_sync($restaurant_id, $is_new_order);
    $this->recv_notify_napos_mobile_to_sync();
  }

  public function send_notify_napos_mobile_to_sync($restaurant_id, $is_new_order)
  {
    $args = new \ERS\ElemeRestaurantService_notify_napos_mobile_to_sync_args();
    $args->restaurant_id = $restaurant_id;
    $args->is_new_order = $is_new_order;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'notify_napos_mobile_to_sync', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('notify_napos_mobile_to_sync', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_notify_napos_mobile_to_sync()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_notify_napos_mobile_to_sync_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_notify_napos_mobile_to_sync_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    return;
  }

  public function notify_napos_mobile_to_sync2($restaurant_id, $is_new_order, $timestamp)
  {
    $this->send_notify_napos_mobile_to_sync2($restaurant_id, $is_new_order, $timestamp);
    $this->recv_notify_napos_mobile_to_sync2();
  }

  public function send_notify_napos_mobile_to_sync2($restaurant_id, $is_new_order, $timestamp)
  {
    $args = new \ERS\ElemeRestaurantService_notify_napos_mobile_to_sync2_args();
    $args->restaurant_id = $restaurant_id;
    $args->is_new_order = $is_new_order;
    $args->timestamp = $timestamp;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'notify_napos_mobile_to_sync2', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('notify_napos_mobile_to_sync2', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_notify_napos_mobile_to_sync2()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_notify_napos_mobile_to_sync2_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_notify_napos_mobile_to_sync2_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    return;
  }

  public function update_food_ugc_image_cover($food_id)
  {
    $this->send_update_food_ugc_image_cover($food_id);
    $this->recv_update_food_ugc_image_cover();
  }

  public function send_update_food_ugc_image_cover($food_id)
  {
    $args = new \ERS\ElemeRestaurantService_update_food_ugc_image_cover_args();
    $args->food_id = $food_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'update_food_ugc_image_cover', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('update_food_ugc_image_cover', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_update_food_ugc_image_cover()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_update_food_ugc_image_cover_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_update_food_ugc_image_cover_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    return;
  }

  public function refresh_food_has_activity($food_ids)
  {
    $this->send_refresh_food_has_activity($food_ids);
    $this->recv_refresh_food_has_activity();
  }

  public function send_refresh_food_has_activity($food_ids)
  {
    $args = new \ERS\ElemeRestaurantService_refresh_food_has_activity_args();
    $args->food_ids = $food_ids;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'refresh_food_has_activity', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('refresh_food_has_activity', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_refresh_food_has_activity()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_refresh_food_has_activity_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_refresh_food_has_activity_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    return;
  }

  public function refresh_restaurant_food_activity($restaurant_id)
  {
    $this->send_refresh_restaurant_food_activity($restaurant_id);
    $this->recv_refresh_restaurant_food_activity();
  }

  public function send_refresh_restaurant_food_activity($restaurant_id)
  {
    $args = new \ERS\ElemeRestaurantService_refresh_restaurant_food_activity_args();
    $args->restaurant_id = $restaurant_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'refresh_restaurant_food_activity', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('refresh_restaurant_food_activity', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_refresh_restaurant_food_activity()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_refresh_restaurant_food_activity_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_refresh_restaurant_food_activity_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    return;
  }

  public function get($restaurant_id)
  {
    $this->send_get($restaurant_id);
    return $this->recv_get();
  }

  public function send_get($restaurant_id)
  {
    $args = new \ERS\ElemeRestaurantService_get_args();
    $args->restaurant_id = $restaurant_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'get', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('get', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_get()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_get_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_get_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("get failed: unknown result");
  }

  public function mget($restaurant_ids)
  {
    $this->send_mget($restaurant_ids);
    return $this->recv_mget();
  }

  public function send_mget($restaurant_ids)
  {
    $args = new \ERS\ElemeRestaurantService_mget_args();
    $args->restaurant_ids = $restaurant_ids;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'mget', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('mget', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_mget()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_mget_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_mget_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("mget failed: unknown result");
  }

  public function master_get($id)
  {
    $this->send_master_get($id);
    return $this->recv_master_get();
  }

  public function send_master_get($id)
  {
    $args = new \ERS\ElemeRestaurantService_master_get_args();
    $args->id = $id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'master_get', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('master_get', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_master_get()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_master_get_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_master_get_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("master_get failed: unknown result");
  }

  public function get_by_wireless_printer_esn($esn)
  {
    $this->send_get_by_wireless_printer_esn($esn);
    return $this->recv_get_by_wireless_printer_esn();
  }

  public function send_get_by_wireless_printer_esn($esn)
  {
    $args = new \ERS\ElemeRestaurantService_get_by_wireless_printer_esn_args();
    $args->esn = $esn;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'get_by_wireless_printer_esn', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('get_by_wireless_printer_esn', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_get_by_wireless_printer_esn()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_get_by_wireless_printer_esn_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_get_by_wireless_printer_esn_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("get_by_wireless_printer_esn failed: unknown result");
  }

  public function get_by_name_for_url($name_for_url)
  {
    $this->send_get_by_name_for_url($name_for_url);
    return $this->recv_get_by_name_for_url();
  }

  public function send_get_by_name_for_url($name_for_url)
  {
    $args = new \ERS\ElemeRestaurantService_get_by_name_for_url_args();
    $args->name_for_url = $name_for_url;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'get_by_name_for_url', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('get_by_name_for_url', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_get_by_name_for_url()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_get_by_name_for_url_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_get_by_name_for_url_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("get_by_name_for_url failed: unknown result");
  }

  public function get_by_mobile($mobile)
  {
    $this->send_get_by_mobile($mobile);
    return $this->recv_get_by_mobile();
  }

  public function send_get_by_mobile($mobile)
  {
    $args = new \ERS\ElemeRestaurantService_get_by_mobile_args();
    $args->mobile = $mobile;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'get_by_mobile', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('get_by_mobile', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_get_by_mobile()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_get_by_mobile_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_get_by_mobile_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("get_by_mobile failed: unknown result");
  }

  public function get_by_admin($user_id)
  {
    $this->send_get_by_admin($user_id);
    return $this->recv_get_by_admin();
  }

  public function send_get_by_admin($user_id)
  {
    $args = new \ERS\ElemeRestaurantService_get_by_admin_args();
    $args->user_id = $user_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'get_by_admin', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('get_by_admin', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_get_by_admin()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_get_by_admin_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_get_by_admin_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("get_by_admin failed: unknown result");
  }

  public function get_app_campaign_by_sn($sn)
  {
    $this->send_get_app_campaign_by_sn($sn);
    return $this->recv_get_app_campaign_by_sn();
  }

  public function send_get_app_campaign_by_sn($sn)
  {
    $args = new \ERS\ElemeRestaurantService_get_app_campaign_by_sn_args();
    $args->sn = $sn;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'get_app_campaign_by_sn', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('get_app_campaign_by_sn', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_get_app_campaign_by_sn()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_get_app_campaign_by_sn_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_get_app_campaign_by_sn_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("get_app_campaign_by_sn failed: unknown result");
  }

  public function get_bankcard($restaurant_id)
  {
    $this->send_get_bankcard($restaurant_id);
    return $this->recv_get_bankcard();
  }

  public function send_get_bankcard($restaurant_id)
  {
    $args = new \ERS\ElemeRestaurantService_get_bankcard_args();
    $args->restaurant_id = $restaurant_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'get_bankcard', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('get_bankcard', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_get_bankcard()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_get_bankcard_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_get_bankcard_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("get_bankcard failed: unknown result");
  }

  public function get_bankcard_new($restaurant_id)
  {
    $this->send_get_bankcard_new($restaurant_id);
    return $this->recv_get_bankcard_new();
  }

  public function send_get_bankcard_new($restaurant_id)
  {
    $args = new \ERS\ElemeRestaurantService_get_bankcard_new_args();
    $args->restaurant_id = $restaurant_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'get_bankcard_new', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('get_bankcard_new', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_get_bankcard_new()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_get_bankcard_new_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_get_bankcard_new_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("get_bankcard_new failed: unknown result");
  }

  public function mget_bankcard($restaurant_ids)
  {
    $this->send_mget_bankcard($restaurant_ids);
    return $this->recv_mget_bankcard();
  }

  public function send_mget_bankcard($restaurant_ids)
  {
    $args = new \ERS\ElemeRestaurantService_mget_bankcard_args();
    $args->restaurant_ids = $restaurant_ids;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'mget_bankcard', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('mget_bankcard', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_mget_bankcard()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_mget_bankcard_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_mget_bankcard_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("mget_bankcard failed: unknown result");
  }

  public function mget_restaurant_bankcard($restaurant_ids)
  {
    $this->send_mget_restaurant_bankcard($restaurant_ids);
    return $this->recv_mget_restaurant_bankcard();
  }

  public function send_mget_restaurant_bankcard($restaurant_ids)
  {
    $args = new \ERS\ElemeRestaurantService_mget_restaurant_bankcard_args();
    $args->restaurant_ids = $restaurant_ids;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'mget_restaurant_bankcard', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('mget_restaurant_bankcard', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_mget_restaurant_bankcard()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_mget_restaurant_bankcard_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_mget_restaurant_bankcard_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("mget_restaurant_bankcard failed: unknown result");
  }

  public function update_bankcard(\ERS\TRestaurantBankcard $update_struct)
  {
    $this->send_update_bankcard($update_struct);
    return $this->recv_update_bankcard();
  }

  public function send_update_bankcard(\ERS\TRestaurantBankcard $update_struct)
  {
    $args = new \ERS\ElemeRestaurantService_update_bankcard_args();
    $args->update_struct = $update_struct;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'update_bankcard', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('update_bankcard', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_update_bankcard()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_update_bankcard_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_update_bankcard_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("update_bankcard failed: unknown result");
  }

  public function remove_bankcard($restaurant_id)
  {
    $this->send_remove_bankcard($restaurant_id);
    $this->recv_remove_bankcard();
  }

  public function send_remove_bankcard($restaurant_id)
  {
    $args = new \ERS\ElemeRestaurantService_remove_bankcard_args();
    $args->restaurant_id = $restaurant_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'remove_bankcard', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('remove_bankcard', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_remove_bankcard()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_remove_bankcard_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_remove_bankcard_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    return;
  }

  public function query_by_dock_corp($dock_corp_id)
  {
    $this->send_query_by_dock_corp($dock_corp_id);
    return $this->recv_query_by_dock_corp();
  }

  public function send_query_by_dock_corp($dock_corp_id)
  {
    $args = new \ERS\ElemeRestaurantService_query_by_dock_corp_args();
    $args->dock_corp_id = $dock_corp_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'query_by_dock_corp', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('query_by_dock_corp', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_query_by_dock_corp()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_query_by_dock_corp_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_query_by_dock_corp_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("query_by_dock_corp failed: unknown result");
  }

  public function get_open_apply_by_admin($user_id)
  {
    $this->send_get_open_apply_by_admin($user_id);
    return $this->recv_get_open_apply_by_admin();
  }

  public function send_get_open_apply_by_admin($user_id)
  {
    $args = new \ERS\ElemeRestaurantService_get_open_apply_by_admin_args();
    $args->user_id = $user_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'get_open_apply_by_admin', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('get_open_apply_by_admin', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_get_open_apply_by_admin()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_get_open_apply_by_admin_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_get_open_apply_by_admin_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("get_open_apply_by_admin failed: unknown result");
  }

  public function get_open_apply($id)
  {
    $this->send_get_open_apply($id);
    return $this->recv_get_open_apply();
  }

  public function send_get_open_apply($id)
  {
    $args = new \ERS\ElemeRestaurantService_get_open_apply_args();
    $args->id = $id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'get_open_apply', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('get_open_apply', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_get_open_apply()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_get_open_apply_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_get_open_apply_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("get_open_apply failed: unknown result");
  }

  public function query_restaurant_open_apply(\ERS\TRestaurantOpenApplyQuery $t_open_apply)
  {
    $this->send_query_restaurant_open_apply($t_open_apply);
    return $this->recv_query_restaurant_open_apply();
  }

  public function send_query_restaurant_open_apply(\ERS\TRestaurantOpenApplyQuery $t_open_apply)
  {
    $args = new \ERS\ElemeRestaurantService_query_restaurant_open_apply_args();
    $args->t_open_apply = $t_open_apply;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'query_restaurant_open_apply', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('query_restaurant_open_apply', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_query_restaurant_open_apply()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_query_restaurant_open_apply_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_query_restaurant_open_apply_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("query_restaurant_open_apply failed: unknown result");
  }

  public function count_restaurant_open_apply(\ERS\TRestaurantOpenApplyQuery $t_open_apply)
  {
    $this->send_count_restaurant_open_apply($t_open_apply);
    return $this->recv_count_restaurant_open_apply();
  }

  public function send_count_restaurant_open_apply(\ERS\TRestaurantOpenApplyQuery $t_open_apply)
  {
    $args = new \ERS\ElemeRestaurantService_count_restaurant_open_apply_args();
    $args->t_open_apply = $t_open_apply;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'count_restaurant_open_apply', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('count_restaurant_open_apply', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_count_restaurant_open_apply()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_count_restaurant_open_apply_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_count_restaurant_open_apply_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("count_restaurant_open_apply failed: unknown result");
  }

  public function get_entry($entry_id)
  {
    $this->send_get_entry($entry_id);
    return $this->recv_get_entry();
  }

  public function send_get_entry($entry_id)
  {
    $args = new \ERS\ElemeRestaurantService_get_entry_args();
    $args->entry_id = $entry_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'get_entry', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('get_entry', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_get_entry()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_get_entry_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_get_entry_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("get_entry failed: unknown result");
  }

  public function mget_entry($ids)
  {
    $this->send_mget_entry($ids);
    return $this->recv_mget_entry();
  }

  public function send_mget_entry($ids)
  {
    $args = new \ERS\ElemeRestaurantService_mget_entry_args();
    $args->ids = $ids;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'mget_entry', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('mget_entry', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_mget_entry()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_mget_entry_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_mget_entry_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("mget_entry failed: unknown result");
  }

  public function get_entry_by_sn($sn)
  {
    $this->send_get_entry_by_sn($sn);
    return $this->recv_get_entry_by_sn();
  }

  public function send_get_entry_by_sn($sn)
  {
    $args = new \ERS\ElemeRestaurantService_get_entry_by_sn_args();
    $args->sn = $sn;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'get_entry_by_sn', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('get_entry_by_sn', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_get_entry_by_sn()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_get_entry_by_sn_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_get_entry_by_sn_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("get_entry_by_sn failed: unknown result");
  }

  public function query_entry(\ERS\TEntryQuery $query_struct)
  {
    $this->send_query_entry($query_struct);
    return $this->recv_query_entry();
  }

  public function send_query_entry(\ERS\TEntryQuery $query_struct)
  {
    $args = new \ERS\ElemeRestaurantService_query_entry_args();
    $args->query_struct = $query_struct;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'query_entry', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('query_entry', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_query_entry()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_query_entry_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_query_entry_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("query_entry failed: unknown result");
  }

  public function get_district($district_id)
  {
    $this->send_get_district($district_id);
    return $this->recv_get_district();
  }

  public function send_get_district($district_id)
  {
    $args = new \ERS\ElemeRestaurantService_get_district_args();
    $args->district_id = $district_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'get_district', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('get_district', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_get_district()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_get_district_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_get_district_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("get_district failed: unknown result");
  }

  public function query_district(\ERS\TDistrictQuery $query_struct)
  {
    $this->send_query_district($query_struct);
    return $this->recv_query_district();
  }

  public function send_query_district(\ERS\TDistrictQuery $query_struct)
  {
    $args = new \ERS\ElemeRestaurantService_query_district_args();
    $args->query_struct = $query_struct;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'query_district', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('query_district', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_query_district()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_query_district_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_query_district_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("query_district failed: unknown result");
  }

  public function get_zone($zone_id)
  {
    $this->send_get_zone($zone_id);
    return $this->recv_get_zone();
  }

  public function send_get_zone($zone_id)
  {
    $args = new \ERS\ElemeRestaurantService_get_zone_args();
    $args->zone_id = $zone_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'get_zone', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('get_zone', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_get_zone()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_get_zone_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_get_zone_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("get_zone failed: unknown result");
  }

  public function query_zone(\ERS\TZoneQuery $query_struct)
  {
    $this->send_query_zone($query_struct);
    return $this->recv_query_zone();
  }

  public function send_query_zone(\ERS\TZoneQuery $query_struct)
  {
    $args = new \ERS\ElemeRestaurantService_query_zone_args();
    $args->query_struct = $query_struct;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'query_zone', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('query_zone', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_query_zone()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_query_zone_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_query_zone_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("query_zone failed: unknown result");
  }

  public function get_direct_struct($user_id)
  {
    $this->send_get_direct_struct($user_id);
    return $this->recv_get_direct_struct();
  }

  public function send_get_direct_struct($user_id)
  {
    $args = new \ERS\ElemeRestaurantService_get_direct_struct_args();
    $args->user_id = $user_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'get_direct_struct', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('get_direct_struct', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_get_direct_struct()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_get_direct_struct_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_get_direct_struct_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("get_direct_struct failed: unknown result");
  }

  public function get_region($region_id)
  {
    $this->send_get_region($region_id);
    return $this->recv_get_region();
  }

  public function send_get_region($region_id)
  {
    $args = new \ERS\ElemeRestaurantService_get_region_args();
    $args->region_id = $region_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'get_region', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('get_region', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_get_region()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_get_region_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_get_region_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("get_region failed: unknown result");
  }

  public function master_get_region($region_id)
  {
    $this->send_master_get_region($region_id);
    return $this->recv_master_get_region();
  }

  public function send_master_get_region($region_id)
  {
    $args = new \ERS\ElemeRestaurantService_master_get_region_args();
    $args->region_id = $region_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'master_get_region', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('master_get_region', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_master_get_region()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_master_get_region_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_master_get_region_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("master_get_region failed: unknown result");
  }

  public function mget_region($region_ids)
  {
    $this->send_mget_region($region_ids);
    return $this->recv_mget_region();
  }

  public function send_mget_region($region_ids)
  {
    $args = new \ERS\ElemeRestaurantService_mget_region_args();
    $args->region_ids = $region_ids;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'mget_region', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('mget_region', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_mget_region()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_mget_region_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_mget_region_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("mget_region failed: unknown result");
  }

  public function get_region_by_entry($entry_id)
  {
    $this->send_get_region_by_entry($entry_id);
    return $this->recv_get_region_by_entry();
  }

  public function send_get_region_by_entry($entry_id)
  {
    $args = new \ERS\ElemeRestaurantService_get_region_by_entry_args();
    $args->entry_id = $entry_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'get_region_by_entry', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('get_region_by_entry', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_get_region_by_entry()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_get_region_by_entry_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_get_region_by_entry_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("get_region_by_entry failed: unknown result");
  }

  public function get_region_by_restaurant($restaurant_id)
  {
    $this->send_get_region_by_restaurant($restaurant_id);
    return $this->recv_get_region_by_restaurant();
  }

  public function send_get_region_by_restaurant($restaurant_id)
  {
    $args = new \ERS\ElemeRestaurantService_get_region_by_restaurant_args();
    $args->restaurant_id = $restaurant_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'get_region_by_restaurant', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('get_region_by_restaurant', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_get_region_by_restaurant()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_get_region_by_restaurant_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_get_region_by_restaurant_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("get_region_by_restaurant failed: unknown result");
  }

  public function get_region_group($region_group_id)
  {
    $this->send_get_region_group($region_group_id);
    return $this->recv_get_region_group();
  }

  public function send_get_region_group($region_group_id)
  {
    $args = new \ERS\ElemeRestaurantService_get_region_group_args();
    $args->region_group_id = $region_group_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'get_region_group', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('get_region_group', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_get_region_group()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_get_region_group_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_get_region_group_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("get_region_group failed: unknown result");
  }

  public function mget_region_group($region_group_ids)
  {
    $this->send_mget_region_group($region_group_ids);
    return $this->recv_mget_region_group();
  }

  public function send_mget_region_group($region_group_ids)
  {
    $args = new \ERS\ElemeRestaurantService_mget_region_group_args();
    $args->region_group_ids = $region_group_ids;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'mget_region_group', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('mget_region_group', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_mget_region_group()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_mget_region_group_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_mget_region_group_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("mget_region_group failed: unknown result");
  }

  public function get_region_group_by_region($region_id)
  {
    $this->send_get_region_group_by_region($region_id);
    return $this->recv_get_region_group_by_region();
  }

  public function send_get_region_group_by_region($region_id)
  {
    $args = new \ERS\ElemeRestaurantService_get_region_group_by_region_args();
    $args->region_id = $region_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'get_region_group_by_region', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('get_region_group_by_region', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_get_region_group_by_region()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_get_region_group_by_region_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_get_region_group_by_region_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("get_region_group_by_region failed: unknown result");
  }

  public function count_region_group(\ERS\TRegionGroupQuery $query_struct)
  {
    $this->send_count_region_group($query_struct);
    return $this->recv_count_region_group();
  }

  public function send_count_region_group(\ERS\TRegionGroupQuery $query_struct)
  {
    $args = new \ERS\ElemeRestaurantService_count_region_group_args();
    $args->query_struct = $query_struct;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'count_region_group', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('count_region_group', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_count_region_group()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_count_region_group_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_count_region_group_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("count_region_group failed: unknown result");
  }

  public function query_region_group(\ERS\TRegionGroupQuery $query_struct)
  {
    $this->send_query_region_group($query_struct);
    return $this->recv_query_region_group();
  }

  public function send_query_region_group(\ERS\TRegionGroupQuery $query_struct)
  {
    $args = new \ERS\ElemeRestaurantService_query_region_group_args();
    $args->query_struct = $query_struct;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'query_region_group', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('query_region_group', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_query_region_group()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_query_region_group_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_query_region_group_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("query_region_group failed: unknown result");
  }

  public function save_region_group($region_group_id, \ERS\TRegionGroup $region_group)
  {
    $this->send_save_region_group($region_group_id, $region_group);
    return $this->recv_save_region_group();
  }

  public function send_save_region_group($region_group_id, \ERS\TRegionGroup $region_group)
  {
    $args = new \ERS\ElemeRestaurantService_save_region_group_args();
    $args->region_group_id = $region_group_id;
    $args->region_group = $region_group;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'save_region_group', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('save_region_group', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_save_region_group()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_save_region_group_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_save_region_group_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("save_region_group failed: unknown result");
  }

  public function remove_region_group($region_group_id)
  {
    $this->send_remove_region_group($region_group_id);
    $this->recv_remove_region_group();
  }

  public function send_remove_region_group($region_group_id)
  {
    $args = new \ERS\ElemeRestaurantService_remove_region_group_args();
    $args->region_group_id = $region_group_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'remove_region_group', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('remove_region_group', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_remove_region_group()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_remove_region_group_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_remove_region_group_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    return;
  }

  public function update_region_group_region($region_group_id, $region_id)
  {
    $this->send_update_region_group_region($region_group_id, $region_id);
    $this->recv_update_region_group_region();
  }

  public function send_update_region_group_region($region_group_id, $region_id)
  {
    $args = new \ERS\ElemeRestaurantService_update_region_group_region_args();
    $args->region_group_id = $region_group_id;
    $args->region_id = $region_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'update_region_group_region', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('update_region_group_region', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_update_region_group_region()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_update_region_group_region_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_update_region_group_region_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    return;
  }

  public function get_regions_by_region_group_ids($region_group_ids)
  {
    $this->send_get_regions_by_region_group_ids($region_group_ids);
    return $this->recv_get_regions_by_region_group_ids();
  }

  public function send_get_regions_by_region_group_ids($region_group_ids)
  {
    $args = new \ERS\ElemeRestaurantService_get_regions_by_region_group_ids_args();
    $args->region_group_ids = $region_group_ids;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'get_regions_by_region_group_ids', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('get_regions_by_region_group_ids', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_get_regions_by_region_group_ids()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_get_regions_by_region_group_ids_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_get_regions_by_region_group_ids_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("get_regions_by_region_group_ids failed: unknown result");
  }

  public function get_activity($activity_id)
  {
    $this->send_get_activity($activity_id);
    return $this->recv_get_activity();
  }

  public function send_get_activity($activity_id)
  {
    $args = new \ERS\ElemeRestaurantService_get_activity_args();
    $args->activity_id = $activity_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'get_activity', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('get_activity', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_get_activity()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_get_activity_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_get_activity_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("get_activity failed: unknown result");
  }

  public function mget_activity($activity_ids)
  {
    $this->send_mget_activity($activity_ids);
    return $this->recv_mget_activity();
  }

  public function send_mget_activity($activity_ids)
  {
    $args = new \ERS\ElemeRestaurantService_mget_activity_args();
    $args->activity_ids = $activity_ids;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'mget_activity', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('mget_activity', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_mget_activity()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_mget_activity_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_mget_activity_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("mget_activity failed: unknown result");
  }

  public function get_city($city_id)
  {
    $this->send_get_city($city_id);
    return $this->recv_get_city();
  }

  public function send_get_city($city_id)
  {
    $args = new \ERS\ElemeRestaurantService_get_city_args();
    $args->city_id = $city_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'get_city', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('get_city', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_get_city()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_get_city_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_get_city_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("get_city failed: unknown result");
  }

  public function get_city_by_name($city_name)
  {
    $this->send_get_city_by_name($city_name);
    return $this->recv_get_city_by_name();
  }

  public function send_get_city_by_name($city_name)
  {
    $args = new \ERS\ElemeRestaurantService_get_city_by_name_args();
    $args->city_name = $city_name;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'get_city_by_name', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('get_city_by_name', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_get_city_by_name()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_get_city_by_name_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_get_city_by_name_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("get_city_by_name failed: unknown result");
  }

  public function mget_city($city_ids)
  {
    $this->send_mget_city($city_ids);
    return $this->recv_mget_city();
  }

  public function send_mget_city($city_ids)
  {
    $args = new \ERS\ElemeRestaurantService_mget_city_args();
    $args->city_ids = $city_ids;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'mget_city', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('mget_city', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_mget_city()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_mget_city_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_mget_city_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("mget_city failed: unknown result");
  }

  public function get_city_by_region($region_id)
  {
    $this->send_get_city_by_region($region_id);
    return $this->recv_get_city_by_region();
  }

  public function send_get_city_by_region($region_id)
  {
    $args = new \ERS\ElemeRestaurantService_get_city_by_region_args();
    $args->region_id = $region_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'get_city_by_region', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('get_city_by_region', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_get_city_by_region()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_get_city_by_region_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_get_city_by_region_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("get_city_by_region failed: unknown result");
  }

  public function get_city_by_region_group($region_group_id)
  {
    $this->send_get_city_by_region_group($region_group_id);
    return $this->recv_get_city_by_region_group();
  }

  public function send_get_city_by_region_group($region_group_id)
  {
    $args = new \ERS\ElemeRestaurantService_get_city_by_region_group_args();
    $args->region_group_id = $region_group_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'get_city_by_region_group', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('get_city_by_region_group', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_get_city_by_region_group()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_get_city_by_region_group_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_get_city_by_region_group_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("get_city_by_region_group failed: unknown result");
  }

  public function get_city_by_code($district_code)
  {
    $this->send_get_city_by_code($district_code);
    return $this->recv_get_city_by_code();
  }

  public function send_get_city_by_code($district_code)
  {
    $args = new \ERS\ElemeRestaurantService_get_city_by_code_args();
    $args->district_code = $district_code;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'get_city_by_code', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('get_city_by_code', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_get_city_by_code()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_get_city_by_code_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_get_city_by_code_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("get_city_by_code failed: unknown result");
  }

  public function get_city_by_area_code($area_code)
  {
    $this->send_get_city_by_area_code($area_code);
    return $this->recv_get_city_by_area_code();
  }

  public function send_get_city_by_area_code($area_code)
  {
    $args = new \ERS\ElemeRestaurantService_get_city_by_area_code_args();
    $args->area_code = $area_code;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'get_city_by_area_code', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('get_city_by_area_code', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_get_city_by_area_code()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_get_city_by_area_code_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_get_city_by_area_code_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("get_city_by_area_code failed: unknown result");
  }

  public function query_country_region(\ERS\TCountryRegionQuery $query_struct)
  {
    $this->send_query_country_region($query_struct);
    return $this->recv_query_country_region();
  }

  public function send_query_country_region(\ERS\TCountryRegionQuery $query_struct)
  {
    $args = new \ERS\ElemeRestaurantService_query_country_region_args();
    $args->query_struct = $query_struct;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'query_country_region', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('query_country_region', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_query_country_region()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_query_country_region_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_query_country_region_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("query_country_region failed: unknown result");
  }

  public function query_city(\ERS\TCityQuery $query_struct)
  {
    $this->send_query_city($query_struct);
    return $this->recv_query_city();
  }

  public function send_query_city(\ERS\TCityQuery $query_struct)
  {
    $args = new \ERS\ElemeRestaurantService_query_city_args();
    $args->query_struct = $query_struct;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'query_city', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('query_city', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_query_city()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_query_city_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_query_city_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("query_city failed: unknown result");
  }

  public function get_food($food_id)
  {
    $this->send_get_food($food_id);
    return $this->recv_get_food();
  }

  public function send_get_food($food_id)
  {
    $args = new \ERS\ElemeRestaurantService_get_food_args();
    $args->food_id = $food_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'get_food', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('get_food', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_get_food()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_get_food_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_get_food_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("get_food failed: unknown result");
  }

  public function mget_food($food_ids)
  {
    $this->send_mget_food($food_ids);
    return $this->recv_mget_food();
  }

  public function send_mget_food($food_ids)
  {
    $args = new \ERS\ElemeRestaurantService_mget_food_args();
    $args->food_ids = $food_ids;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'mget_food', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('mget_food', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_mget_food()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_mget_food_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_mget_food_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("mget_food failed: unknown result");
  }

  public function master_get_food($food_id)
  {
    $this->send_master_get_food($food_id);
    return $this->recv_master_get_food();
  }

  public function send_master_get_food($food_id)
  {
    $args = new \ERS\ElemeRestaurantService_master_get_food_args();
    $args->food_id = $food_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'master_get_food', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('master_get_food', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_master_get_food()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_master_get_food_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_master_get_food_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("master_get_food failed: unknown result");
  }

  public function get_food_by_sn($sn)
  {
    $this->send_get_food_by_sn($sn);
    return $this->recv_get_food_by_sn();
  }

  public function send_get_food_by_sn($sn)
  {
    $args = new \ERS\ElemeRestaurantService_get_food_by_sn_args();
    $args->sn = $sn;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'get_food_by_sn', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('get_food_by_sn', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_get_food_by_sn()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_get_food_by_sn_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_get_food_by_sn_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("get_food_by_sn failed: unknown result");
  }

  public function get_food_category($food_category_id)
  {
    $this->send_get_food_category($food_category_id);
    return $this->recv_get_food_category();
  }

  public function send_get_food_category($food_category_id)
  {
    $args = new \ERS\ElemeRestaurantService_get_food_category_args();
    $args->food_category_id = $food_category_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'get_food_category', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('get_food_category', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_get_food_category()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_get_food_category_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_get_food_category_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("get_food_category failed: unknown result");
  }

  public function mget_food_category($food_category_ids)
  {
    $this->send_mget_food_category($food_category_ids);
    return $this->recv_mget_food_category();
  }

  public function send_mget_food_category($food_category_ids)
  {
    $args = new \ERS\ElemeRestaurantService_mget_food_category_args();
    $args->food_category_ids = $food_category_ids;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'mget_food_category', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('mget_food_category', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_mget_food_category()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_mget_food_category_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_mget_food_category_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("mget_food_category failed: unknown result");
  }

  public function master_get_food_category($food_category_id)
  {
    $this->send_master_get_food_category($food_category_id);
    return $this->recv_master_get_food_category();
  }

  public function send_master_get_food_category($food_category_id)
  {
    $args = new \ERS\ElemeRestaurantService_master_get_food_category_args();
    $args->food_category_id = $food_category_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'master_get_food_category', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('master_get_food_category', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_master_get_food_category()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_master_get_food_category_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_master_get_food_category_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("master_get_food_category failed: unknown result");
  }

  public function get_food_ugc_image($food_ugc_image_id)
  {
    $this->send_get_food_ugc_image($food_ugc_image_id);
    return $this->recv_get_food_ugc_image();
  }

  public function send_get_food_ugc_image($food_ugc_image_id)
  {
    $args = new \ERS\ElemeRestaurantService_get_food_ugc_image_args();
    $args->food_ugc_image_id = $food_ugc_image_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'get_food_ugc_image', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('get_food_ugc_image', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_get_food_ugc_image()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_get_food_ugc_image_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_get_food_ugc_image_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("get_food_ugc_image failed: unknown result");
  }

  public function get_food_ugc_image_pr($food_ugc_image_id)
  {
    $this->send_get_food_ugc_image_pr($food_ugc_image_id);
    return $this->recv_get_food_ugc_image_pr();
  }

  public function send_get_food_ugc_image_pr($food_ugc_image_id)
  {
    $args = new \ERS\ElemeRestaurantService_get_food_ugc_image_pr_args();
    $args->food_ugc_image_id = $food_ugc_image_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'get_food_ugc_image_pr', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('get_food_ugc_image_pr', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_get_food_ugc_image_pr()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_get_food_ugc_image_pr_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_get_food_ugc_image_pr_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("get_food_ugc_image_pr failed: unknown result");
  }

  public function mget_food_ugc_image($food_ugc_image_ids)
  {
    $this->send_mget_food_ugc_image($food_ugc_image_ids);
    return $this->recv_mget_food_ugc_image();
  }

  public function send_mget_food_ugc_image($food_ugc_image_ids)
  {
    $args = new \ERS\ElemeRestaurantService_mget_food_ugc_image_args();
    $args->food_ugc_image_ids = $food_ugc_image_ids;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'mget_food_ugc_image', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('mget_food_ugc_image', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_mget_food_ugc_image()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_mget_food_ugc_image_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_mget_food_ugc_image_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("mget_food_ugc_image failed: unknown result");
  }

  public function get_food_ugc_image_by_sn($sn)
  {
    $this->send_get_food_ugc_image_by_sn($sn);
    return $this->recv_get_food_ugc_image_by_sn();
  }

  public function send_get_food_ugc_image_by_sn($sn)
  {
    $args = new \ERS\ElemeRestaurantService_get_food_ugc_image_by_sn_args();
    $args->sn = $sn;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'get_food_ugc_image_by_sn', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('get_food_ugc_image_by_sn', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_get_food_ugc_image_by_sn()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_get_food_ugc_image_by_sn_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_get_food_ugc_image_by_sn_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("get_food_ugc_image_by_sn failed: unknown result");
  }

  public function get_food_ugc_image_by_order_item_id($order_item_id)
  {
    $this->send_get_food_ugc_image_by_order_item_id($order_item_id);
    return $this->recv_get_food_ugc_image_by_order_item_id();
  }

  public function send_get_food_ugc_image_by_order_item_id($order_item_id)
  {
    $args = new \ERS\ElemeRestaurantService_get_food_ugc_image_by_order_item_id_args();
    $args->order_item_id = $order_item_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'get_food_ugc_image_by_order_item_id', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('get_food_ugc_image_by_order_item_id', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_get_food_ugc_image_by_order_item_id()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_get_food_ugc_image_by_order_item_id_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_get_food_ugc_image_by_order_item_id_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("get_food_ugc_image_by_order_item_id failed: unknown result");
  }

  public function query_food_ugc_image_by_user_id($user_id, $date, $max_day)
  {
    $this->send_query_food_ugc_image_by_user_id($user_id, $date, $max_day);
    return $this->recv_query_food_ugc_image_by_user_id();
  }

  public function send_query_food_ugc_image_by_user_id($user_id, $date, $max_day)
  {
    $args = new \ERS\ElemeRestaurantService_query_food_ugc_image_by_user_id_args();
    $args->user_id = $user_id;
    $args->date = $date;
    $args->max_day = $max_day;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'query_food_ugc_image_by_user_id', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('query_food_ugc_image_by_user_id', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_query_food_ugc_image_by_user_id()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_query_food_ugc_image_by_user_id_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_query_food_ugc_image_by_user_id_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("query_food_ugc_image_by_user_id failed: unknown result");
  }

  public function count_food_ugc_image(\ERS\TFoodUgcImageQuery $query_struct)
  {
    $this->send_count_food_ugc_image($query_struct);
    return $this->recv_count_food_ugc_image();
  }

  public function send_count_food_ugc_image(\ERS\TFoodUgcImageQuery $query_struct)
  {
    $args = new \ERS\ElemeRestaurantService_count_food_ugc_image_args();
    $args->query_struct = $query_struct;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'count_food_ugc_image', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('count_food_ugc_image', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_count_food_ugc_image()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_count_food_ugc_image_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_count_food_ugc_image_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("count_food_ugc_image failed: unknown result");
  }

  public function query_food_ugc_image(\ERS\TFoodUgcImageQuery $query_struct)
  {
    $this->send_query_food_ugc_image($query_struct);
    return $this->recv_query_food_ugc_image();
  }

  public function send_query_food_ugc_image(\ERS\TFoodUgcImageQuery $query_struct)
  {
    $args = new \ERS\ElemeRestaurantService_query_food_ugc_image_args();
    $args->query_struct = $query_struct;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'query_food_ugc_image', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('query_food_ugc_image', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_query_food_ugc_image()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_query_food_ugc_image_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_query_food_ugc_image_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("query_food_ugc_image failed: unknown result");
  }

  public function count_food_ugc_image_cover(\ERS\TFoodUgcImageCoverQuery $query_struct)
  {
    $this->send_count_food_ugc_image_cover($query_struct);
    return $this->recv_count_food_ugc_image_cover();
  }

  public function send_count_food_ugc_image_cover(\ERS\TFoodUgcImageCoverQuery $query_struct)
  {
    $args = new \ERS\ElemeRestaurantService_count_food_ugc_image_cover_args();
    $args->query_struct = $query_struct;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'count_food_ugc_image_cover', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('count_food_ugc_image_cover', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_count_food_ugc_image_cover()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_count_food_ugc_image_cover_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_count_food_ugc_image_cover_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("count_food_ugc_image_cover failed: unknown result");
  }

  public function query_food_ugc_image_cover(\ERS\TFoodUgcImageCoverQuery $query_struct)
  {
    $this->send_query_food_ugc_image_cover($query_struct);
    return $this->recv_query_food_ugc_image_cover();
  }

  public function send_query_food_ugc_image_cover(\ERS\TFoodUgcImageCoverQuery $query_struct)
  {
    $args = new \ERS\ElemeRestaurantService_query_food_ugc_image_cover_args();
    $args->query_struct = $query_struct;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'query_food_ugc_image_cover', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('query_food_ugc_image_cover', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_query_food_ugc_image_cover()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_query_food_ugc_image_cover_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_query_food_ugc_image_cover_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("query_food_ugc_image_cover failed: unknown result");
  }

  public function like_food_ugc_image($user_id, $food_ugc_image_id)
  {
    $this->send_like_food_ugc_image($user_id, $food_ugc_image_id);
    return $this->recv_like_food_ugc_image();
  }

  public function send_like_food_ugc_image($user_id, $food_ugc_image_id)
  {
    $args = new \ERS\ElemeRestaurantService_like_food_ugc_image_args();
    $args->user_id = $user_id;
    $args->food_ugc_image_id = $food_ugc_image_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'like_food_ugc_image', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('like_food_ugc_image', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_like_food_ugc_image()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_like_food_ugc_image_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_like_food_ugc_image_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("like_food_ugc_image failed: unknown result");
  }

  public function dislike_food_ugc_image($user_id, $food_ugc_image_id)
  {
    $this->send_dislike_food_ugc_image($user_id, $food_ugc_image_id);
    return $this->recv_dislike_food_ugc_image();
  }

  public function send_dislike_food_ugc_image($user_id, $food_ugc_image_id)
  {
    $args = new \ERS\ElemeRestaurantService_dislike_food_ugc_image_args();
    $args->user_id = $user_id;
    $args->food_ugc_image_id = $food_ugc_image_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'dislike_food_ugc_image', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('dislike_food_ugc_image', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_dislike_food_ugc_image()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_dislike_food_ugc_image_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_dislike_food_ugc_image_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("dislike_food_ugc_image failed: unknown result");
  }

  public function filter_liked_food_ugc_image_ids($user_id, $food_ugc_image_ids)
  {
    $this->send_filter_liked_food_ugc_image_ids($user_id, $food_ugc_image_ids);
    return $this->recv_filter_liked_food_ugc_image_ids();
  }

  public function send_filter_liked_food_ugc_image_ids($user_id, $food_ugc_image_ids)
  {
    $args = new \ERS\ElemeRestaurantService_filter_liked_food_ugc_image_ids_args();
    $args->user_id = $user_id;
    $args->food_ugc_image_ids = $food_ugc_image_ids;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'filter_liked_food_ugc_image_ids', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('filter_liked_food_ugc_image_ids', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_filter_liked_food_ugc_image_ids()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_filter_liked_food_ugc_image_ids_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_filter_liked_food_ugc_image_ids_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("filter_liked_food_ugc_image_ids failed: unknown result");
  }

  public function get_liked_food_ugc_image_cover_ids_by_user($restaurant_id, $user_id)
  {
    $this->send_get_liked_food_ugc_image_cover_ids_by_user($restaurant_id, $user_id);
    return $this->recv_get_liked_food_ugc_image_cover_ids_by_user();
  }

  public function send_get_liked_food_ugc_image_cover_ids_by_user($restaurant_id, $user_id)
  {
    $args = new \ERS\ElemeRestaurantService_get_liked_food_ugc_image_cover_ids_by_user_args();
    $args->restaurant_id = $restaurant_id;
    $args->user_id = $user_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'get_liked_food_ugc_image_cover_ids_by_user', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('get_liked_food_ugc_image_cover_ids_by_user', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_get_liked_food_ugc_image_cover_ids_by_user()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_get_liked_food_ugc_image_cover_ids_by_user_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_get_liked_food_ugc_image_cover_ids_by_user_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("get_liked_food_ugc_image_cover_ids_by_user failed: unknown result");
  }

  public function report_food_ugc_image($user_id, $food_ugc_image_id)
  {
    $this->send_report_food_ugc_image($user_id, $food_ugc_image_id);
    $this->recv_report_food_ugc_image();
  }

  public function send_report_food_ugc_image($user_id, $food_ugc_image_id)
  {
    $args = new \ERS\ElemeRestaurantService_report_food_ugc_image_args();
    $args->user_id = $user_id;
    $args->food_ugc_image_id = $food_ugc_image_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'report_food_ugc_image', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('report_food_ugc_image', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_report_food_ugc_image()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_report_food_ugc_image_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_report_food_ugc_image_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    return;
  }

  public function mget_garnish($garnish_ids)
  {
    $this->send_mget_garnish($garnish_ids);
    return $this->recv_mget_garnish();
  }

  public function send_mget_garnish($garnish_ids)
  {
    $args = new \ERS\ElemeRestaurantService_mget_garnish_args();
    $args->garnish_ids = $garnish_ids;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'mget_garnish', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('mget_garnish', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_mget_garnish()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_mget_garnish_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_mget_garnish_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("mget_garnish failed: unknown result");
  }

  public function mget_garnish_by_food($food_id)
  {
    $this->send_mget_garnish_by_food($food_id);
    return $this->recv_mget_garnish_by_food();
  }

  public function send_mget_garnish_by_food($food_id)
  {
    $args = new \ERS\ElemeRestaurantService_mget_garnish_by_food_args();
    $args->food_id = $food_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'mget_garnish_by_food', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('mget_garnish_by_food', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_mget_garnish_by_food()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_mget_garnish_by_food_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_mget_garnish_by_food_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("mget_garnish_by_food failed: unknown result");
  }

  public function mget_food_flavor_by_food_ids($food_ids)
  {
    $this->send_mget_food_flavor_by_food_ids($food_ids);
    return $this->recv_mget_food_flavor_by_food_ids();
  }

  public function send_mget_food_flavor_by_food_ids($food_ids)
  {
    $args = new \ERS\ElemeRestaurantService_mget_food_flavor_by_food_ids_args();
    $args->food_ids = $food_ids;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'mget_food_flavor_by_food_ids', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('mget_food_flavor_by_food_ids', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_mget_food_flavor_by_food_ids()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_mget_food_flavor_by_food_ids_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_mget_food_flavor_by_food_ids_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("mget_food_flavor_by_food_ids failed: unknown result");
  }

  public function get_garnish_category($garnish_category_id)
  {
    $this->send_get_garnish_category($garnish_category_id);
    return $this->recv_get_garnish_category();
  }

  public function send_get_garnish_category($garnish_category_id)
  {
    $args = new \ERS\ElemeRestaurantService_get_garnish_category_args();
    $args->garnish_category_id = $garnish_category_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'get_garnish_category', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('get_garnish_category', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_get_garnish_category()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_get_garnish_category_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_get_garnish_category_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("get_garnish_category failed: unknown result");
  }

  public function mget_garnish_category($garnish_category_ids)
  {
    $this->send_mget_garnish_category($garnish_category_ids);
    return $this->recv_mget_garnish_category();
  }

  public function send_mget_garnish_category($garnish_category_ids)
  {
    $args = new \ERS\ElemeRestaurantService_mget_garnish_category_args();
    $args->garnish_category_ids = $garnish_category_ids;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'mget_garnish_category', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('mget_garnish_category', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_mget_garnish_category()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_mget_garnish_category_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_mget_garnish_category_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("mget_garnish_category failed: unknown result");
  }

  public function mget_garnish_category_by_food($food_id)
  {
    $this->send_mget_garnish_category_by_food($food_id);
    return $this->recv_mget_garnish_category_by_food();
  }

  public function send_mget_garnish_category_by_food($food_id)
  {
    $args = new \ERS\ElemeRestaurantService_mget_garnish_category_by_food_args();
    $args->food_id = $food_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'mget_garnish_category_by_food', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('mget_garnish_category_by_food', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_mget_garnish_category_by_food()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_mget_garnish_category_by_food_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_mget_garnish_category_by_food_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("mget_garnish_category_by_food failed: unknown result");
  }

  public function query_activity(\ERS\TActivityQuery $query_struct)
  {
    $this->send_query_activity($query_struct);
    return $this->recv_query_activity();
  }

  public function send_query_activity(\ERS\TActivityQuery $query_struct)
  {
    $args = new \ERS\ElemeRestaurantService_query_activity_args();
    $args->query_struct = $query_struct;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'query_activity', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('query_activity', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_query_activity()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_query_activity_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_query_activity_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("query_activity failed: unknown result");
  }

  public function get_activity_by_sn($sn)
  {
    $this->send_get_activity_by_sn($sn);
    return $this->recv_get_activity_by_sn();
  }

  public function send_get_activity_by_sn($sn)
  {
    $args = new \ERS\ElemeRestaurantService_get_activity_by_sn_args();
    $args->sn = $sn;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'get_activity_by_sn', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('get_activity_by_sn', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_get_activity_by_sn()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_get_activity_by_sn_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_get_activity_by_sn_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("get_activity_by_sn failed: unknown result");
  }

  public function get_activity_ids_by_geohash($geohash)
  {
    $this->send_get_activity_ids_by_geohash($geohash);
    return $this->recv_get_activity_ids_by_geohash();
  }

  public function send_get_activity_ids_by_geohash($geohash)
  {
    $args = new \ERS\ElemeRestaurantService_get_activity_ids_by_geohash_args();
    $args->geohash = $geohash;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'get_activity_ids_by_geohash', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('get_activity_ids_by_geohash', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_get_activity_ids_by_geohash()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_get_activity_ids_by_geohash_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_get_activity_ids_by_geohash_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("get_activity_ids_by_geohash failed: unknown result");
  }

  public function get_dock_corp($id)
  {
    $this->send_get_dock_corp($id);
    return $this->recv_get_dock_corp();
  }

  public function send_get_dock_corp($id)
  {
    $args = new \ERS\ElemeRestaurantService_get_dock_corp_args();
    $args->id = $id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'get_dock_corp', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('get_dock_corp', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_get_dock_corp()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_get_dock_corp_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_get_dock_corp_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("get_dock_corp failed: unknown result");
  }

  public function get_dock_corp_by_restaurant($restaurant_id)
  {
    $this->send_get_dock_corp_by_restaurant($restaurant_id);
    return $this->recv_get_dock_corp_by_restaurant();
  }

  public function send_get_dock_corp_by_restaurant($restaurant_id)
  {
    $args = new \ERS\ElemeRestaurantService_get_dock_corp_by_restaurant_args();
    $args->restaurant_id = $restaurant_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'get_dock_corp_by_restaurant', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('get_dock_corp_by_restaurant', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_get_dock_corp_by_restaurant()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_get_dock_corp_by_restaurant_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_get_dock_corp_by_restaurant_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("get_dock_corp_by_restaurant failed: unknown result");
  }

  public function get_dock_corp_by_app($app_id)
  {
    $this->send_get_dock_corp_by_app($app_id);
    return $this->recv_get_dock_corp_by_app();
  }

  public function send_get_dock_corp_by_app($app_id)
  {
    $args = new \ERS\ElemeRestaurantService_get_dock_corp_by_app_args();
    $args->app_id = $app_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'get_dock_corp_by_app', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('get_dock_corp_by_app', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_get_dock_corp_by_app()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_get_dock_corp_by_app_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_get_dock_corp_by_app_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("get_dock_corp_by_app failed: unknown result");
  }

  public function mget_dock_corp($ids)
  {
    $this->send_mget_dock_corp($ids);
    return $this->recv_mget_dock_corp();
  }

  public function send_mget_dock_corp($ids)
  {
    $args = new \ERS\ElemeRestaurantService_mget_dock_corp_args();
    $args->ids = $ids;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'mget_dock_corp', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('mget_dock_corp', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_mget_dock_corp()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_mget_dock_corp_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_mget_dock_corp_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("mget_dock_corp failed: unknown result");
  }

  public function count_dock_corp(\ERS\TDockCorpQuery $query_struct)
  {
    $this->send_count_dock_corp($query_struct);
    return $this->recv_count_dock_corp();
  }

  public function send_count_dock_corp(\ERS\TDockCorpQuery $query_struct)
  {
    $args = new \ERS\ElemeRestaurantService_count_dock_corp_args();
    $args->query_struct = $query_struct;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'count_dock_corp', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('count_dock_corp', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_count_dock_corp()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_count_dock_corp_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_count_dock_corp_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("count_dock_corp failed: unknown result");
  }

  public function query_dock_corp(\ERS\TDockCorpQuery $query_struct)
  {
    $this->send_query_dock_corp($query_struct);
    return $this->recv_query_dock_corp();
  }

  public function send_query_dock_corp(\ERS\TDockCorpQuery $query_struct)
  {
    $args = new \ERS\ElemeRestaurantService_query_dock_corp_args();
    $args->query_struct = $query_struct;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'query_dock_corp', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('query_dock_corp', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_query_dock_corp()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_query_dock_corp_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_query_dock_corp_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("query_dock_corp failed: unknown result");
  }

  public function get_dock_corp_restaurant($id)
  {
    $this->send_get_dock_corp_restaurant($id);
    return $this->recv_get_dock_corp_restaurant();
  }

  public function send_get_dock_corp_restaurant($id)
  {
    $args = new \ERS\ElemeRestaurantService_get_dock_corp_restaurant_args();
    $args->id = $id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'get_dock_corp_restaurant', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('get_dock_corp_restaurant', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_get_dock_corp_restaurant()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_get_dock_corp_restaurant_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_get_dock_corp_restaurant_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("get_dock_corp_restaurant failed: unknown result");
  }

  public function mget_dock_corp_restaurant($ids)
  {
    $this->send_mget_dock_corp_restaurant($ids);
    return $this->recv_mget_dock_corp_restaurant();
  }

  public function send_mget_dock_corp_restaurant($ids)
  {
    $args = new \ERS\ElemeRestaurantService_mget_dock_corp_restaurant_args();
    $args->ids = $ids;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'mget_dock_corp_restaurant', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('mget_dock_corp_restaurant', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_mget_dock_corp_restaurant()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_mget_dock_corp_restaurant_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_mget_dock_corp_restaurant_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("mget_dock_corp_restaurant failed: unknown result");
  }

  public function query_dock_corp_restaurant($corp_ids, $restaurant_ids)
  {
    $this->send_query_dock_corp_restaurant($corp_ids, $restaurant_ids);
    return $this->recv_query_dock_corp_restaurant();
  }

  public function send_query_dock_corp_restaurant($corp_ids, $restaurant_ids)
  {
    $args = new \ERS\ElemeRestaurantService_query_dock_corp_restaurant_args();
    $args->corp_ids = $corp_ids;
    $args->restaurant_ids = $restaurant_ids;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'query_dock_corp_restaurant', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('query_dock_corp_restaurant', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_query_dock_corp_restaurant()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_query_dock_corp_restaurant_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_query_dock_corp_restaurant_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("query_dock_corp_restaurant failed: unknown result");
  }

  public function get_logo($logo_id)
  {
    $this->send_get_logo($logo_id);
    return $this->recv_get_logo();
  }

  public function send_get_logo($logo_id)
  {
    $args = new \ERS\ElemeRestaurantService_get_logo_args();
    $args->logo_id = $logo_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'get_logo', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('get_logo', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_get_logo()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_get_logo_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_get_logo_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("get_logo failed: unknown result");
  }

  public function mget_logo($logo_ids)
  {
    $this->send_mget_logo($logo_ids);
    return $this->recv_mget_logo();
  }

  public function send_mget_logo($logo_ids)
  {
    $args = new \ERS\ElemeRestaurantService_mget_logo_args();
    $args->logo_ids = $logo_ids;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'mget_logo', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('mget_logo', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_mget_logo()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_mget_logo_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_mget_logo_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("mget_logo failed: unknown result");
  }

  public function get_current_logo()
  {
    $this->send_get_current_logo();
    return $this->recv_get_current_logo();
  }

  public function send_get_current_logo()
  {
    $args = new \ERS\ElemeRestaurantService_get_current_logo_args();
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'get_current_logo', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('get_current_logo', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_get_current_logo()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_get_current_logo_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_get_current_logo_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("get_current_logo failed: unknown result");
  }

  public function get_location_by_restaurant($restaurant_id)
  {
    $this->send_get_location_by_restaurant($restaurant_id);
    return $this->recv_get_location_by_restaurant();
  }

  public function send_get_location_by_restaurant($restaurant_id)
  {
    $args = new \ERS\ElemeRestaurantService_get_location_by_restaurant_args();
    $args->restaurant_id = $restaurant_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'get_location_by_restaurant', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('get_location_by_restaurant', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_get_location_by_restaurant()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_get_location_by_restaurant_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_get_location_by_restaurant_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("get_location_by_restaurant failed: unknown result");
  }

  public function get_location_by_region($region_id)
  {
    $this->send_get_location_by_region($region_id);
    return $this->recv_get_location_by_region();
  }

  public function send_get_location_by_region($region_id)
  {
    $args = new \ERS\ElemeRestaurantService_get_location_by_region_args();
    $args->region_id = $region_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'get_location_by_region', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('get_location_by_region', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_get_location_by_region()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_get_location_by_region_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_get_location_by_region_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("get_location_by_region failed: unknown result");
  }

  public function get_free_gift_activity($free_gift_activity_id)
  {
    $this->send_get_free_gift_activity($free_gift_activity_id);
    return $this->recv_get_free_gift_activity();
  }

  public function send_get_free_gift_activity($free_gift_activity_id)
  {
    $args = new \ERS\ElemeRestaurantService_get_free_gift_activity_args();
    $args->free_gift_activity_id = $free_gift_activity_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'get_free_gift_activity', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('get_free_gift_activity', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_get_free_gift_activity()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_get_free_gift_activity_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_get_free_gift_activity_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("get_free_gift_activity failed: unknown result");
  }

  public function mget_free_gift_activity($free_gift_activity_ids)
  {
    $this->send_mget_free_gift_activity($free_gift_activity_ids);
    return $this->recv_mget_free_gift_activity();
  }

  public function send_mget_free_gift_activity($free_gift_activity_ids)
  {
    $args = new \ERS\ElemeRestaurantService_mget_free_gift_activity_args();
    $args->free_gift_activity_ids = $free_gift_activity_ids;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'mget_free_gift_activity', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('mget_free_gift_activity', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_mget_free_gift_activity()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_mget_free_gift_activity_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_mget_free_gift_activity_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("mget_free_gift_activity failed: unknown result");
  }

  public function mget_free_gift_activity_list()
  {
    $this->send_mget_free_gift_activity_list();
    return $this->recv_mget_free_gift_activity_list();
  }

  public function send_mget_free_gift_activity_list()
  {
    $args = new \ERS\ElemeRestaurantService_mget_free_gift_activity_list_args();
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'mget_free_gift_activity_list', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('mget_free_gift_activity_list', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_mget_free_gift_activity_list()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_mget_free_gift_activity_list_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_mget_free_gift_activity_list_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("mget_free_gift_activity_list failed: unknown result");
  }

  public function mget_free_gift_activity_by_attributes($attrs)
  {
    $this->send_mget_free_gift_activity_by_attributes($attrs);
    return $this->recv_mget_free_gift_activity_by_attributes();
  }

  public function send_mget_free_gift_activity_by_attributes($attrs)
  {
    $args = new \ERS\ElemeRestaurantService_mget_free_gift_activity_by_attributes_args();
    $args->attrs = $attrs;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'mget_free_gift_activity_by_attributes', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('mget_free_gift_activity_by_attributes', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_mget_free_gift_activity_by_attributes()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_mget_free_gift_activity_by_attributes_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_mget_free_gift_activity_by_attributes_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("mget_free_gift_activity_by_attributes failed: unknown result");
  }

  public function query_by_entry($entry_id)
  {
    $this->send_query_by_entry($entry_id);
    return $this->recv_query_by_entry();
  }

  public function send_query_by_entry($entry_id)
  {
    $args = new \ERS\ElemeRestaurantService_query_by_entry_args();
    $args->entry_id = $entry_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'query_by_entry', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('query_by_entry', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_query_by_entry()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_query_by_entry_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_query_by_entry_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("query_by_entry failed: unknown result");
  }

  public function query_premium_by_entry($entry_id)
  {
    $this->send_query_premium_by_entry($entry_id);
    return $this->recv_query_premium_by_entry();
  }

  public function send_query_premium_by_entry($entry_id)
  {
    $args = new \ERS\ElemeRestaurantService_query_premium_by_entry_args();
    $args->entry_id = $entry_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'query_premium_by_entry', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('query_premium_by_entry', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_query_premium_by_entry()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_query_premium_by_entry_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_query_premium_by_entry_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("query_premium_by_entry failed: unknown result");
  }

  public function query_premium_by_geohash2($geohash, $offset, $limit)
  {
    $this->send_query_premium_by_geohash2($geohash, $offset, $limit);
    return $this->recv_query_premium_by_geohash2();
  }

  public function send_query_premium_by_geohash2($geohash, $offset, $limit)
  {
    $args = new \ERS\ElemeRestaurantService_query_premium_by_geohash2_args();
    $args->geohash = $geohash;
    $args->offset = $offset;
    $args->limit = $limit;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'query_premium_by_geohash2', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('query_premium_by_geohash2', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_query_premium_by_geohash2()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_query_premium_by_geohash2_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_query_premium_by_geohash2_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("query_premium_by_geohash2 failed: unknown result");
  }

  public function count_premium_by_geohash($geohash)
  {
    $this->send_count_premium_by_geohash($geohash);
    return $this->recv_count_premium_by_geohash();
  }

  public function send_count_premium_by_geohash($geohash)
  {
    $args = new \ERS\ElemeRestaurantService_count_premium_by_geohash_args();
    $args->geohash = $geohash;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'count_premium_by_geohash', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('count_premium_by_geohash', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_count_premium_by_geohash()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_count_premium_by_geohash_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_count_premium_by_geohash_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("count_premium_by_geohash failed: unknown result");
  }

  public function query_bookable_by_entry($entry_id, $deliver_time)
  {
    $this->send_query_bookable_by_entry($entry_id, $deliver_time);
    return $this->recv_query_bookable_by_entry();
  }

  public function send_query_bookable_by_entry($entry_id, $deliver_time)
  {
    $args = new \ERS\ElemeRestaurantService_query_bookable_by_entry_args();
    $args->entry_id = $entry_id;
    $args->deliver_time = $deliver_time;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'query_bookable_by_entry', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('query_bookable_by_entry', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_query_bookable_by_entry()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_query_bookable_by_entry_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_query_bookable_by_entry_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("query_bookable_by_entry failed: unknown result");
  }

  public function query_favor_by_geohash($user_id, $geohash)
  {
    $this->send_query_favor_by_geohash($user_id, $geohash);
    return $this->recv_query_favor_by_geohash();
  }

  public function send_query_favor_by_geohash($user_id, $geohash)
  {
    $args = new \ERS\ElemeRestaurantService_query_favor_by_geohash_args();
    $args->user_id = $user_id;
    $args->geohash = $geohash;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'query_favor_by_geohash', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('query_favor_by_geohash', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_query_favor_by_geohash()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_query_favor_by_geohash_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_query_favor_by_geohash_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("query_favor_by_geohash failed: unknown result");
  }

  public function query_favor_by_entry($user_id, $entry_id)
  {
    $this->send_query_favor_by_entry($user_id, $entry_id);
    return $this->recv_query_favor_by_entry();
  }

  public function send_query_favor_by_entry($user_id, $entry_id)
  {
    $args = new \ERS\ElemeRestaurantService_query_favor_by_entry_args();
    $args->user_id = $user_id;
    $args->entry_id = $entry_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'query_favor_by_entry', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('query_favor_by_entry', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_query_favor_by_entry()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_query_favor_by_entry_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_query_favor_by_entry_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("query_favor_by_entry failed: unknown result");
  }

  public function query_favor_ids($user_id)
  {
    $this->send_query_favor_ids($user_id);
    return $this->recv_query_favor_ids();
  }

  public function send_query_favor_ids($user_id)
  {
    $args = new \ERS\ElemeRestaurantService_query_favor_ids_args();
    $args->user_id = $user_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'query_favor_ids', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('query_favor_ids', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_query_favor_ids()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_query_favor_ids_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_query_favor_ids_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("query_favor_ids failed: unknown result");
  }

  public function query_favor($user_id)
  {
    $this->send_query_favor($user_id);
    return $this->recv_query_favor();
  }

  public function send_query_favor($user_id)
  {
    $args = new \ERS\ElemeRestaurantService_query_favor_args();
    $args->user_id = $user_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'query_favor', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('query_favor', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_query_favor()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_query_favor_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_query_favor_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("query_favor failed: unknown result");
  }

  public function query_by_geohash($geohash, $offset, $limit)
  {
    $this->send_query_by_geohash($geohash, $offset, $limit);
    return $this->recv_query_by_geohash();
  }

  public function send_query_by_geohash($geohash, $offset, $limit)
  {
    $args = new \ERS\ElemeRestaurantService_query_by_geohash_args();
    $args->geohash = $geohash;
    $args->offset = $offset;
    $args->limit = $limit;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'query_by_geohash', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('query_by_geohash', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_query_by_geohash()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_query_by_geohash_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_query_by_geohash_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("query_by_geohash failed: unknown result");
  }

  public function query_by_psn($psn, $offset, $limit)
  {
    $this->send_query_by_psn($psn, $offset, $limit);
    return $this->recv_query_by_psn();
  }

  public function send_query_by_psn($psn, $offset, $limit)
  {
    $args = new \ERS\ElemeRestaurantService_query_by_psn_args();
    $args->psn = $psn;
    $args->offset = $offset;
    $args->limit = $limit;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'query_by_psn', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('query_by_psn', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_query_by_psn()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_query_by_psn_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_query_by_psn_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("query_by_psn failed: unknown result");
  }

  public function query_premium_by_geohash($geohash, $offset, $limit)
  {
    $this->send_query_premium_by_geohash($geohash, $offset, $limit);
    return $this->recv_query_premium_by_geohash();
  }

  public function send_query_premium_by_geohash($geohash, $offset, $limit)
  {
    $args = new \ERS\ElemeRestaurantService_query_premium_by_geohash_args();
    $args->geohash = $geohash;
    $args->offset = $offset;
    $args->limit = $limit;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'query_premium_by_geohash', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('query_premium_by_geohash', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_query_premium_by_geohash()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_query_premium_by_geohash_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_query_premium_by_geohash_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("query_premium_by_geohash failed: unknown result");
  }

  public function query_premium_by_psn($psn, $offset, $limit)
  {
    $this->send_query_premium_by_psn($psn, $offset, $limit);
    return $this->recv_query_premium_by_psn();
  }

  public function send_query_premium_by_psn($psn, $offset, $limit)
  {
    $args = new \ERS\ElemeRestaurantService_query_premium_by_psn_args();
    $args->psn = $psn;
    $args->offset = $offset;
    $args->limit = $limit;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'query_premium_by_psn', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('query_premium_by_psn', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_query_premium_by_psn()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_query_premium_by_psn_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_query_premium_by_psn_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("query_premium_by_psn failed: unknown result");
  }

  public function query_by_geohash2($geohash, $offset, $limit)
  {
    $this->send_query_by_geohash2($geohash, $offset, $limit);
    return $this->recv_query_by_geohash2();
  }

  public function send_query_by_geohash2($geohash, $offset, $limit)
  {
    $args = new \ERS\ElemeRestaurantService_query_by_geohash2_args();
    $args->geohash = $geohash;
    $args->offset = $offset;
    $args->limit = $limit;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'query_by_geohash2', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('query_by_geohash2', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_query_by_geohash2()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_query_by_geohash2_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_query_by_geohash2_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("query_by_geohash2 failed: unknown result");
  }

  public function query_bookable_by_geohash2($geohash, $deliver_time)
  {
    $this->send_query_bookable_by_geohash2($geohash, $deliver_time);
    return $this->recv_query_bookable_by_geohash2();
  }

  public function send_query_bookable_by_geohash2($geohash, $deliver_time)
  {
    $args = new \ERS\ElemeRestaurantService_query_bookable_by_geohash2_args();
    $args->geohash = $geohash;
    $args->deliver_time = $deliver_time;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'query_bookable_by_geohash2', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('query_bookable_by_geohash2', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_query_bookable_by_geohash2()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_query_bookable_by_geohash2_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_query_bookable_by_geohash2_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("query_bookable_by_geohash2 failed: unknown result");
  }

  public function query_favor_food_ids_by_restaurant($user_id, $restaurant_id)
  {
    $this->send_query_favor_food_ids_by_restaurant($user_id, $restaurant_id);
    return $this->recv_query_favor_food_ids_by_restaurant();
  }

  public function send_query_favor_food_ids_by_restaurant($user_id, $restaurant_id)
  {
    $args = new \ERS\ElemeRestaurantService_query_favor_food_ids_by_restaurant_args();
    $args->user_id = $user_id;
    $args->restaurant_id = $restaurant_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'query_favor_food_ids_by_restaurant', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('query_favor_food_ids_by_restaurant', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_query_favor_food_ids_by_restaurant()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_query_favor_food_ids_by_restaurant_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_query_favor_food_ids_by_restaurant_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("query_favor_food_ids_by_restaurant failed: unknown result");
  }

  public function query_favor_food_ids_by_user($user_id)
  {
    $this->send_query_favor_food_ids_by_user($user_id);
    return $this->recv_query_favor_food_ids_by_user();
  }

  public function send_query_favor_food_ids_by_user($user_id)
  {
    $args = new \ERS\ElemeRestaurantService_query_favor_food_ids_by_user_args();
    $args->user_id = $user_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'query_favor_food_ids_by_user', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('query_favor_food_ids_by_user', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_query_favor_food_ids_by_user()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_query_favor_food_ids_by_user_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_query_favor_food_ids_by_user_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("query_favor_food_ids_by_user failed: unknown result");
  }

  public function query_favor_food_by_user($user_id, $offset, $limit)
  {
    $this->send_query_favor_food_by_user($user_id, $offset, $limit);
    return $this->recv_query_favor_food_by_user();
  }

  public function send_query_favor_food_by_user($user_id, $offset, $limit)
  {
    $args = new \ERS\ElemeRestaurantService_query_favor_food_by_user_args();
    $args->user_id = $user_id;
    $args->offset = $offset;
    $args->limit = $limit;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'query_favor_food_by_user', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('query_favor_food_by_user', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_query_favor_food_by_user()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_query_favor_food_by_user_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_query_favor_food_by_user_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("query_favor_food_by_user failed: unknown result");
  }

  public function query_food(\ERS\TFoodQuery $query_struct)
  {
    $this->send_query_food($query_struct);
    return $this->recv_query_food();
  }

  public function send_query_food(\ERS\TFoodQuery $query_struct)
  {
    $args = new \ERS\ElemeRestaurantService_query_food_args();
    $args->query_struct = $query_struct;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'query_food', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('query_food', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_query_food()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_query_food_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_query_food_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("query_food failed: unknown result");
  }

  public function query_food_by_restaurant($restaurant_id)
  {
    $this->send_query_food_by_restaurant($restaurant_id);
    return $this->recv_query_food_by_restaurant();
  }

  public function send_query_food_by_restaurant($restaurant_id)
  {
    $args = new \ERS\ElemeRestaurantService_query_food_by_restaurant_args();
    $args->restaurant_id = $restaurant_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'query_food_by_restaurant', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('query_food_by_restaurant', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_query_food_by_restaurant()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_query_food_by_restaurant_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_query_food_by_restaurant_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("query_food_by_restaurant failed: unknown result");
  }

  public function query_food_category(\ERS\TFoodCategoryQuery $query_struct)
  {
    $this->send_query_food_category($query_struct);
    return $this->recv_query_food_category();
  }

  public function send_query_food_category(\ERS\TFoodCategoryQuery $query_struct)
  {
    $args = new \ERS\ElemeRestaurantService_query_food_category_args();
    $args->query_struct = $query_struct;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'query_food_category', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('query_food_category', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_query_food_category()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_query_food_category_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_query_food_category_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("query_food_category failed: unknown result");
  }

  public function query_food_garnish_category(\ERS\TFoodGarnishCategoryQuery $query_struct)
  {
    $this->send_query_food_garnish_category($query_struct);
    return $this->recv_query_food_garnish_category();
  }

  public function send_query_food_garnish_category(\ERS\TFoodGarnishCategoryQuery $query_struct)
  {
    $args = new \ERS\ElemeRestaurantService_query_food_garnish_category_args();
    $args->query_struct = $query_struct;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'query_food_garnish_category', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('query_food_garnish_category', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_query_food_garnish_category()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_query_food_garnish_category_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_query_food_garnish_category_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("query_food_garnish_category failed: unknown result");
  }

  public function query_food_category_by_restaurant($restaurant_id)
  {
    $this->send_query_food_category_by_restaurant($restaurant_id);
    return $this->recv_query_food_category_by_restaurant();
  }

  public function send_query_food_category_by_restaurant($restaurant_id)
  {
    $args = new \ERS\ElemeRestaurantService_query_food_category_by_restaurant_args();
    $args->restaurant_id = $restaurant_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'query_food_category_by_restaurant', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('query_food_category_by_restaurant', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_query_food_category_by_restaurant()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_query_food_category_by_restaurant_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_query_food_category_by_restaurant_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("query_food_category_by_restaurant failed: unknown result");
  }

  public function query_garnish(\ERS\TGarnishQuery $query_struct)
  {
    $this->send_query_garnish($query_struct);
    return $this->recv_query_garnish();
  }

  public function send_query_garnish(\ERS\TGarnishQuery $query_struct)
  {
    $args = new \ERS\ElemeRestaurantService_query_garnish_args();
    $args->query_struct = $query_struct;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'query_garnish', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('query_garnish', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_query_garnish()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_query_garnish_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_query_garnish_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("query_garnish failed: unknown result");
  }

  public function query_garnish_category(\ERS\TGarnishCategoryQuery $query_struct)
  {
    $this->send_query_garnish_category($query_struct);
    return $this->recv_query_garnish_category();
  }

  public function send_query_garnish_category(\ERS\TGarnishCategoryQuery $query_struct)
  {
    $args = new \ERS\ElemeRestaurantService_query_garnish_category_args();
    $args->query_struct = $query_struct;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'query_garnish_category', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('query_garnish_category', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_query_garnish_category()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_query_garnish_category_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_query_garnish_category_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("query_garnish_category failed: unknown result");
  }

  public function get_comment($comment_id)
  {
    $this->send_get_comment($comment_id);
    return $this->recv_get_comment();
  }

  public function send_get_comment($comment_id)
  {
    $args = new \ERS\ElemeRestaurantService_get_comment_args();
    $args->comment_id = $comment_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'get_comment', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('get_comment', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_get_comment()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_get_comment_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_get_comment_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("get_comment failed: unknown result");
  }

  public function query_entry_by_restaurant($restaurant_id)
  {
    $this->send_query_entry_by_restaurant($restaurant_id);
    return $this->recv_query_entry_by_restaurant();
  }

  public function send_query_entry_by_restaurant($restaurant_id)
  {
    $args = new \ERS\ElemeRestaurantService_query_entry_by_restaurant_args();
    $args->restaurant_id = $restaurant_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'query_entry_by_restaurant', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('query_entry_by_restaurant', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_query_entry_by_restaurant()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_query_entry_by_restaurant_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_query_entry_by_restaurant_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("query_entry_by_restaurant failed: unknown result");
  }

  public function query_hot_food_by_entry($entry_id)
  {
    $this->send_query_hot_food_by_entry($entry_id);
    return $this->recv_query_hot_food_by_entry();
  }

  public function send_query_hot_food_by_entry($entry_id)
  {
    $args = new \ERS\ElemeRestaurantService_query_hot_food_by_entry_args();
    $args->entry_id = $entry_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'query_hot_food_by_entry', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('query_hot_food_by_entry', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_query_hot_food_by_entry()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_query_hot_food_by_entry_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_query_hot_food_by_entry_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("query_hot_food_by_entry failed: unknown result");
  }

  public function query_hot_food_by_geohash($geohash)
  {
    $this->send_query_hot_food_by_geohash($geohash);
    return $this->recv_query_hot_food_by_geohash();
  }

  public function send_query_hot_food_by_geohash($geohash)
  {
    $args = new \ERS\ElemeRestaurantService_query_hot_food_by_geohash_args();
    $args->geohash = $geohash;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'query_hot_food_by_geohash', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('query_hot_food_by_geohash', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_query_hot_food_by_geohash()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_query_hot_food_by_geohash_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_query_hot_food_by_geohash_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("query_hot_food_by_geohash failed: unknown result");
  }

  public function query_hot_food_by_restaurant($restaurant_id, $limit)
  {
    $this->send_query_hot_food_by_restaurant($restaurant_id, $limit);
    return $this->recv_query_hot_food_by_restaurant();
  }

  public function send_query_hot_food_by_restaurant($restaurant_id, $limit)
  {
    $args = new \ERS\ElemeRestaurantService_query_hot_food_by_restaurant_args();
    $args->restaurant_id = $restaurant_id;
    $args->limit = $limit;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'query_hot_food_by_restaurant', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('query_hot_food_by_restaurant', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_query_hot_food_by_restaurant()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_query_hot_food_by_restaurant_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_query_hot_food_by_restaurant_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("query_hot_food_by_restaurant failed: unknown result");
  }

  public function query_comment_with_replies(\ERS\TRestaurantCommentQuery $query_struct)
  {
    $this->send_query_comment_with_replies($query_struct);
    return $this->recv_query_comment_with_replies();
  }

  public function send_query_comment_with_replies(\ERS\TRestaurantCommentQuery $query_struct)
  {
    $args = new \ERS\ElemeRestaurantService_query_comment_with_replies_args();
    $args->query_struct = $query_struct;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'query_comment_with_replies', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('query_comment_with_replies', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_query_comment_with_replies()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_query_comment_with_replies_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_query_comment_with_replies_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("query_comment_with_replies failed: unknown result");
  }

  public function query_all_comment(\ERS\TRestaurantCommentQuery $query_struct)
  {
    $this->send_query_all_comment($query_struct);
    return $this->recv_query_all_comment();
  }

  public function send_query_all_comment(\ERS\TRestaurantCommentQuery $query_struct)
  {
    $args = new \ERS\ElemeRestaurantService_query_all_comment_args();
    $args->query_struct = $query_struct;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'query_all_comment', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('query_all_comment', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_query_all_comment()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_query_all_comment_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_query_all_comment_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("query_all_comment failed: unknown result");
  }

  public function get_director_id($restaurant_id)
  {
    $this->send_get_director_id($restaurant_id);
    return $this->recv_get_director_id();
  }

  public function send_get_director_id($restaurant_id)
  {
    $args = new \ERS\ElemeRestaurantService_get_director_id_args();
    $args->restaurant_id = $restaurant_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'get_director_id', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('get_director_id', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_get_director_id()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_get_director_id_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_get_director_id_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("get_director_id failed: unknown result");
  }

  public function get_director_ids_by_area($region_ids, $region_group_ids, $city_ids)
  {
    $this->send_get_director_ids_by_area($region_ids, $region_group_ids, $city_ids);
    return $this->recv_get_director_ids_by_area();
  }

  public function send_get_director_ids_by_area($region_ids, $region_group_ids, $city_ids)
  {
    $args = new \ERS\ElemeRestaurantService_get_director_ids_by_area_args();
    $args->region_ids = $region_ids;
    $args->region_group_ids = $region_group_ids;
    $args->city_ids = $city_ids;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'get_director_ids_by_area', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('get_director_ids_by_area', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_get_director_ids_by_area()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_get_director_ids_by_area_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_get_director_ids_by_area_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("get_director_ids_by_area failed: unknown result");
  }

  public function query_restaurant_by_dock_corp($dock_corp_id)
  {
    $this->send_query_restaurant_by_dock_corp($dock_corp_id);
    return $this->recv_query_restaurant_by_dock_corp();
  }

  public function send_query_restaurant_by_dock_corp($dock_corp_id)
  {
    $args = new \ERS\ElemeRestaurantService_query_restaurant_by_dock_corp_args();
    $args->dock_corp_id = $dock_corp_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'query_restaurant_by_dock_corp', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('query_restaurant_by_dock_corp', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_query_restaurant_by_dock_corp()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_query_restaurant_by_dock_corp_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_query_restaurant_by_dock_corp_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("query_restaurant_by_dock_corp failed: unknown result");
  }

  public function query_restaurant_flavor_by_restaurant_id($restaurant_id)
  {
    $this->send_query_restaurant_flavor_by_restaurant_id($restaurant_id);
    return $this->recv_query_restaurant_flavor_by_restaurant_id();
  }

  public function send_query_restaurant_flavor_by_restaurant_id($restaurant_id)
  {
    $args = new \ERS\ElemeRestaurantService_query_restaurant_flavor_by_restaurant_id_args();
    $args->restaurant_id = $restaurant_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'query_restaurant_flavor_by_restaurant_id', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('query_restaurant_flavor_by_restaurant_id', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_query_restaurant_flavor_by_restaurant_id()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_query_restaurant_flavor_by_restaurant_id_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_query_restaurant_flavor_by_restaurant_id_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("query_restaurant_flavor_by_restaurant_id failed: unknown result");
  }

  public function query_free_gift_activity(\ERS\TFreeGiftActivityQuery $query_struct)
  {
    $this->send_query_free_gift_activity($query_struct);
    return $this->recv_query_free_gift_activity();
  }

  public function send_query_free_gift_activity(\ERS\TFreeGiftActivityQuery $query_struct)
  {
    $args = new \ERS\ElemeRestaurantService_query_free_gift_activity_args();
    $args->query_struct = $query_struct;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'query_free_gift_activity', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('query_free_gift_activity', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_query_free_gift_activity()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_query_free_gift_activity_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_query_free_gift_activity_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("query_free_gift_activity failed: unknown result");
  }

  public function query_food_activity(\ERS\TFoodActivityQuery $query_struct)
  {
    $this->send_query_food_activity($query_struct);
    return $this->recv_query_food_activity();
  }

  public function send_query_food_activity(\ERS\TFoodActivityQuery $query_struct)
  {
    $args = new \ERS\ElemeRestaurantService_query_food_activity_args();
    $args->query_struct = $query_struct;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'query_food_activity', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('query_food_activity', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_query_food_activity()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_query_food_activity_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_query_food_activity_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("query_food_activity failed: unknown result");
  }

  public function count_food_activity(\ERS\TFoodActivityQuery $query_struct)
  {
    $this->send_count_food_activity($query_struct);
    return $this->recv_count_food_activity();
  }

  public function send_count_food_activity(\ERS\TFoodActivityQuery $query_struct)
  {
    $args = new \ERS\ElemeRestaurantService_count_food_activity_args();
    $args->query_struct = $query_struct;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'count_food_activity', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('count_food_activity', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_count_food_activity()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_count_food_activity_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_count_food_activity_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("count_food_activity failed: unknown result");
  }

  public function get_food_activity($food_activity_id)
  {
    $this->send_get_food_activity($food_activity_id);
    return $this->recv_get_food_activity();
  }

  public function send_get_food_activity($food_activity_id)
  {
    $args = new \ERS\ElemeRestaurantService_get_food_activity_args();
    $args->food_activity_id = $food_activity_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'get_food_activity', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('get_food_activity', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_get_food_activity()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_get_food_activity_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_get_food_activity_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("get_food_activity failed: unknown result");
  }

  public function mget_food_activity($food_activity_ids)
  {
    $this->send_mget_food_activity($food_activity_ids);
    return $this->recv_mget_food_activity();
  }

  public function send_mget_food_activity($food_activity_ids)
  {
    $args = new \ERS\ElemeRestaurantService_mget_food_activity_args();
    $args->food_activity_ids = $food_activity_ids;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'mget_food_activity', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('mget_food_activity', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_mget_food_activity()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_mget_food_activity_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_mget_food_activity_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("mget_food_activity failed: unknown result");
  }

  public function get_food_activity_id_map($food_ids)
  {
    $this->send_get_food_activity_id_map($food_ids);
    return $this->recv_get_food_activity_id_map();
  }

  public function send_get_food_activity_id_map($food_ids)
  {
    $args = new \ERS\ElemeRestaurantService_get_food_activity_id_map_args();
    $args->food_ids = $food_ids;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'get_food_activity_id_map', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('get_food_activity_id_map', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_get_food_activity_id_map()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_get_food_activity_id_map_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_get_food_activity_id_map_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("get_food_activity_id_map failed: unknown result");
  }

  public function get_weekday_food_activity_id_map($food_ids, $restaurant_id)
  {
    $this->send_get_weekday_food_activity_id_map($food_ids, $restaurant_id);
    return $this->recv_get_weekday_food_activity_id_map();
  }

  public function send_get_weekday_food_activity_id_map($food_ids, $restaurant_id)
  {
    $args = new \ERS\ElemeRestaurantService_get_weekday_food_activity_id_map_args();
    $args->food_ids = $food_ids;
    $args->restaurant_id = $restaurant_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'get_weekday_food_activity_id_map', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('get_weekday_food_activity_id_map', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_get_weekday_food_activity_id_map()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_get_weekday_food_activity_id_map_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_get_weekday_food_activity_id_map_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("get_weekday_food_activity_id_map failed: unknown result");
  }

  public function get_weekday_food_activity_id_map_no_cache($food_ids, $restaurant_id)
  {
    $this->send_get_weekday_food_activity_id_map_no_cache($food_ids, $restaurant_id);
    return $this->recv_get_weekday_food_activity_id_map_no_cache();
  }

  public function send_get_weekday_food_activity_id_map_no_cache($food_ids, $restaurant_id)
  {
    $args = new \ERS\ElemeRestaurantService_get_weekday_food_activity_id_map_no_cache_args();
    $args->food_ids = $food_ids;
    $args->restaurant_id = $restaurant_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'get_weekday_food_activity_id_map_no_cache', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('get_weekday_food_activity_id_map_no_cache', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_get_weekday_food_activity_id_map_no_cache()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_get_weekday_food_activity_id_map_no_cache_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_get_weekday_food_activity_id_map_no_cache_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("get_weekday_food_activity_id_map_no_cache failed: unknown result");
  }

  public function get_food_activity_with_restaurant_ids($restaurant_ids, $weekdays)
  {
    $this->send_get_food_activity_with_restaurant_ids($restaurant_ids, $weekdays);
    return $this->recv_get_food_activity_with_restaurant_ids();
  }

  public function send_get_food_activity_with_restaurant_ids($restaurant_ids, $weekdays)
  {
    $args = new \ERS\ElemeRestaurantService_get_food_activity_with_restaurant_ids_args();
    $args->restaurant_ids = $restaurant_ids;
    $args->weekdays = $weekdays;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'get_food_activity_with_restaurant_ids', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('get_food_activity_with_restaurant_ids', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_get_food_activity_with_restaurant_ids()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_get_food_activity_with_restaurant_ids_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_get_food_activity_with_restaurant_ids_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("get_food_activity_with_restaurant_ids failed: unknown result");
  }

  public function add_restaurant_certification(\ERS\TRestaurantCertification $rest_cert)
  {
    $this->send_add_restaurant_certification($rest_cert);
    return $this->recv_add_restaurant_certification();
  }

  public function send_add_restaurant_certification(\ERS\TRestaurantCertification $rest_cert)
  {
    $args = new \ERS\ElemeRestaurantService_add_restaurant_certification_args();
    $args->rest_cert = $rest_cert;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'add_restaurant_certification', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('add_restaurant_certification', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_add_restaurant_certification()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_add_restaurant_certification_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_add_restaurant_certification_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("add_restaurant_certification failed: unknown result");
  }

  public function update_restaurant_certification(\ERS\TRestaurantCertification $rest_cert)
  {
    $this->send_update_restaurant_certification($rest_cert);
    $this->recv_update_restaurant_certification();
  }

  public function send_update_restaurant_certification(\ERS\TRestaurantCertification $rest_cert)
  {
    $args = new \ERS\ElemeRestaurantService_update_restaurant_certification_args();
    $args->rest_cert = $rest_cert;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'update_restaurant_certification', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('update_restaurant_certification', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_update_restaurant_certification()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_update_restaurant_certification_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_update_restaurant_certification_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    return;
  }

  public function process_certification($process_user_id, $restaurant_id, $to_status)
  {
    $this->send_process_certification($process_user_id, $restaurant_id, $to_status);
    $this->recv_process_certification();
  }

  public function send_process_certification($process_user_id, $restaurant_id, $to_status)
  {
    $args = new \ERS\ElemeRestaurantService_process_certification_args();
    $args->process_user_id = $process_user_id;
    $args->restaurant_id = $restaurant_id;
    $args->to_status = $to_status;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'process_certification', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('process_certification', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_process_certification()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_process_certification_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_process_certification_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    return;
  }

  public function get_restaurant_certification($restaurant_id)
  {
    $this->send_get_restaurant_certification($restaurant_id);
    return $this->recv_get_restaurant_certification();
  }

  public function send_get_restaurant_certification($restaurant_id)
  {
    $args = new \ERS\ElemeRestaurantService_get_restaurant_certification_args();
    $args->restaurant_id = $restaurant_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'get_restaurant_certification', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('get_restaurant_certification', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_get_restaurant_certification()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_get_restaurant_certification_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_get_restaurant_certification_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("get_restaurant_certification failed: unknown result");
  }

  public function mget_restaurant_valid_certification($restaurant_ids)
  {
    $this->send_mget_restaurant_valid_certification($restaurant_ids);
    return $this->recv_mget_restaurant_valid_certification();
  }

  public function send_mget_restaurant_valid_certification($restaurant_ids)
  {
    $args = new \ERS\ElemeRestaurantService_mget_restaurant_valid_certification_args();
    $args->restaurant_ids = $restaurant_ids;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'mget_restaurant_valid_certification', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('mget_restaurant_valid_certification', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_mget_restaurant_valid_certification()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_mget_restaurant_valid_certification_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_mget_restaurant_valid_certification_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("mget_restaurant_valid_certification failed: unknown result");
  }

  public function filter_uncertificated_restaurants($restaurant_ids)
  {
    $this->send_filter_uncertificated_restaurants($restaurant_ids);
    return $this->recv_filter_uncertificated_restaurants();
  }

  public function send_filter_uncertificated_restaurants($restaurant_ids)
  {
    $args = new \ERS\ElemeRestaurantService_filter_uncertificated_restaurants_args();
    $args->restaurant_ids = $restaurant_ids;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'filter_uncertificated_restaurants', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('filter_uncertificated_restaurants', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_filter_uncertificated_restaurants()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_filter_uncertificated_restaurants_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_filter_uncertificated_restaurants_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("filter_uncertificated_restaurants failed: unknown result");
  }

  public function query_restaurant_certification_by_status($status, $offset, $limit)
  {
    $this->send_query_restaurant_certification_by_status($status, $offset, $limit);
    return $this->recv_query_restaurant_certification_by_status();
  }

  public function send_query_restaurant_certification_by_status($status, $offset, $limit)
  {
    $args = new \ERS\ElemeRestaurantService_query_restaurant_certification_by_status_args();
    $args->status = $status;
    $args->offset = $offset;
    $args->limit = $limit;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'query_restaurant_certification_by_status', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('query_restaurant_certification_by_status', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_query_restaurant_certification_by_status()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_query_restaurant_certification_by_status_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_query_restaurant_certification_by_status_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("query_restaurant_certification_by_status failed: unknown result");
  }

  public function add_restaurant_activity(\ERS\TRestaurantActivity $activity)
  {
    $this->send_add_restaurant_activity($activity);
    return $this->recv_add_restaurant_activity();
  }

  public function send_add_restaurant_activity(\ERS\TRestaurantActivity $activity)
  {
    $args = new \ERS\ElemeRestaurantService_add_restaurant_activity_args();
    $args->activity = $activity;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'add_restaurant_activity', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('add_restaurant_activity', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_add_restaurant_activity()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_add_restaurant_activity_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_add_restaurant_activity_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("add_restaurant_activity failed: unknown result");
  }

  public function update_restaurant_activity($activity_id, \ERS\TRestaurantActivity $activity)
  {
    $this->send_update_restaurant_activity($activity_id, $activity);
    $this->recv_update_restaurant_activity();
  }

  public function send_update_restaurant_activity($activity_id, \ERS\TRestaurantActivity $activity)
  {
    $args = new \ERS\ElemeRestaurantService_update_restaurant_activity_args();
    $args->activity_id = $activity_id;
    $args->activity = $activity;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'update_restaurant_activity', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('update_restaurant_activity', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_update_restaurant_activity()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_update_restaurant_activity_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_update_restaurant_activity_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    return;
  }

  public function get_participatable_restaurant_activity_ids($restaurant_id, $activity_type)
  {
    $this->send_get_participatable_restaurant_activity_ids($restaurant_id, $activity_type);
    return $this->recv_get_participatable_restaurant_activity_ids();
  }

  public function send_get_participatable_restaurant_activity_ids($restaurant_id, $activity_type)
  {
    $args = new \ERS\ElemeRestaurantService_get_participatable_restaurant_activity_ids_args();
    $args->restaurant_id = $restaurant_id;
    $args->activity_type = $activity_type;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'get_participatable_restaurant_activity_ids', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('get_participatable_restaurant_activity_ids', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_get_participatable_restaurant_activity_ids()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_get_participatable_restaurant_activity_ids_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_get_participatable_restaurant_activity_ids_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("get_participatable_restaurant_activity_ids failed: unknown result");
  }

  public function participate_restaurant_activity($restaurant_id, $activity_id)
  {
    $this->send_participate_restaurant_activity($restaurant_id, $activity_id);
    $this->recv_participate_restaurant_activity();
  }

  public function send_participate_restaurant_activity($restaurant_id, $activity_id)
  {
    $args = new \ERS\ElemeRestaurantService_participate_restaurant_activity_args();
    $args->restaurant_id = $restaurant_id;
    $args->activity_id = $activity_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'participate_restaurant_activity', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('participate_restaurant_activity', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_participate_restaurant_activity()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_participate_restaurant_activity_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_participate_restaurant_activity_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    return;
  }

  public function quit_restaurant_activity($restaurant_id, $activity_id)
  {
    $this->send_quit_restaurant_activity($restaurant_id, $activity_id);
    $this->recv_quit_restaurant_activity();
  }

  public function send_quit_restaurant_activity($restaurant_id, $activity_id)
  {
    $args = new \ERS\ElemeRestaurantService_quit_restaurant_activity_args();
    $args->restaurant_id = $restaurant_id;
    $args->activity_id = $activity_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'quit_restaurant_activity', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('quit_restaurant_activity', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_quit_restaurant_activity()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_quit_restaurant_activity_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_quit_restaurant_activity_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    return;
  }

  public function get_restaurant_activity($activity_id)
  {
    $this->send_get_restaurant_activity($activity_id);
    return $this->recv_get_restaurant_activity();
  }

  public function send_get_restaurant_activity($activity_id)
  {
    $args = new \ERS\ElemeRestaurantService_get_restaurant_activity_args();
    $args->activity_id = $activity_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'get_restaurant_activity', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('get_restaurant_activity', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_get_restaurant_activity()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_get_restaurant_activity_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_get_restaurant_activity_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("get_restaurant_activity failed: unknown result");
  }

  public function mget_restaurant_activity($activity_ids)
  {
    $this->send_mget_restaurant_activity($activity_ids);
    return $this->recv_mget_restaurant_activity();
  }

  public function send_mget_restaurant_activity($activity_ids)
  {
    $args = new \ERS\ElemeRestaurantService_mget_restaurant_activity_args();
    $args->activity_ids = $activity_ids;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'mget_restaurant_activity', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('mget_restaurant_activity', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_mget_restaurant_activity()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_mget_restaurant_activity_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_mget_restaurant_activity_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("mget_restaurant_activity failed: unknown result");
  }

  public function query_restaurant_activity_by_restaurant($restaurant_id)
  {
    $this->send_query_restaurant_activity_by_restaurant($restaurant_id);
    return $this->recv_query_restaurant_activity_by_restaurant();
  }

  public function send_query_restaurant_activity_by_restaurant($restaurant_id)
  {
    $args = new \ERS\ElemeRestaurantService_query_restaurant_activity_by_restaurant_args();
    $args->restaurant_id = $restaurant_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'query_restaurant_activity_by_restaurant', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('query_restaurant_activity_by_restaurant', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_query_restaurant_activity_by_restaurant()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_query_restaurant_activity_by_restaurant_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_query_restaurant_activity_by_restaurant_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("query_restaurant_activity_by_restaurant failed: unknown result");
  }

  public function javis_query_restaurant_activity_by_restaurant($restaurant_id)
  {
    $this->send_javis_query_restaurant_activity_by_restaurant($restaurant_id);
    return $this->recv_javis_query_restaurant_activity_by_restaurant();
  }

  public function send_javis_query_restaurant_activity_by_restaurant($restaurant_id)
  {
    $args = new \ERS\ElemeRestaurantService_javis_query_restaurant_activity_by_restaurant_args();
    $args->restaurant_id = $restaurant_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'javis_query_restaurant_activity_by_restaurant', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('javis_query_restaurant_activity_by_restaurant', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_javis_query_restaurant_activity_by_restaurant()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_javis_query_restaurant_activity_by_restaurant_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_javis_query_restaurant_activity_by_restaurant_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("javis_query_restaurant_activity_by_restaurant failed: unknown result");
  }

  public function query_restaurant_activity_for_admin(\ERS\TRestaurantActivityQuery $query_struct)
  {
    $this->send_query_restaurant_activity_for_admin($query_struct);
    return $this->recv_query_restaurant_activity_for_admin();
  }

  public function send_query_restaurant_activity_for_admin(\ERS\TRestaurantActivityQuery $query_struct)
  {
    $args = new \ERS\ElemeRestaurantService_query_restaurant_activity_for_admin_args();
    $args->query_struct = $query_struct;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'query_restaurant_activity_for_admin', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('query_restaurant_activity_for_admin', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_query_restaurant_activity_for_admin()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_query_restaurant_activity_for_admin_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_query_restaurant_activity_for_admin_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("query_restaurant_activity_for_admin failed: unknown result");
  }

  public function get_restaurant_activity_map_group_by_type($restaurant_ids)
  {
    $this->send_get_restaurant_activity_map_group_by_type($restaurant_ids);
    return $this->recv_get_restaurant_activity_map_group_by_type();
  }

  public function send_get_restaurant_activity_map_group_by_type($restaurant_ids)
  {
    $args = new \ERS\ElemeRestaurantService_get_restaurant_activity_map_group_by_type_args();
    $args->restaurant_ids = $restaurant_ids;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'get_restaurant_activity_map_group_by_type', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('get_restaurant_activity_map_group_by_type', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_get_restaurant_activity_map_group_by_type()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_get_restaurant_activity_map_group_by_type_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_get_restaurant_activity_map_group_by_type_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("get_restaurant_activity_map_group_by_type failed: unknown result");
  }

  public function get_restaurant_activity_with_restaurant_ids($restaurant_ids)
  {
    $this->send_get_restaurant_activity_with_restaurant_ids($restaurant_ids);
    return $this->recv_get_restaurant_activity_with_restaurant_ids();
  }

  public function send_get_restaurant_activity_with_restaurant_ids($restaurant_ids)
  {
    $args = new \ERS\ElemeRestaurantService_get_restaurant_activity_with_restaurant_ids_args();
    $args->restaurant_ids = $restaurant_ids;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'get_restaurant_activity_with_restaurant_ids', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('get_restaurant_activity_with_restaurant_ids', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_get_restaurant_activity_with_restaurant_ids()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_get_restaurant_activity_with_restaurant_ids_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_get_restaurant_activity_with_restaurant_ids_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("get_restaurant_activity_with_restaurant_ids failed: unknown result");
  }

  public function save_amended_poi($id, \ERS\TAmendedPoi $poi)
  {
    $this->send_save_amended_poi($id, $poi);
    $this->recv_save_amended_poi();
  }

  public function send_save_amended_poi($id, \ERS\TAmendedPoi $poi)
  {
    $args = new \ERS\ElemeRestaurantService_save_amended_poi_args();
    $args->id = $id;
    $args->poi = $poi;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'save_amended_poi', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('save_amended_poi', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_save_amended_poi()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_save_amended_poi_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_save_amended_poi_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    return;
  }

  public function query_amended_poi($city_id, $keyword)
  {
    $this->send_query_amended_poi($city_id, $keyword);
    return $this->recv_query_amended_poi();
  }

  public function send_query_amended_poi($city_id, $keyword)
  {
    $args = new \ERS\ElemeRestaurantService_query_amended_poi_args();
    $args->city_id = $city_id;
    $args->keyword = $keyword;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'query_amended_poi', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('query_amended_poi', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_query_amended_poi()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_query_amended_poi_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_query_amended_poi_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("query_amended_poi failed: unknown result");
  }

  public function get_free_gift_activity_attribute_name_by_category($category_id)
  {
    $this->send_get_free_gift_activity_attribute_name_by_category($category_id);
    return $this->recv_get_free_gift_activity_attribute_name_by_category();
  }

  public function send_get_free_gift_activity_attribute_name_by_category($category_id)
  {
    $args = new \ERS\ElemeRestaurantService_get_free_gift_activity_attribute_name_by_category_args();
    $args->category_id = $category_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'get_free_gift_activity_attribute_name_by_category', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('get_free_gift_activity_attribute_name_by_category', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_get_free_gift_activity_attribute_name_by_category()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_get_free_gift_activity_attribute_name_by_category_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_get_free_gift_activity_attribute_name_by_category_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("get_free_gift_activity_attribute_name_by_category failed: unknown result");
  }

  public function query_food_category_with_foods($restaurant_id)
  {
    $this->send_query_food_category_with_foods($restaurant_id);
    return $this->recv_query_food_category_with_foods();
  }

  public function send_query_food_category_with_foods($restaurant_id)
  {
    $args = new \ERS\ElemeRestaurantService_query_food_category_with_foods_args();
    $args->restaurant_id = $restaurant_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'query_food_category_with_foods', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('query_food_category_with_foods', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_query_food_category_with_foods()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_query_food_category_with_foods_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_query_food_category_with_foods_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("query_food_category_with_foods failed: unknown result");
  }

  public function query_recent_removed_foods($restaurant_id)
  {
    $this->send_query_recent_removed_foods($restaurant_id);
    return $this->recv_query_recent_removed_foods();
  }

  public function send_query_recent_removed_foods($restaurant_id)
  {
    $args = new \ERS\ElemeRestaurantService_query_recent_removed_foods_args();
    $args->restaurant_id = $restaurant_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'query_recent_removed_foods', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('query_recent_removed_foods', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_query_recent_removed_foods()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_query_recent_removed_foods_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_query_recent_removed_foods_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("query_recent_removed_foods failed: unknown result");
  }

  public function query_gum_food_by_restaurant($restaurant_id)
  {
    $this->send_query_gum_food_by_restaurant($restaurant_id);
    return $this->recv_query_gum_food_by_restaurant();
  }

  public function send_query_gum_food_by_restaurant($restaurant_id)
  {
    $args = new \ERS\ElemeRestaurantService_query_gum_food_by_restaurant_args();
    $args->restaurant_id = $restaurant_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'query_gum_food_by_restaurant', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('query_gum_food_by_restaurant', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_query_gum_food_by_restaurant()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_query_gum_food_by_restaurant_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_query_gum_food_by_restaurant_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("query_gum_food_by_restaurant failed: unknown result");
  }

  public function get_restaurant_promotion($promotion_id)
  {
    $this->send_get_restaurant_promotion($promotion_id);
    return $this->recv_get_restaurant_promotion();
  }

  public function send_get_restaurant_promotion($promotion_id)
  {
    $args = new \ERS\ElemeRestaurantService_get_restaurant_promotion_args();
    $args->promotion_id = $promotion_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'get_restaurant_promotion', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('get_restaurant_promotion', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_get_restaurant_promotion()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_get_restaurant_promotion_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_get_restaurant_promotion_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("get_restaurant_promotion failed: unknown result");
  }

  public function query_restaurant_promotion($restaurant_id)
  {
    $this->send_query_restaurant_promotion($restaurant_id);
    return $this->recv_query_restaurant_promotion();
  }

  public function send_query_restaurant_promotion($restaurant_id)
  {
    $args = new \ERS\ElemeRestaurantService_query_restaurant_promotion_args();
    $args->restaurant_id = $restaurant_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'query_restaurant_promotion', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('query_restaurant_promotion', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_query_restaurant_promotion()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_query_restaurant_promotion_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_query_restaurant_promotion_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("query_restaurant_promotion failed: unknown result");
  }

  public function master_get_changelog_restaurant($cl_rst_id)
  {
    $this->send_master_get_changelog_restaurant($cl_rst_id);
    return $this->recv_master_get_changelog_restaurant();
  }

  public function send_master_get_changelog_restaurant($cl_rst_id)
  {
    $args = new \ERS\ElemeRestaurantService_master_get_changelog_restaurant_args();
    $args->cl_rst_id = $cl_rst_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'master_get_changelog_restaurant', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('master_get_changelog_restaurant', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_master_get_changelog_restaurant()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_master_get_changelog_restaurant_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_master_get_changelog_restaurant_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("master_get_changelog_restaurant failed: unknown result");
  }

  public function master_get_changelog_region($cl_region_id)
  {
    $this->send_master_get_changelog_region($cl_region_id);
    return $this->recv_master_get_changelog_region();
  }

  public function send_master_get_changelog_region($cl_region_id)
  {
    $args = new \ERS\ElemeRestaurantService_master_get_changelog_region_args();
    $args->cl_region_id = $cl_region_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'master_get_changelog_region', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('master_get_changelog_region', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_master_get_changelog_region()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_master_get_changelog_region_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_master_get_changelog_region_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("master_get_changelog_region failed: unknown result");
  }

  public function master_get_deletelog_region($dl_region_id)
  {
    $this->send_master_get_deletelog_region($dl_region_id);
    return $this->recv_master_get_deletelog_region();
  }

  public function send_master_get_deletelog_region($dl_region_id)
  {
    $args = new \ERS\ElemeRestaurantService_master_get_deletelog_region_args();
    $args->dl_region_id = $dl_region_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'master_get_deletelog_region', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('master_get_deletelog_region', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_master_get_deletelog_region()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_master_get_deletelog_region_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_master_get_deletelog_region_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("master_get_deletelog_region failed: unknown result");
  }

  public function query_seo_sm_place(\ERS\TSeoSmQuery $query_struct)
  {
    $this->send_query_seo_sm_place($query_struct);
    return $this->recv_query_seo_sm_place();
  }

  public function send_query_seo_sm_place(\ERS\TSeoSmQuery $query_struct)
  {
    $args = new \ERS\ElemeRestaurantService_query_seo_sm_place_args();
    $args->query_struct = $query_struct;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'query_seo_sm_place', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('query_seo_sm_place', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_query_seo_sm_place()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_query_seo_sm_place_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_query_seo_sm_place_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("query_seo_sm_place failed: unknown result");
  }

  public function query_seo_sm_restaurant(\ERS\TSeoSmQuery $query_struct)
  {
    $this->send_query_seo_sm_restaurant($query_struct);
    return $this->recv_query_seo_sm_restaurant();
  }

  public function send_query_seo_sm_restaurant(\ERS\TSeoSmQuery $query_struct)
  {
    $args = new \ERS\ElemeRestaurantService_query_seo_sm_restaurant_args();
    $args->query_struct = $query_struct;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'query_seo_sm_restaurant', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('query_seo_sm_restaurant', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_query_seo_sm_restaurant()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_query_seo_sm_restaurant_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_query_seo_sm_restaurant_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("query_seo_sm_restaurant failed: unknown result");
  }

  public function query_seo_sm_city_index(\ERS\TSeoSmCityIndexQuery $query_struct)
  {
    $this->send_query_seo_sm_city_index($query_struct);
    return $this->recv_query_seo_sm_city_index();
  }

  public function send_query_seo_sm_city_index(\ERS\TSeoSmCityIndexQuery $query_struct)
  {
    $args = new \ERS\ElemeRestaurantService_query_seo_sm_city_index_args();
    $args->query_struct = $query_struct;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'query_seo_sm_city_index', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('query_seo_sm_city_index', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_query_seo_sm_city_index()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_query_seo_sm_city_index_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_query_seo_sm_city_index_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("query_seo_sm_city_index failed: unknown result");
  }

  public function get_seo_sm_index_by_name($name)
  {
    $this->send_get_seo_sm_index_by_name($name);
    return $this->recv_get_seo_sm_index_by_name();
  }

  public function send_get_seo_sm_index_by_name($name)
  {
    $args = new \ERS\ElemeRestaurantService_get_seo_sm_index_by_name_args();
    $args->name = $name;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'get_seo_sm_index_by_name', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('get_seo_sm_index_by_name', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_get_seo_sm_index_by_name()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_get_seo_sm_index_by_name_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_get_seo_sm_index_by_name_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("get_seo_sm_index_by_name failed: unknown result");
  }

  public function get_saas_status($restaurant_id)
  {
    $this->send_get_saas_status($restaurant_id);
    return $this->recv_get_saas_status();
  }

  public function send_get_saas_status($restaurant_id)
  {
    $args = new \ERS\ElemeRestaurantService_get_saas_status_args();
    $args->restaurant_id = $restaurant_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'get_saas_status', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('get_saas_status', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_get_saas_status()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_get_saas_status_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_get_saas_status_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("get_saas_status failed: unknown result");
  }

  public function count_operation_remind(\ERS\TOperationRemindQuery $query_struct)
  {
    $this->send_count_operation_remind($query_struct);
    return $this->recv_count_operation_remind();
  }

  public function send_count_operation_remind(\ERS\TOperationRemindQuery $query_struct)
  {
    $args = new \ERS\ElemeRestaurantService_count_operation_remind_args();
    $args->query_struct = $query_struct;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'count_operation_remind', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('count_operation_remind', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_count_operation_remind()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_count_operation_remind_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_count_operation_remind_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("count_operation_remind failed: unknown result");
  }

  public function query_operation_remind(\ERS\TOperationRemindQuery $query_struct)
  {
    $this->send_query_operation_remind($query_struct);
    return $this->recv_query_operation_remind();
  }

  public function send_query_operation_remind(\ERS\TOperationRemindQuery $query_struct)
  {
    $args = new \ERS\ElemeRestaurantService_query_operation_remind_args();
    $args->query_struct = $query_struct;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'query_operation_remind', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('query_operation_remind', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_query_operation_remind()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_query_operation_remind_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_query_operation_remind_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("query_operation_remind failed: unknown result");
  }

  public function get_quick_message($quick_message_id)
  {
    $this->send_get_quick_message($quick_message_id);
    return $this->recv_get_quick_message();
  }

  public function send_get_quick_message($quick_message_id)
  {
    $args = new \ERS\ElemeRestaurantService_get_quick_message_args();
    $args->quick_message_id = $quick_message_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'get_quick_message', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('get_quick_message', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_get_quick_message()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_get_quick_message_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_get_quick_message_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("get_quick_message failed: unknown result");
  }

  public function get_friend_link($friend_link_id)
  {
    $this->send_get_friend_link($friend_link_id);
    return $this->recv_get_friend_link();
  }

  public function send_get_friend_link($friend_link_id)
  {
    $args = new \ERS\ElemeRestaurantService_get_friend_link_args();
    $args->friend_link_id = $friend_link_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'get_friend_link', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('get_friend_link', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_get_friend_link()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_get_friend_link_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_get_friend_link_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("get_friend_link failed: unknown result");
  }

  public function query_friend_link()
  {
    $this->send_query_friend_link();
    return $this->recv_query_friend_link();
  }

  public function send_query_friend_link()
  {
    $args = new \ERS\ElemeRestaurantService_query_friend_link_args();
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'query_friend_link', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('query_friend_link', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_query_friend_link()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_query_friend_link_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_query_friend_link_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("query_friend_link failed: unknown result");
  }

  public function count_favored_user($restaurant_id)
  {
    $this->send_count_favored_user($restaurant_id);
    return $this->recv_count_favored_user();
  }

  public function send_count_favored_user($restaurant_id)
  {
    $args = new \ERS\ElemeRestaurantService_count_favored_user_args();
    $args->restaurant_id = $restaurant_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'count_favored_user', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('count_favored_user', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_count_favored_user()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_count_favored_user_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_count_favored_user_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("count_favored_user failed: unknown result");
  }

  public function mget_favored_user($restaurant_id)
  {
    $this->send_mget_favored_user($restaurant_id);
    return $this->recv_mget_favored_user();
  }

  public function send_mget_favored_user($restaurant_id)
  {
    $args = new \ERS\ElemeRestaurantService_mget_favored_user_args();
    $args->restaurant_id = $restaurant_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'mget_favored_user', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('mget_favored_user', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_mget_favored_user()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_mget_favored_user_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_mget_favored_user_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("mget_favored_user failed: unknown result");
  }

  public function query_area_by_square($lt_latitude, $lt_longitude, $rb_latitude, $rb_longitude)
  {
    $this->send_query_area_by_square($lt_latitude, $lt_longitude, $rb_latitude, $rb_longitude);
    return $this->recv_query_area_by_square();
  }

  public function send_query_area_by_square($lt_latitude, $lt_longitude, $rb_latitude, $rb_longitude)
  {
    $args = new \ERS\ElemeRestaurantService_query_area_by_square_args();
    $args->lt_latitude = $lt_latitude;
    $args->lt_longitude = $lt_longitude;
    $args->rb_latitude = $rb_latitude;
    $args->rb_longitude = $rb_longitude;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'query_area_by_square', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('query_area_by_square', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_query_area_by_square()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_query_area_by_square_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_query_area_by_square_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("query_area_by_square failed: unknown result");
  }

  public function get_evaluation($restaurant_id)
  {
    $this->send_get_evaluation($restaurant_id);
    return $this->recv_get_evaluation();
  }

  public function send_get_evaluation($restaurant_id)
  {
    $args = new \ERS\ElemeRestaurantService_get_evaluation_args();
    $args->restaurant_id = $restaurant_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'get_evaluation', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('get_evaluation', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_get_evaluation()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_get_evaluation_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_get_evaluation_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("get_evaluation failed: unknown result");
  }

  public function get_all_performance_assessment_block()
  {
    $this->send_get_all_performance_assessment_block();
    return $this->recv_get_all_performance_assessment_block();
  }

  public function send_get_all_performance_assessment_block()
  {
    $args = new \ERS\ElemeRestaurantService_get_all_performance_assessment_block_args();
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'get_all_performance_assessment_block', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('get_all_performance_assessment_block', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_get_all_performance_assessment_block()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_get_all_performance_assessment_block_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_get_all_performance_assessment_block_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("get_all_performance_assessment_block failed: unknown result");
  }

  public function add_performance_assessment_block(\ERS\TPerformanceAssessmentBlock $pab)
  {
    $this->send_add_performance_assessment_block($pab);
    return $this->recv_add_performance_assessment_block();
  }

  public function send_add_performance_assessment_block(\ERS\TPerformanceAssessmentBlock $pab)
  {
    $args = new \ERS\ElemeRestaurantService_add_performance_assessment_block_args();
    $args->pab = $pab;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'add_performance_assessment_block', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('add_performance_assessment_block', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_add_performance_assessment_block()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_add_performance_assessment_block_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_add_performance_assessment_block_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("add_performance_assessment_block failed: unknown result");
  }

  public function delete_performance_assessment_block($pa_block_id)
  {
    $this->send_delete_performance_assessment_block($pa_block_id);
    $this->recv_delete_performance_assessment_block();
  }

  public function send_delete_performance_assessment_block($pa_block_id)
  {
    $args = new \ERS\ElemeRestaurantService_delete_performance_assessment_block_args();
    $args->pa_block_id = $pa_block_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'delete_performance_assessment_block', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('delete_performance_assessment_block', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_delete_performance_assessment_block()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_delete_performance_assessment_block_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_delete_performance_assessment_block_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    return;
  }

  public function query_close_restaurant_whitelist()
  {
    $this->send_query_close_restaurant_whitelist();
    return $this->recv_query_close_restaurant_whitelist();
  }

  public function send_query_close_restaurant_whitelist()
  {
    $args = new \ERS\ElemeRestaurantService_query_close_restaurant_whitelist_args();
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'query_close_restaurant_whitelist', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('query_close_restaurant_whitelist', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_query_close_restaurant_whitelist()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_query_close_restaurant_whitelist_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_query_close_restaurant_whitelist_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("query_close_restaurant_whitelist failed: unknown result");
  }

  public function save_close_restaurant_whitelist(\ERS\TWhitelist $whitelist_struct)
  {
    $this->send_save_close_restaurant_whitelist($whitelist_struct);
    $this->recv_save_close_restaurant_whitelist();
  }

  public function send_save_close_restaurant_whitelist(\ERS\TWhitelist $whitelist_struct)
  {
    $args = new \ERS\ElemeRestaurantService_save_close_restaurant_whitelist_args();
    $args->whitelist_struct = $whitelist_struct;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'save_close_restaurant_whitelist', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('save_close_restaurant_whitelist', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_save_close_restaurant_whitelist()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_save_close_restaurant_whitelist_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_save_close_restaurant_whitelist_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    return;
  }

  public function get_restaurant_setup_step($restaurant_id)
  {
    $this->send_get_restaurant_setup_step($restaurant_id);
    return $this->recv_get_restaurant_setup_step();
  }

  public function send_get_restaurant_setup_step($restaurant_id)
  {
    $args = new \ERS\ElemeRestaurantService_get_restaurant_setup_step_args();
    $args->restaurant_id = $restaurant_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'get_restaurant_setup_step', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('get_restaurant_setup_step', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_get_restaurant_setup_step()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_get_restaurant_setup_step_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_get_restaurant_setup_step_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("get_restaurant_setup_step failed: unknown result");
  }

  public function set_restaurant_setup_step($restaurant_id, $step)
  {
    $this->send_set_restaurant_setup_step($restaurant_id, $step);
    $this->recv_set_restaurant_setup_step();
  }

  public function send_set_restaurant_setup_step($restaurant_id, $step)
  {
    $args = new \ERS\ElemeRestaurantService_set_restaurant_setup_step_args();
    $args->restaurant_id = $restaurant_id;
    $args->step = $step;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'set_restaurant_setup_step', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('set_restaurant_setup_step', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_set_restaurant_setup_step()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_set_restaurant_setup_step_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_set_restaurant_setup_step_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    return;
  }

  public function get_short_url($origin_url)
  {
    $this->send_get_short_url($origin_url);
    return $this->recv_get_short_url();
  }

  public function send_get_short_url($origin_url)
  {
    $args = new \ERS\ElemeRestaurantService_get_short_url_args();
    $args->origin_url = $origin_url;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'get_short_url', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('get_short_url', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_get_short_url()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_get_short_url_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_get_short_url_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("get_short_url failed: unknown result");
  }

  public function is_restaurant_mobile_location_match($restaurant_id, $mobile)
  {
    $this->send_is_restaurant_mobile_location_match($restaurant_id, $mobile);
    return $this->recv_is_restaurant_mobile_location_match();
  }

  public function send_is_restaurant_mobile_location_match($restaurant_id, $mobile)
  {
    $args = new \ERS\ElemeRestaurantService_is_restaurant_mobile_location_match_args();
    $args->restaurant_id = $restaurant_id;
    $args->mobile = $mobile;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'is_restaurant_mobile_location_match', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('is_restaurant_mobile_location_match', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_is_restaurant_mobile_location_match()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_is_restaurant_mobile_location_match_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_is_restaurant_mobile_location_match_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("is_restaurant_mobile_location_match failed: unknown result");
  }

  public function get_origin_url($short_url_hash)
  {
    $this->send_get_origin_url($short_url_hash);
    return $this->recv_get_origin_url();
  }

  public function send_get_origin_url($short_url_hash)
  {
    $args = new \ERS\ElemeRestaurantService_get_origin_url_args();
    $args->short_url_hash = $short_url_hash;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'get_origin_url', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('get_origin_url', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_get_origin_url()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_get_origin_url_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_get_origin_url_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("get_origin_url failed: unknown result");
  }

  public function get_napos_env($restaurant_id)
  {
    $this->send_get_napos_env($restaurant_id);
    return $this->recv_get_napos_env();
  }

  public function send_get_napos_env($restaurant_id)
  {
    $args = new \ERS\ElemeRestaurantService_get_napos_env_args();
    $args->restaurant_id = $restaurant_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'get_napos_env', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('get_napos_env', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_get_napos_env()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_get_napos_env_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_get_napos_env_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("get_napos_env failed: unknown result");
  }

  public function set_napos_env($restaurant_id, $key, $value)
  {
    $this->send_set_napos_env($restaurant_id, $key, $value);
    return $this->recv_set_napos_env();
  }

  public function send_set_napos_env($restaurant_id, $key, $value)
  {
    $args = new \ERS\ElemeRestaurantService_set_napos_env_args();
    $args->restaurant_id = $restaurant_id;
    $args->key = $key;
    $args->value = $value;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'set_napos_env', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('set_napos_env', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_set_napos_env()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_set_napos_env_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_set_napos_env_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("set_napos_env failed: unknown result");
  }

  public function signal_post_make_order($order_id)
  {
    $this->send_signal_post_make_order($order_id);
    $this->recv_signal_post_make_order();
  }

  public function send_signal_post_make_order($order_id)
  {
    $args = new \ERS\ElemeRestaurantService_signal_post_make_order_args();
    $args->order_id = $order_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'signal_post_make_order', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('signal_post_make_order', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_signal_post_make_order()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_signal_post_make_order_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_signal_post_make_order_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    return;
  }

  public function signal_post_process_order($order_process_record_id)
  {
    $this->send_signal_post_process_order($order_process_record_id);
    $this->recv_signal_post_process_order();
  }

  public function send_signal_post_process_order($order_process_record_id)
  {
    $args = new \ERS\ElemeRestaurantService_signal_post_process_order_args();
    $args->order_process_record_id = $order_process_record_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'signal_post_process_order', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('signal_post_process_order', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_signal_post_process_order()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_signal_post_process_order_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_signal_post_process_order_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    return;
  }

  public function signal_update_restaurant($restaurant_ids)
  {
    $this->send_signal_update_restaurant($restaurant_ids);
    $this->recv_signal_update_restaurant();
  }

  public function send_signal_update_restaurant($restaurant_ids)
  {
    $args = new \ERS\ElemeRestaurantService_signal_update_restaurant_args();
    $args->restaurant_ids = $restaurant_ids;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'signal_update_restaurant', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('signal_update_restaurant', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_signal_update_restaurant()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_signal_update_restaurant_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_signal_update_restaurant_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    return;
  }

  public function signal_update_food($food_ids)
  {
    $this->send_signal_update_food($food_ids);
    $this->recv_signal_update_food();
  }

  public function send_signal_update_food($food_ids)
  {
    $args = new \ERS\ElemeRestaurantService_signal_update_food_args();
    $args->food_ids = $food_ids;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'signal_update_food', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('signal_update_food', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_signal_update_food()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_signal_update_food_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_signal_update_food_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    return;
  }

  public function signal_update_food_category($food_category_ids)
  {
    $this->send_signal_update_food_category($food_category_ids);
    $this->recv_signal_update_food_category();
  }

  public function send_signal_update_food_category($food_category_ids)
  {
    $args = new \ERS\ElemeRestaurantService_signal_update_food_category_args();
    $args->food_category_ids = $food_category_ids;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'signal_update_food_category', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('signal_update_food_category', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_signal_update_food_category()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_signal_update_food_category_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_signal_update_food_category_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    return;
  }

  public function signal_menu_clear_cache($restaurant_ids)
  {
    $this->send_signal_menu_clear_cache($restaurant_ids);
    $this->recv_signal_menu_clear_cache();
  }

  public function send_signal_menu_clear_cache($restaurant_ids)
  {
    $args = new \ERS\ElemeRestaurantService_signal_menu_clear_cache_args();
    $args->restaurant_ids = $restaurant_ids;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'signal_menu_clear_cache', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('signal_menu_clear_cache', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_signal_menu_clear_cache()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_signal_menu_clear_cache_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_signal_menu_clear_cache_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    return;
  }

  public function signal_update_menu_cache($restaurant_id)
  {
    $this->send_signal_update_menu_cache($restaurant_id);
    $this->recv_signal_update_menu_cache();
  }

  public function send_signal_update_menu_cache($restaurant_id)
  {
    $args = new \ERS\ElemeRestaurantService_signal_update_menu_cache_args();
    $args->restaurant_id = $restaurant_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'signal_update_menu_cache', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('signal_update_menu_cache', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_signal_update_menu_cache()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_signal_update_menu_cache_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_signal_update_menu_cache_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    return;
  }

  public function signal_update_food_activity($food_activity_ids)
  {
    $this->send_signal_update_food_activity($food_activity_ids);
    $this->recv_signal_update_food_activity();
  }

  public function send_signal_update_food_activity($food_activity_ids)
  {
    $args = new \ERS\ElemeRestaurantService_signal_update_food_activity_args();
    $args->food_activity_ids = $food_activity_ids;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'signal_update_food_activity', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('signal_update_food_activity', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_signal_update_food_activity()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_signal_update_food_activity_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_signal_update_food_activity_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    return;
  }

  public function signal_post_process_food_ugc_image($process_food_ugc_image_pr_id)
  {
    $this->send_signal_post_process_food_ugc_image($process_food_ugc_image_pr_id);
    $this->recv_signal_post_process_food_ugc_image();
  }

  public function send_signal_post_process_food_ugc_image($process_food_ugc_image_pr_id)
  {
    $args = new \ERS\ElemeRestaurantService_signal_post_process_food_ugc_image_args();
    $args->process_food_ugc_image_pr_id = $process_food_ugc_image_pr_id;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'signal_post_process_food_ugc_image', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('signal_post_process_food_ugc_image', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_signal_post_process_food_ugc_image()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_signal_post_process_food_ugc_image_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_signal_post_process_food_ugc_image_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    return;
  }

  public function any_support_for_ol_payment($restaurant_ids)
  {
    $this->send_any_support_for_ol_payment($restaurant_ids);
    return $this->recv_any_support_for_ol_payment();
  }

  public function send_any_support_for_ol_payment($restaurant_ids)
  {
    $args = new \ERS\ElemeRestaurantService_any_support_for_ol_payment_args();
    $args->restaurant_ids = $restaurant_ids;
    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
    if ($bin_accel)
    {
      thrift_protocol_write_binary($this->output_, 'any_support_for_ol_payment', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
    }
    else
    {
      $this->output_->writeMessageBegin('any_support_for_ol_payment', TMessageType::CALL, $this->seqid_);
      $args->write($this->output_);
      $this->output_->writeMessageEnd();
      $this->output_->getTransport()->flush();
    }
  }

  public function recv_any_support_for_ol_payment()
  {
    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\ERS\ElemeRestaurantService_any_support_for_ol_payment_result', $this->input_->isStrictRead());
    else
    {
      $rseqid = 0;
      $fname = null;
      $mtype = 0;

      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
      if ($mtype == TMessageType::EXCEPTION) {
        $x = new TApplicationException();
        $x->read($this->input_);
        $this->input_->readMessageEnd();
        throw $x;
      }
      $result = new \ERS\ElemeRestaurantService_any_support_for_ol_payment_result();
      $result->read($this->input_);
      $this->input_->readMessageEnd();
    }
    if ($result->success !== null) {
      return $result->success;
    }
    if ($result->user_exception !== null) {
      throw $result->user_exception;
    }
    if ($result->system_exception !== null) {
      throw $result->system_exception;
    }
    if ($result->unknown_exception !== null) {
      throw $result->unknown_exception;
    }
    throw new \Exception("any_support_for_ol_payment failed: unknown result");
  }

}

// HELPER FUNCTIONS AND STRUCTURES

class ElemeRestaurantService_ping_args extends TBase {
  static $_TSPEC;


  public function __construct() {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        );
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_ping_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_ping_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_ping_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_ping_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::BOOL,
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_ping_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_ping_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_ping_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_search_restaurant_args extends TBase {
  static $_TSPEC;

  public $query_struct = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'query_struct',
          'type' => TType::STRUCT,
          'class' => '\ERS\TRestaurantSearchQuery',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_search_restaurant_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_search_restaurant_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_search_restaurant_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_search_restaurant_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::STRING,
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_search_restaurant_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_search_restaurant_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_search_restaurant_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_search_area_restaurant_args extends TBase {
  static $_TSPEC;

  public $query_struct = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'query_struct',
          'type' => TType::STRUCT,
          'class' => '\ERS\TRestaurantAreaSearchQuery',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_search_area_restaurant_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_search_area_restaurant_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_search_area_restaurant_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_search_area_restaurant_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::STRING,
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_search_area_restaurant_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_search_area_restaurant_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_search_area_restaurant_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_search_certification_restaurant_args extends TBase {
  static $_TSPEC;

  public $query_struct = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'query_struct',
          'type' => TType::STRUCT,
          'class' => '\ERS\TRestaurantCertificationSearchQuery',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_search_certification_restaurant_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_search_certification_restaurant_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_search_certification_restaurant_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_search_certification_restaurant_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::STRING,
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_search_certification_restaurant_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_search_certification_restaurant_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_search_certification_restaurant_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_search_area_food_args extends TBase {
  static $_TSPEC;

  public $query_struct = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'query_struct',
          'type' => TType::STRUCT,
          'class' => '\ERS\TRestaurantAreaSearchQuery',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_search_area_food_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_search_area_food_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_search_area_food_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_search_area_food_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::STRING,
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_search_area_food_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_search_area_food_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_search_area_food_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_search_food_args extends TBase {
  static $_TSPEC;

  public $query_struct = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'query_struct',
          'type' => TType::STRUCT,
          'class' => '\ERS\TFoodSearchQuery',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_search_food_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_search_food_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_search_food_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_search_food_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::STRING,
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_search_food_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_search_food_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_search_food_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_update_cache_for_replicator_args extends TBase {
  static $_TSPEC;

  public $name = null;
  public $ids = null;
  public $type_ = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'name',
          'type' => TType::STRING,
          ),
        2 => array(
          'var' => 'ids',
          'type' => TType::LST,
          'etype' => TType::I64,
          'elem' => array(
            'type' => TType::I64,
            ),
          ),
        3 => array(
          'var' => 'type_',
          'type' => TType::STRING,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_update_cache_for_replicator_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_update_cache_for_replicator_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_update_cache_for_replicator_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_update_cache_for_replicator_result extends TBase {
  static $_TSPEC;

  public $user_exception = null;
  public $system_exception = null;
  public $unkown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unkown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_update_cache_for_replicator_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_update_cache_for_replicator_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_update_cache_for_replicator_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_update_cache_args extends TBase {
  static $_TSPEC;

  public $tablename = null;
  public $ids = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'tablename',
          'type' => TType::STRING,
          ),
        2 => array(
          'var' => 'ids',
          'type' => TType::LST,
          'etype' => TType::I64,
          'elem' => array(
            'type' => TType::I64,
            ),
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_update_cache_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_update_cache_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_update_cache_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_update_cache_result extends TBase {
  static $_TSPEC;

  public $user_exception = null;
  public $system_exception = null;
  public $unkown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unkown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_update_cache_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_update_cache_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_update_cache_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_clear_cache_args extends TBase {
  static $_TSPEC;

  public $api_name = null;
  public $params = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'api_name',
          'type' => TType::STRING,
          ),
        2 => array(
          'var' => 'params',
          'type' => TType::LST,
          'etype' => TType::STRING,
          'elem' => array(
            'type' => TType::STRING,
            ),
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_clear_cache_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_clear_cache_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_clear_cache_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_clear_cache_result extends TBase {
  static $_TSPEC;

  public $user_exception = null;
  public $system_exception = null;
  public $unkown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unkown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_clear_cache_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_clear_cache_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_clear_cache_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_check_favored_args extends TBase {
  static $_TSPEC;

  public $user_id = null;
  public $restaurant_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'restaurant_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_check_favored_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_check_favored_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_check_favored_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_check_favored_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::BOOL,
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_check_favored_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_check_favored_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_check_favored_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_add_favored_args extends TBase {
  static $_TSPEC;

  public $user_id = null;
  public $restaurant_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'restaurant_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_add_favored_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_add_favored_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_add_favored_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_add_favored_result extends TBase {
  static $_TSPEC;

  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_add_favored_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_add_favored_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_add_favored_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_remove_favored_args extends TBase {
  static $_TSPEC;

  public $user_id = null;
  public $restaurant_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'restaurant_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_remove_favored_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_remove_favored_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_remove_favored_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_remove_favored_result extends TBase {
  static $_TSPEC;

  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_remove_favored_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_remove_favored_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_remove_favored_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_count_favored_args extends TBase {
  static $_TSPEC;

  public $user_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_count_favored_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_count_favored_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_count_favored_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_count_favored_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::I32,
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_count_favored_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_count_favored_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_count_favored_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_mcount_restaurant_by_entry_id_args extends TBase {
  static $_TSPEC;

  public $entry_ids = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'entry_ids',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_mcount_restaurant_by_entry_id_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_mcount_restaurant_by_entry_id_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_mcount_restaurant_by_entry_id_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_mcount_restaurant_by_entry_id_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::MAP,
          'ktype' => TType::I32,
          'vtype' => TType::I32,
          'key' => array(
            'type' => TType::I32,
          ),
          'val' => array(
            'type' => TType::I32,
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_mcount_restaurant_by_entry_id_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_mcount_restaurant_by_entry_id_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_mcount_restaurant_by_entry_id_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_check_favor_food_args extends TBase {
  static $_TSPEC;

  public $user_id = null;
  public $food_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'food_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_check_favor_food_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_check_favor_food_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_check_favor_food_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_check_favor_food_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::BOOL,
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_check_favor_food_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_check_favor_food_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_check_favor_food_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_add_favor_food_args extends TBase {
  static $_TSPEC;

  public $user_id = null;
  public $food_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'food_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_add_favor_food_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_add_favor_food_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_add_favor_food_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_add_favor_food_result extends TBase {
  static $_TSPEC;

  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_add_favor_food_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_add_favor_food_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_add_favor_food_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_remove_favor_food_args extends TBase {
  static $_TSPEC;

  public $user_id = null;
  public $food_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'food_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_remove_favor_food_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_remove_favor_food_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_remove_favor_food_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_remove_favor_food_result extends TBase {
  static $_TSPEC;

  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_remove_favor_food_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_remove_favor_food_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_remove_favor_food_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_add_comment_args extends TBase {
  static $_TSPEC;

  public $user_id = null;
  public $username = null;
  public $restaurant_id = null;
  public $content = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'username',
          'type' => TType::STRING,
          ),
        3 => array(
          'var' => 'restaurant_id',
          'type' => TType::I32,
          ),
        4 => array(
          'var' => 'content',
          'type' => TType::STRING,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_add_comment_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_add_comment_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_add_comment_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_add_comment_result extends TBase {
  static $_TSPEC;

  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_add_comment_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_add_comment_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_add_comment_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_count_comment_args extends TBase {
  static $_TSPEC;

  public $query_struct = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'query_struct',
          'type' => TType::STRUCT,
          'class' => '\ERS\TRestaurantCommentQuery',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_count_comment_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_count_comment_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_count_comment_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_count_comment_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::I32,
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_count_comment_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_count_comment_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_count_comment_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_add_comment_reply_args extends TBase {
  static $_TSPEC;

  public $comment_id = null;
  public $user_id = null;
  public $content = null;
  public $type = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'comment_id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'user_id',
          'type' => TType::I32,
          ),
        3 => array(
          'var' => 'content',
          'type' => TType::STRING,
          ),
        4 => array(
          'var' => 'type',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_add_comment_reply_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_add_comment_reply_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_add_comment_reply_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_add_comment_reply_result extends TBase {
  static $_TSPEC;

  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_add_comment_reply_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_add_comment_reply_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_add_comment_reply_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_deliver_amount_by_entry_args extends TBase {
  static $_TSPEC;

  public $restaurant_id = null;
  public $entry_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'restaurant_id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'entry_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_deliver_amount_by_entry_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_deliver_amount_by_entry_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_deliver_amount_by_entry_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_deliver_amount_by_entry_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::I16,
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_deliver_amount_by_entry_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_deliver_amount_by_entry_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_deliver_amount_by_entry_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_foods_stock_args extends TBase {
  static $_TSPEC;

  public $food_ids = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'food_ids',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_foods_stock_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_foods_stock_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_foods_stock_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_foods_stock_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::MAP,
          'ktype' => TType::I32,
          'vtype' => TType::I32,
          'key' => array(
            'type' => TType::I32,
          ),
          'val' => array(
            'type' => TType::I32,
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_foods_stock_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_foods_stock_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_foods_stock_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_incr_foods_stock_args extends TBase {
  static $_TSPEC;

  public $food_stock_map = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'food_stock_map',
          'type' => TType::MAP,
          'ktype' => TType::I32,
          'vtype' => TType::I32,
          'key' => array(
            'type' => TType::I32,
          ),
          'val' => array(
            'type' => TType::I32,
            ),
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_incr_foods_stock_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_incr_foods_stock_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_incr_foods_stock_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_incr_foods_stock_result extends TBase {
  static $_TSPEC;

  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_incr_foods_stock_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_incr_foods_stock_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_incr_foods_stock_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_decr_foods_stock_args extends TBase {
  static $_TSPEC;

  public $food_stock_map = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'food_stock_map',
          'type' => TType::MAP,
          'ktype' => TType::I32,
          'vtype' => TType::I32,
          'key' => array(
            'type' => TType::I32,
          ),
          'val' => array(
            'type' => TType::I32,
            ),
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_decr_foods_stock_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_decr_foods_stock_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_decr_foods_stock_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_decr_foods_stock_result extends TBase {
  static $_TSPEC;

  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_decr_foods_stock_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_decr_foods_stock_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_decr_foods_stock_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_set_food_stock_args extends TBase {
  static $_TSPEC;

  public $food_id = null;
  public $stock = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'food_id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'stock',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_set_food_stock_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_set_food_stock_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_set_food_stock_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_set_food_stock_result extends TBase {
  static $_TSPEC;

  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_set_food_stock_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_set_food_stock_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_set_food_stock_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_set_restaurant_food_eleme_buy_discount_args extends TBase {
  static $_TSPEC;

  public $restaurant_id = null;
  public $discount = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'restaurant_id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'discount',
          'type' => TType::DOUBLE,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_set_restaurant_food_eleme_buy_discount_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_set_restaurant_food_eleme_buy_discount_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_set_restaurant_food_eleme_buy_discount_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_set_restaurant_food_eleme_buy_discount_result extends TBase {
  static $_TSPEC;

  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_set_restaurant_food_eleme_buy_discount_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_set_restaurant_food_eleme_buy_discount_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_set_restaurant_food_eleme_buy_discount_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_refresh_food_stock_args extends TBase {
  static $_TSPEC;

  public $food_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'food_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_refresh_food_stock_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_refresh_food_stock_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_refresh_food_stock_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_refresh_food_stock_result extends TBase {
  static $_TSPEC;

  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_refresh_food_stock_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_refresh_food_stock_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_refresh_food_stock_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_region_id_args extends TBase {
  static $_TSPEC;

  public $entry_id = null;
  public $geohash = null;
  public $restaurant_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'entry_id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'geohash',
          'type' => TType::I64,
          ),
        3 => array(
          'var' => 'restaurant_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_region_id_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_region_id_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_region_id_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_region_id_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::I32,
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_region_id_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_region_id_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_region_id_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_region_region_group_map_args extends TBase {
  static $_TSPEC;

  public $region_ids = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'region_ids',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_region_region_group_map_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_region_region_group_map_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_region_region_group_map_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_region_region_group_map_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::MAP,
          'ktype' => TType::I32,
          'vtype' => TType::I32,
          'key' => array(
            'type' => TType::I32,
          ),
          'val' => array(
            'type' => TType::I32,
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_region_region_group_map_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_region_region_group_map_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_region_region_group_map_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_restaurant_region_map_args extends TBase {
  static $_TSPEC;

  public $restaurant_ids = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'restaurant_ids',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_restaurant_region_map_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_restaurant_region_map_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_restaurant_region_map_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_restaurant_region_map_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::MAP,
          'ktype' => TType::I32,
          'vtype' => TType::I32,
          'key' => array(
            'type' => TType::I32,
          ),
          'val' => array(
            'type' => TType::I32,
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_restaurant_region_map_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_restaurant_region_map_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_restaurant_region_map_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_add_restaurant_message_args extends TBase {
  static $_TSPEC;

  public $restaurant_id = null;
  public $message_type = null;
  public $info = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'restaurant_id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'message_type',
          'type' => TType::I16,
          ),
        3 => array(
          'var' => 'info',
          'type' => TType::MAP,
          'ktype' => TType::STRING,
          'vtype' => TType::STRING,
          'key' => array(
            'type' => TType::STRING,
          ),
          'val' => array(
            'type' => TType::STRING,
            ),
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_add_restaurant_message_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_add_restaurant_message_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_add_restaurant_message_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_add_restaurant_message_result extends TBase {
  static $_TSPEC;

  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_add_restaurant_message_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_add_restaurant_message_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_add_restaurant_message_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_mset_activity_valid_args extends TBase {
  static $_TSPEC;

  public $activity_ids = null;
  public $is_valid = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'activity_ids',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        2 => array(
          'var' => 'is_valid',
          'type' => TType::BOOL,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_mset_activity_valid_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_mset_activity_valid_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_mset_activity_valid_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_mset_activity_valid_result extends TBase {
  static $_TSPEC;

  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_mset_activity_valid_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_mset_activity_valid_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_mset_activity_valid_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_mset_activity_default_args extends TBase {
  static $_TSPEC;

  public $activity_ids = null;
  public $is_default = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'activity_ids',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        2 => array(
          'var' => 'is_default',
          'type' => TType::BOOL,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_mset_activity_default_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_mset_activity_default_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_mset_activity_default_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_mset_activity_default_result extends TBase {
  static $_TSPEC;

  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_mset_activity_default_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_mset_activity_default_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_mset_activity_default_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_set_direct_struct_args extends TBase {
  static $_TSPEC;

  public $user_id = null;
  public $update_struct = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'update_struct',
          'type' => TType::STRUCT,
          'class' => '\ERS\TDirectStruct',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_set_direct_struct_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_set_direct_struct_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_set_direct_struct_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_set_direct_struct_result extends TBase {
  static $_TSPEC;

  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_set_direct_struct_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_set_direct_struct_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_set_direct_struct_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_remove_activity_args extends TBase {
  static $_TSPEC;

  public $activity_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'activity_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_remove_activity_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_remove_activity_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_remove_activity_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_remove_activity_result extends TBase {
  static $_TSPEC;

  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_remove_activity_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_remove_activity_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_remove_activity_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_update_activity_args extends TBase {
  static $_TSPEC;

  public $update_struct = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'update_struct',
          'type' => TType::STRUCT,
          'class' => '\ERS\TActivity',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_update_activity_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_update_activity_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_update_activity_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_update_activity_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::I32,
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_update_activity_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_update_activity_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_update_activity_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_save_activity_args extends TBase {
  static $_TSPEC;

  public $activity_id = null;
  public $save_struct = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'activity_id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'save_struct',
          'type' => TType::STRUCT,
          'class' => '\ERS\TActivity',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_save_activity_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_save_activity_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_save_activity_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_save_activity_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::I32,
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_save_activity_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_save_activity_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_save_activity_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_save_dock_corp_args extends TBase {
  static $_TSPEC;

  public $dock_corp_id = null;
  public $save_struct = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'dock_corp_id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'save_struct',
          'type' => TType::STRUCT,
          'class' => '\ERS\TDockCorp',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_save_dock_corp_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_save_dock_corp_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_save_dock_corp_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_save_dock_corp_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::I32,
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_save_dock_corp_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_save_dock_corp_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_save_dock_corp_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_set_restaurant_dock_corp_args extends TBase {
  static $_TSPEC;

  public $restaurant_id = null;
  public $corp_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'restaurant_id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'corp_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_set_restaurant_dock_corp_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_set_restaurant_dock_corp_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_set_restaurant_dock_corp_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_set_restaurant_dock_corp_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::I32,
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_set_restaurant_dock_corp_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_set_restaurant_dock_corp_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_set_restaurant_dock_corp_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_delete_dock_corp_restaurant_by_restaurant_id_args extends TBase {
  static $_TSPEC;

  public $restaurant_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'restaurant_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_delete_dock_corp_restaurant_by_restaurant_id_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_delete_dock_corp_restaurant_by_restaurant_id_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_delete_dock_corp_restaurant_by_restaurant_id_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_delete_dock_corp_restaurant_by_restaurant_id_result extends TBase {
  static $_TSPEC;

  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_delete_dock_corp_restaurant_by_restaurant_id_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_delete_dock_corp_restaurant_by_restaurant_id_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_delete_dock_corp_restaurant_by_restaurant_id_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_mset_food_stock_args extends TBase {
  static $_TSPEC;

  public $mset_struct = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'mset_struct',
          'type' => TType::STRUCT,
          'class' => '\ERS\TFoodStock',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_mset_food_stock_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_mset_food_stock_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_mset_food_stock_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_mset_food_stock_result extends TBase {
  static $_TSPEC;

  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_mset_food_stock_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_mset_food_stock_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_mset_food_stock_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_mset_food_stock_by_category_args extends TBase {
  static $_TSPEC;

  public $category_id = null;
  public $is_max = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'category_id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'is_max',
          'type' => TType::BOOL,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_mset_food_stock_by_category_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_mset_food_stock_by_category_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_mset_food_stock_by_category_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_mset_food_stock_by_category_result extends TBase {
  static $_TSPEC;

  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_mset_food_stock_by_category_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_mset_food_stock_by_category_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_mset_food_stock_by_category_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_mset_food_stock_by_food_ids_args extends TBase {
  static $_TSPEC;

  public $food_ids = null;
  public $is_max = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'food_ids',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        2 => array(
          'var' => 'is_max',
          'type' => TType::BOOL,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_mset_food_stock_by_food_ids_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_mset_food_stock_by_food_ids_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_mset_food_stock_by_food_ids_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_mset_food_stock_by_food_ids_result extends TBase {
  static $_TSPEC;

  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_mset_food_stock_by_food_ids_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_mset_food_stock_by_food_ids_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_mset_food_stock_by_food_ids_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_update_food_args extends TBase {
  static $_TSPEC;

  public $update_struct = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'update_struct',
          'type' => TType::STRUCT,
          'class' => '\ERS\TFood',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_update_food_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_update_food_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_update_food_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_update_food_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::I32,
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_update_food_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_update_food_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_update_food_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_save_food_args extends TBase {
  static $_TSPEC;

  public $food_id = null;
  public $t_food = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'food_id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 't_food',
          'type' => TType::STRUCT,
          'class' => '\ERS\TFood',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_save_food_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_save_food_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_save_food_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_save_food_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::I32,
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_save_food_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_save_food_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_save_food_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_napos_save_food_args extends TBase {
  static $_TSPEC;

  public $food_id = null;
  public $t_food = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'food_id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 't_food',
          'type' => TType::STRUCT,
          'class' => '\ERS\TFood',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_napos_save_food_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_napos_save_food_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_napos_save_food_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_napos_save_food_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::I32,
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_napos_save_food_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_napos_save_food_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_napos_save_food_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_remove_food_args extends TBase {
  static $_TSPEC;

  public $food_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'food_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_remove_food_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_remove_food_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_remove_food_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_remove_food_result extends TBase {
  static $_TSPEC;

  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_remove_food_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_remove_food_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_remove_food_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_set_food_position_args extends TBase {
  static $_TSPEC;

  public $food_id = null;
  public $position = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'food_id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'position',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_set_food_position_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_set_food_position_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_set_food_position_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_set_food_position_result extends TBase {
  static $_TSPEC;

  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_set_food_position_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_set_food_position_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_set_food_position_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_mset_food_position_args extends TBase {
  static $_TSPEC;

  public $food_ids = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'food_ids',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_mset_food_position_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_mset_food_position_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_mset_food_position_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_mset_food_position_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::BOOL,
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_mset_food_position_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_mset_food_position_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_mset_food_position_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_update_food_category_args extends TBase {
  static $_TSPEC;

  public $update_struct = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'update_struct',
          'type' => TType::STRUCT,
          'class' => '\ERS\TFoodCategory',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_update_food_category_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_update_food_category_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_update_food_category_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_update_food_category_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::I32,
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_update_food_category_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_update_food_category_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_update_food_category_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_save_food_category_args extends TBase {
  static $_TSPEC;

  public $category_id = null;
  public $t_category = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'category_id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 't_category',
          'type' => TType::STRUCT,
          'class' => '\ERS\TFoodCategory',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_save_food_category_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_save_food_category_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_save_food_category_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_save_food_category_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::I32,
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_save_food_category_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_save_food_category_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_save_food_category_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_remove_food_category_args extends TBase {
  static $_TSPEC;

  public $food_category_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'food_category_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_remove_food_category_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_remove_food_category_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_remove_food_category_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_remove_food_category_result extends TBase {
  static $_TSPEC;

  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_remove_food_category_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_remove_food_category_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_remove_food_category_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_set_food_category_position_args extends TBase {
  static $_TSPEC;

  public $category_id = null;
  public $position = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'category_id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'position',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_set_food_category_position_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_set_food_category_position_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_set_food_category_position_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_set_food_category_position_result extends TBase {
  static $_TSPEC;

  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_set_food_category_position_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_set_food_category_position_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_set_food_category_position_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_mset_food_category_position_args extends TBase {
  static $_TSPEC;

  public $category_ids = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'category_ids',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_mset_food_category_position_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_mset_food_category_position_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_mset_food_category_position_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_mset_food_category_position_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::BOOL,
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_mset_food_category_position_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_mset_food_category_position_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_mset_food_category_position_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_add_food_category_attr_args extends TBase {
  static $_TSPEC;

  public $category_id = null;
  public $attr = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'category_id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'attr',
          'type' => TType::STRING,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_add_food_category_attr_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_add_food_category_attr_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_add_food_category_attr_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_add_food_category_attr_result extends TBase {
  static $_TSPEC;

  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_add_food_category_attr_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_add_food_category_attr_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_add_food_category_attr_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_remove_food_category_attr_args extends TBase {
  static $_TSPEC;

  public $category_id = null;
  public $attr = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'category_id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'attr',
          'type' => TType::STRING,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_remove_food_category_attr_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_remove_food_category_attr_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_remove_food_category_attr_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_remove_food_category_attr_result extends TBase {
  static $_TSPEC;

  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_remove_food_category_attr_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_remove_food_category_attr_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_remove_food_category_attr_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_remove_food_garnish_category_args extends TBase {
  static $_TSPEC;

  public $food_garnish_category_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'food_garnish_category_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_remove_food_garnish_category_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_remove_food_garnish_category_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_remove_food_garnish_category_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_remove_food_garnish_category_result extends TBase {
  static $_TSPEC;

  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_remove_food_garnish_category_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_remove_food_garnish_category_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_remove_food_garnish_category_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_update_food_garnish_category_args extends TBase {
  static $_TSPEC;

  public $update_struct = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'update_struct',
          'type' => TType::STRUCT,
          'class' => '\ERS\TFoodGarnishCategory',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_update_food_garnish_category_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_update_food_garnish_category_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_update_food_garnish_category_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_update_food_garnish_category_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::I32,
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_update_food_garnish_category_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_update_food_garnish_category_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_update_food_garnish_category_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_food_ugc_image_upload_args extends TBase {
  static $_TSPEC;

  public $order_item_id = null;
  public $image_hash_list = null;
  public $come_from = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'order_item_id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'image_hash_list',
          'type' => TType::LST,
          'etype' => TType::STRING,
          'elem' => array(
            'type' => TType::STRING,
            ),
          ),
        3 => array(
          'var' => 'come_from',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_food_ugc_image_upload_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_food_ugc_image_upload_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_food_ugc_image_upload_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_food_ugc_image_upload_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::LST,
          'etype' => TType::STRING,
          'elem' => array(
            'type' => TType::STRING,
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_food_ugc_image_upload_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_food_ugc_image_upload_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_food_ugc_image_upload_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_process_food_ugc_image_args extends TBase {
  static $_TSPEC;

  public $food_ugc_image_id = null;
  public $to_status = null;
  public $user_id = null;
  public $remark = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'food_ugc_image_id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'to_status',
          'type' => TType::I16,
          ),
        3 => array(
          'var' => 'user_id',
          'type' => TType::I32,
          ),
        4 => array(
          'var' => 'remark',
          'type' => TType::STRING,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_process_food_ugc_image_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_process_food_ugc_image_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_process_food_ugc_image_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_process_food_ugc_image_result extends TBase {
  static $_TSPEC;

  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_process_food_ugc_image_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_process_food_ugc_image_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_process_food_ugc_image_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_remove_garnish_args extends TBase {
  static $_TSPEC;

  public $garnish_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'garnish_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_remove_garnish_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_remove_garnish_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_remove_garnish_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_remove_garnish_result extends TBase {
  static $_TSPEC;

  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_remove_garnish_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_remove_garnish_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_remove_garnish_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_update_garnish_args extends TBase {
  static $_TSPEC;

  public $update_struct = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'update_struct',
          'type' => TType::STRUCT,
          'class' => '\ERS\TGarnish',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_update_garnish_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_update_garnish_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_update_garnish_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_update_garnish_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::I32,
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_update_garnish_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_update_garnish_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_update_garnish_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_remove_garnish_category_args extends TBase {
  static $_TSPEC;

  public $garnish_category_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'garnish_category_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_remove_garnish_category_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_remove_garnish_category_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_remove_garnish_category_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_remove_garnish_category_result extends TBase {
  static $_TSPEC;

  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_remove_garnish_category_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_remove_garnish_category_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_remove_garnish_category_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_update_garnish_category_args extends TBase {
  static $_TSPEC;

  public $update_struct = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'update_struct',
          'type' => TType::STRUCT,
          'class' => '\ERS\TGarnishCategory',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_update_garnish_category_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_update_garnish_category_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_update_garnish_category_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_update_garnish_category_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::I32,
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_update_garnish_category_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_update_garnish_category_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_update_garnish_category_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_update_logo_args extends TBase {
  static $_TSPEC;

  public $update_struct = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'update_struct',
          'type' => TType::STRUCT,
          'class' => '\ERS\TLogo',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_update_logo_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_update_logo_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_update_logo_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_update_logo_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::I32,
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_update_logo_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_update_logo_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_update_logo_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_new_restaurant_args extends TBase {
  static $_TSPEC;

  public $new_struct = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'new_struct',
          'type' => TType::STRUCT,
          'class' => '\ERS\TRestaurant',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_new_restaurant_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_new_restaurant_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_new_restaurant_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_new_restaurant_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::I32,
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_new_restaurant_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_new_restaurant_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_new_restaurant_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_update_restaurant_geohash_args extends TBase {
  static $_TSPEC;

  public $restaurant_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'restaurant_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_update_restaurant_geohash_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_update_restaurant_geohash_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_update_restaurant_geohash_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_update_restaurant_geohash_result extends TBase {
  static $_TSPEC;

  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_update_restaurant_geohash_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_update_restaurant_geohash_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_update_restaurant_geohash_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_update_restaurant_region_args extends TBase {
  static $_TSPEC;

  public $restaurant_id = null;
  public $region_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'restaurant_id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'region_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_update_restaurant_region_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_update_restaurant_region_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_update_restaurant_region_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_update_restaurant_region_result extends TBase {
  static $_TSPEC;

  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_update_restaurant_region_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_update_restaurant_region_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_update_restaurant_region_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_reset_restaurant_region_args extends TBase {
  static $_TSPEC;

  public $restaurant_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'restaurant_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_reset_restaurant_region_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_reset_restaurant_region_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_reset_restaurant_region_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_reset_restaurant_region_result extends TBase {
  static $_TSPEC;

  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_reset_restaurant_region_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_reset_restaurant_region_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_reset_restaurant_region_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_set_restaurant_status_args extends TBase {
  static $_TSPEC;

  public $restaurant_id = null;
  public $status = null;
  public $value = null;
  public $user_id = null;
  public $remark = null;
  public $remind_time = null;
  public $corp_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'restaurant_id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'status',
          'type' => TType::STRING,
          ),
        3 => array(
          'var' => 'value',
          'type' => TType::I32,
          ),
        4 => array(
          'var' => 'user_id',
          'type' => TType::I32,
          ),
        5 => array(
          'var' => 'remark',
          'type' => TType::STRING,
          ),
        6 => array(
          'var' => 'remind_time',
          'type' => TType::I64,
          ),
        7 => array(
          'var' => 'corp_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_set_restaurant_status_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_set_restaurant_status_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_set_restaurant_status_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_set_restaurant_status_result extends TBase {
  static $_TSPEC;

  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_set_restaurant_status_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_set_restaurant_status_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_set_restaurant_status_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_mset_restaurant_status_direct_args extends TBase {
  static $_TSPEC;

  public $restaurant_ids = null;
  public $status = null;
  public $value = null;
  public $user_id = null;
  public $remark = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'restaurant_ids',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        2 => array(
          'var' => 'status',
          'type' => TType::STRING,
          ),
        3 => array(
          'var' => 'value',
          'type' => TType::I32,
          ),
        4 => array(
          'var' => 'user_id',
          'type' => TType::I32,
          ),
        5 => array(
          'var' => 'remark',
          'type' => TType::STRING,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_mset_restaurant_status_direct_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_mset_restaurant_status_direct_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_mset_restaurant_status_direct_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_mset_restaurant_status_direct_result extends TBase {
  static $_TSPEC;

  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_mset_restaurant_status_direct_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_mset_restaurant_status_direct_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_mset_restaurant_status_direct_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_send_restaurant_change_notice_args extends TBase {
  static $_TSPEC;

  public $record_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'record_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_send_restaurant_change_notice_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_send_restaurant_change_notice_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_send_restaurant_change_notice_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_send_restaurant_change_notice_result extends TBase {
  static $_TSPEC;

  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_send_restaurant_change_notice_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_send_restaurant_change_notice_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_send_restaurant_change_notice_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_send_saas_change_notice_args extends TBase {
  static $_TSPEC;

  public $record_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'record_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_send_saas_change_notice_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_send_saas_change_notice_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_send_saas_change_notice_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_send_saas_change_notice_result extends TBase {
  static $_TSPEC;

  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_send_saas_change_notice_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_send_saas_change_notice_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_send_saas_change_notice_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_free_gift_icon_by_category_args extends TBase {
  static $_TSPEC;

  public $entity_category_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'entity_category_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_free_gift_icon_by_category_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_free_gift_icon_by_category_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_free_gift_icon_by_category_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_free_gift_icon_by_category_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::STRING,
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_free_gift_icon_by_category_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_free_gift_icon_by_category_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_free_gift_icon_by_category_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_add_restaurant_open_apply_args extends TBase {
  static $_TSPEC;

  public $user_id = null;
  public $applicant = null;
  public $telephone = null;
  public $mobilephone = null;
  public $qq = null;
  public $city_id = null;
  public $entry_id = null;
  public $geohash = null;
  public $restaurant_name = null;
  public $restaurant_address = null;
  public $restaurant_description = null;
  public $restaurant_url = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'applicant',
          'type' => TType::STRING,
          ),
        3 => array(
          'var' => 'telephone',
          'type' => TType::STRING,
          ),
        4 => array(
          'var' => 'mobilephone',
          'type' => TType::STRING,
          ),
        5 => array(
          'var' => 'qq',
          'type' => TType::STRING,
          ),
        6 => array(
          'var' => 'city_id',
          'type' => TType::I16,
          ),
        7 => array(
          'var' => 'entry_id',
          'type' => TType::I32,
          ),
        8 => array(
          'var' => 'geohash',
          'type' => TType::I64,
          ),
        9 => array(
          'var' => 'restaurant_name',
          'type' => TType::STRING,
          ),
        10 => array(
          'var' => 'restaurant_address',
          'type' => TType::STRING,
          ),
        11 => array(
          'var' => 'restaurant_description',
          'type' => TType::STRING,
          ),
        12 => array(
          'var' => 'restaurant_url',
          'type' => TType::STRING,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_add_restaurant_open_apply_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_add_restaurant_open_apply_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_add_restaurant_open_apply_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_add_restaurant_open_apply_result extends TBase {
  static $_TSPEC;

  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_add_restaurant_open_apply_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_add_restaurant_open_apply_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_add_restaurant_open_apply_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_is_reserved_restaurant_url_args extends TBase {
  static $_TSPEC;

  public $restaurant_url = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'restaurant_url',
          'type' => TType::STRING,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_is_reserved_restaurant_url_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_is_reserved_restaurant_url_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_is_reserved_restaurant_url_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_is_reserved_restaurant_url_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::BOOL,
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_is_reserved_restaurant_url_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_is_reserved_restaurant_url_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_is_reserved_restaurant_url_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_city_entry_json_args extends TBase {
  static $_TSPEC;

  public $city_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'city_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_city_entry_json_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_city_entry_json_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_city_entry_json_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_city_entry_json_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::STRING,
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_city_entry_json_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_city_entry_json_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_city_entry_json_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_restaurant_ugc_image_json_args extends TBase {
  static $_TSPEC;

  public $restaurant_id = null;
  public $limit = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'restaurant_id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'limit',
          'type' => TType::I16,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_restaurant_ugc_image_json_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_restaurant_ugc_image_json_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_restaurant_ugc_image_json_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_restaurant_ugc_image_json_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::STRING,
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_restaurant_ugc_image_json_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_restaurant_ugc_image_json_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_restaurant_ugc_image_json_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_restaurant_ugc_image_json_new_args extends TBase {
  static $_TSPEC;

  public $restaurant_id = null;
  public $limit = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'restaurant_id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'limit',
          'type' => TType::I16,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_restaurant_ugc_image_json_new_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_restaurant_ugc_image_json_new_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_restaurant_ugc_image_json_new_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_restaurant_ugc_image_json_new_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::STRING,
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_restaurant_ugc_image_json_new_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_restaurant_ugc_image_json_new_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_restaurant_ugc_image_json_new_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_restaurant_menu_json_args extends TBase {
  static $_TSPEC;

  public $restaurant_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'restaurant_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_restaurant_menu_json_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_restaurant_menu_json_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_restaurant_menu_json_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_restaurant_menu_json_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::STRING,
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_restaurant_menu_json_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_restaurant_menu_json_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_restaurant_menu_json_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_restaurant_menu_json_new_args extends TBase {
  static $_TSPEC;

  public $restaurant_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'restaurant_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_restaurant_menu_json_new_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_restaurant_menu_json_new_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_restaurant_menu_json_new_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_restaurant_menu_json_new_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::STRING,
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_restaurant_menu_json_new_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_restaurant_menu_json_new_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_restaurant_menu_json_new_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_add_food_activity_args extends TBase {
  static $_TSPEC;

  public $food_activity_id = null;
  public $food_ids = null;
  public $weekdays = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'food_activity_id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'food_ids',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        3 => array(
          'var' => 'weekdays',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_add_food_activity_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_add_food_activity_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_add_food_activity_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_add_food_activity_result extends TBase {
  static $_TSPEC;

  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_add_food_activity_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_add_food_activity_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_add_food_activity_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_clear_food_activity_args extends TBase {
  static $_TSPEC;

  public $food_ids = null;
  public $weekdays = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'food_ids',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        2 => array(
          'var' => 'weekdays',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_clear_food_activity_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_clear_food_activity_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_clear_food_activity_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_clear_food_activity_result extends TBase {
  static $_TSPEC;

  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_clear_food_activity_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_clear_food_activity_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_clear_food_activity_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_sync_food_activity_with_category_args extends TBase {
  static $_TSPEC;

  public $food_id = null;
  public $food_category_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'food_id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'food_category_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_sync_food_activity_with_category_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_sync_food_activity_with_category_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_sync_food_activity_with_category_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_sync_food_activity_with_category_result extends TBase {
  static $_TSPEC;

  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_sync_food_activity_with_category_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_sync_food_activity_with_category_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_sync_food_activity_with_category_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_dismiss_food_activity_args extends TBase {
  static $_TSPEC;

  public $food_activity_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'food_activity_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_dismiss_food_activity_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_dismiss_food_activity_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_dismiss_food_activity_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_dismiss_food_activity_result extends TBase {
  static $_TSPEC;

  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_dismiss_food_activity_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_dismiss_food_activity_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_dismiss_food_activity_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_count_seo_sm_place_args extends TBase {
  static $_TSPEC;

  public $query_struct = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'query_struct',
          'type' => TType::STRUCT,
          'class' => '\ERS\TSeoSmQuery',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_count_seo_sm_place_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_count_seo_sm_place_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_count_seo_sm_place_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_count_seo_sm_place_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::I32,
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_count_seo_sm_place_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_count_seo_sm_place_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_count_seo_sm_place_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_update_restaurant_args extends TBase {
  static $_TSPEC;

  public $restaurant_id = null;
  public $user_id = null;
  public $t_rst = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'restaurant_id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'user_id',
          'type' => TType::I32,
          ),
        3 => array(
          'var' => 't_rst',
          'type' => TType::STRUCT,
          'class' => '\ERS\TRestaurant',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_update_restaurant_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_update_restaurant_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_update_restaurant_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_update_restaurant_result extends TBase {
  static $_TSPEC;

  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_update_restaurant_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_update_restaurant_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_update_restaurant_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_overload_close_restaurant_args extends TBase {
  static $_TSPEC;

  public $order_modes = null;
  public $saas_statuses = null;
  public $sms_services = null;
  public $exculde_city_ids = null;
  public $exculde_region_group_ids = null;
  public $exculde_region_ids = null;
  public $exculde_restaurant_ids = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'order_modes',
          'type' => TType::LST,
          'etype' => TType::I16,
          'elem' => array(
            'type' => TType::I16,
            ),
          ),
        2 => array(
          'var' => 'saas_statuses',
          'type' => TType::LST,
          'etype' => TType::I16,
          'elem' => array(
            'type' => TType::I16,
            ),
          ),
        3 => array(
          'var' => 'sms_services',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        4 => array(
          'var' => 'exculde_city_ids',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        5 => array(
          'var' => 'exculde_region_group_ids',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        6 => array(
          'var' => 'exculde_region_ids',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        7 => array(
          'var' => 'exculde_restaurant_ids',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_overload_close_restaurant_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_overload_close_restaurant_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_overload_close_restaurant_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_overload_close_restaurant_result extends TBase {
  static $_TSPEC;

  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_overload_close_restaurant_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_overload_close_restaurant_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_overload_close_restaurant_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_restaurant_deliver_time_args extends TBase {
  static $_TSPEC;

  public $restaurant_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'restaurant_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_restaurant_deliver_time_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_restaurant_deliver_time_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_restaurant_deliver_time_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_restaurant_deliver_time_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::I32,
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_restaurant_deliver_time_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_restaurant_deliver_time_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_restaurant_deliver_time_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_restaurant_manage_tree_args extends TBase {
  static $_TSPEC;

  public $restaurant_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'restaurant_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_restaurant_manage_tree_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_restaurant_manage_tree_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_restaurant_manage_tree_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_restaurant_manage_tree_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::STRUCT,
          'class' => '\ERS\TCRestaurantManageTree',
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_restaurant_manage_tree_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_restaurant_manage_tree_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_restaurant_manage_tree_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_all_restaurant_back_alive_args extends TBase {
  static $_TSPEC;

  public $from_datetime = null;
  public $order_modes = null;
  public $saas_statuses = null;
  public $sms_services = null;
  public $city_ids = null;
  public $region_group_ids = null;
  public $region_ids = null;
  public $restaurant_ids = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'from_datetime',
          'type' => TType::I64,
          ),
        2 => array(
          'var' => 'order_modes',
          'type' => TType::LST,
          'etype' => TType::I16,
          'elem' => array(
            'type' => TType::I16,
            ),
          ),
        3 => array(
          'var' => 'saas_statuses',
          'type' => TType::LST,
          'etype' => TType::I16,
          'elem' => array(
            'type' => TType::I16,
            ),
          ),
        4 => array(
          'var' => 'sms_services',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        5 => array(
          'var' => 'city_ids',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        6 => array(
          'var' => 'region_group_ids',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        7 => array(
          'var' => 'region_ids',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        8 => array(
          'var' => 'restaurant_ids',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_all_restaurant_back_alive_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_all_restaurant_back_alive_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_all_restaurant_back_alive_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_all_restaurant_back_alive_result extends TBase {
  static $_TSPEC;

  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_all_restaurant_back_alive_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_all_restaurant_back_alive_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_all_restaurant_back_alive_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_check_restaurant_permission_args extends TBase {
  static $_TSPEC;

  public $user_id = null;
  public $restaurant_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'restaurant_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_check_restaurant_permission_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_check_restaurant_permission_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_check_restaurant_permission_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_check_restaurant_permission_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::BOOL,
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_check_restaurant_permission_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_check_restaurant_permission_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_check_restaurant_permission_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_mget_restaurant_in_region_args extends TBase {
  static $_TSPEC;

  public $region_ids = null;
  public $is_valid = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'region_ids',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        2 => array(
          'var' => 'is_valid',
          'type' => TType::BOOL,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_mget_restaurant_in_region_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_mget_restaurant_in_region_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_mget_restaurant_in_region_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_mget_restaurant_in_region_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_mget_restaurant_in_region_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_mget_restaurant_in_region_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_mget_restaurant_in_region_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_archive_restaurant_status_args extends TBase {
  static $_TSPEC;


  public function __construct() {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        );
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_archive_restaurant_status_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_archive_restaurant_status_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_archive_restaurant_status_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_archive_restaurant_status_result extends TBase {
  static $_TSPEC;

  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_archive_restaurant_status_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_archive_restaurant_status_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_archive_restaurant_status_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_do_archive_restaurant_status_args extends TBase {
  static $_TSPEC;

  public $restaurant_ids = null;
  public $record_time = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'restaurant_ids',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        2 => array(
          'var' => 'record_time',
          'type' => TType::I64,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_do_archive_restaurant_status_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_do_archive_restaurant_status_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_do_archive_restaurant_status_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_do_archive_restaurant_status_result extends TBase {
  static $_TSPEC;

  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_do_archive_restaurant_status_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_do_archive_restaurant_status_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_do_archive_restaurant_status_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_area_structure_args extends TBase {
  static $_TSPEC;

  public $user_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_area_structure_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_area_structure_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_area_structure_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_area_structure_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::STRING,
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_area_structure_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_area_structure_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_area_structure_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_stats_area_structure_args extends TBase {
  static $_TSPEC;

  public $user_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_stats_area_structure_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_stats_area_structure_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_stats_area_structure_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_stats_area_structure_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::STRING,
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_stats_area_structure_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_stats_area_structure_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_stats_area_structure_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_filter_area_args extends TBase {
  static $_TSPEC;

  public $user_id = null;
  public $struct_json = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'struct_json',
          'type' => TType::STRING,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_filter_area_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_filter_area_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_filter_area_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_filter_area_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::STRING,
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_filter_area_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_filter_area_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_filter_area_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_filter_stats_area_args extends TBase {
  static $_TSPEC;

  public $user_id = null;
  public $struct_json = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'struct_json',
          'type' => TType::STRING,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_filter_stats_area_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_filter_stats_area_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_filter_stats_area_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_filter_stats_area_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::STRING,
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_filter_stats_area_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_filter_stats_area_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_filter_stats_area_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_saas_status_touch_args extends TBase {
  static $_TSPEC;

  public $restaurant_id = null;
  public $change_type = null;
  public $user_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'restaurant_id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'change_type',
          'type' => TType::I16,
          ),
        3 => array(
          'var' => 'user_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_saas_status_touch_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_saas_status_touch_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_saas_status_touch_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_saas_status_touch_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::BOOL,
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_saas_status_touch_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_saas_status_touch_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_saas_status_touch_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_saas_recharge_custom_args extends TBase {
  static $_TSPEC;

  public $restaurant_id = null;
  public $change_attr = null;
  public $change_amount = null;
  public $user_id = null;
  public $remark = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'restaurant_id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'change_attr',
          'type' => TType::I16,
          ),
        3 => array(
          'var' => 'change_amount',
          'type' => TType::I16,
          ),
        4 => array(
          'var' => 'user_id',
          'type' => TType::I32,
          ),
        5 => array(
          'var' => 'remark',
          'type' => TType::STRING,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_saas_recharge_custom_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_saas_recharge_custom_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_saas_recharge_custom_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_saas_recharge_custom_result extends TBase {
  static $_TSPEC;

  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_saas_recharge_custom_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_saas_recharge_custom_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_saas_recharge_custom_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_saas_set_status_custom_args extends TBase {
  static $_TSPEC;

  public $restaurant_id = null;
  public $status_new = null;
  public $remark = null;
  public $user_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'restaurant_id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'status_new',
          'type' => TType::I16,
          ),
        3 => array(
          'var' => 'remark',
          'type' => TType::STRING,
          ),
        4 => array(
          'var' => 'user_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_saas_set_status_custom_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_saas_set_status_custom_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_saas_set_status_custom_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_saas_set_status_custom_result extends TBase {
  static $_TSPEC;

  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_saas_set_status_custom_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_saas_set_status_custom_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_saas_set_status_custom_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_saas_set_trial_args extends TBase {
  static $_TSPEC;

  public $restaurant_id = null;
  public $bonus = null;
  public $user_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'restaurant_id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'bonus',
          'type' => TType::I16,
          ),
        3 => array(
          'var' => 'user_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_saas_set_trial_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_saas_set_trial_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_saas_set_trial_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_saas_set_trial_result extends TBase {
  static $_TSPEC;

  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_saas_set_trial_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_saas_set_trial_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_saas_set_trial_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_saas_set_temp_free_args extends TBase {
  static $_TSPEC;

  public $restaurant_id = null;
  public $end_date = null;
  public $remark = null;
  public $user_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'restaurant_id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'end_date',
          'type' => TType::STRING,
          ),
        3 => array(
          'var' => 'remark',
          'type' => TType::STRING,
          ),
        4 => array(
          'var' => 'user_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_saas_set_temp_free_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_saas_set_temp_free_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_saas_set_temp_free_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_saas_set_temp_free_result extends TBase {
  static $_TSPEC;

  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_saas_set_temp_free_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_saas_set_temp_free_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_saas_set_temp_free_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_saas_abandon_contract_args extends TBase {
  static $_TSPEC;

  public $sn = null;
  public $user_id = null;
  public $remark = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'sn',
          'type' => TType::STRING,
          ),
        2 => array(
          'var' => 'user_id',
          'type' => TType::I32,
          ),
        3 => array(
          'var' => 'remark',
          'type' => TType::STRING,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_saas_abandon_contract_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_saas_abandon_contract_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_saas_abandon_contract_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_saas_abandon_contract_result extends TBase {
  static $_TSPEC;

  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_saas_abandon_contract_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_saas_abandon_contract_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_saas_abandon_contract_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_saas_archive_contract_args extends TBase {
  static $_TSPEC;

  public $sn = null;
  public $user_id = null;
  public $remark = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'sn',
          'type' => TType::STRING,
          ),
        2 => array(
          'var' => 'user_id',
          'type' => TType::I32,
          ),
        3 => array(
          'var' => 'remark',
          'type' => TType::STRING,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_saas_archive_contract_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_saas_archive_contract_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_saas_archive_contract_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_saas_archive_contract_result extends TBase {
  static $_TSPEC;

  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_saas_archive_contract_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_saas_archive_contract_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_saas_archive_contract_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_saas_set_contract_bonus_sent_args extends TBase {
  static $_TSPEC;

  public $sn = null;
  public $user_id = null;
  public $remark = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'sn',
          'type' => TType::STRING,
          ),
        2 => array(
          'var' => 'user_id',
          'type' => TType::I32,
          ),
        3 => array(
          'var' => 'remark',
          'type' => TType::STRING,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_saas_set_contract_bonus_sent_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_saas_set_contract_bonus_sent_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_saas_set_contract_bonus_sent_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_saas_set_contract_bonus_sent_result extends TBase {
  static $_TSPEC;

  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_saas_set_contract_bonus_sent_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_saas_set_contract_bonus_sent_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_saas_set_contract_bonus_sent_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_saas_confirm_income_args extends TBase {
  static $_TSPEC;

  public $sn = null;
  public $payment_type = null;
  public $user_id = null;
  public $rec_date = null;
  public $remark = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'sn',
          'type' => TType::STRING,
          ),
        2 => array(
          'var' => 'payment_type',
          'type' => TType::I16,
          ),
        3 => array(
          'var' => 'user_id',
          'type' => TType::I32,
          ),
        4 => array(
          'var' => 'rec_date',
          'type' => TType::I64,
          ),
        5 => array(
          'var' => 'remark',
          'type' => TType::STRING,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_saas_confirm_income_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_saas_confirm_income_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_saas_confirm_income_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_saas_confirm_income_result extends TBase {
  static $_TSPEC;

  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_saas_confirm_income_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_saas_confirm_income_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_saas_confirm_income_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_saas_check_trials_args extends TBase {
  static $_TSPEC;

  public $restaurant_ids = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'restaurant_ids',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_saas_check_trials_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_saas_check_trials_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_saas_check_trials_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_saas_check_trials_result extends TBase {
  static $_TSPEC;

  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_saas_check_trials_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_saas_check_trials_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_saas_check_trials_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_saas_check_remains_args extends TBase {
  static $_TSPEC;


  public function __construct() {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        );
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_saas_check_remains_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_saas_check_remains_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_saas_check_remains_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_saas_check_remains_result extends TBase {
  static $_TSPEC;

  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_saas_check_remains_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_saas_check_remains_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_saas_check_remains_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_saas_check_temp_frees_args extends TBase {
  static $_TSPEC;


  public function __construct() {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        );
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_saas_check_temp_frees_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_saas_check_temp_frees_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_saas_check_temp_frees_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_saas_check_temp_frees_result extends TBase {
  static $_TSPEC;

  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_saas_check_temp_frees_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_saas_check_temp_frees_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_saas_check_temp_frees_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_saas_check_abandons_args extends TBase {
  static $_TSPEC;


  public function __construct() {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        );
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_saas_check_abandons_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_saas_check_abandons_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_saas_check_abandons_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_saas_check_abandons_result extends TBase {
  static $_TSPEC;

  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_saas_check_abandons_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_saas_check_abandons_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_saas_check_abandons_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_saas_daily_report_args extends TBase {
  static $_TSPEC;


  public function __construct() {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        );
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_saas_daily_report_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_saas_daily_report_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_saas_daily_report_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_saas_daily_report_result extends TBase {
  static $_TSPEC;

  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_saas_daily_report_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_saas_daily_report_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_saas_daily_report_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_save_saas_contract_plan_args extends TBase {
  static $_TSPEC;

  public $plan_id = null;
  public $t_saas_contract_plan = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'plan_id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 't_saas_contract_plan',
          'type' => TType::STRUCT,
          'class' => '\ERS\TSaasContractPlan',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_save_saas_contract_plan_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_save_saas_contract_plan_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_save_saas_contract_plan_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_save_saas_contract_plan_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::I32,
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_save_saas_contract_plan_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_save_saas_contract_plan_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_save_saas_contract_plan_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_count_saas_contract_plan_args extends TBase {
  static $_TSPEC;

  public $query_struct = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'query_struct',
          'type' => TType::STRUCT,
          'class' => '\ERS\TSaasContractPlanQuery',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_count_saas_contract_plan_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_count_saas_contract_plan_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_count_saas_contract_plan_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_count_saas_contract_plan_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::I32,
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_count_saas_contract_plan_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_count_saas_contract_plan_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_count_saas_contract_plan_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_saas_contract_plan_args extends TBase {
  static $_TSPEC;

  public $query_struct = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'query_struct',
          'type' => TType::STRUCT,
          'class' => '\ERS\TSaasContractPlanQuery',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_saas_contract_plan_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_saas_contract_plan_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_saas_contract_plan_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_saas_contract_plan_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::LST,
          'etype' => TType::STRUCT,
          'elem' => array(
            'type' => TType::STRUCT,
            'class' => '\ERS\TSaasContractPlan',
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_saas_contract_plan_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_saas_contract_plan_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_saas_contract_plan_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_saas_contract_plan_args extends TBase {
  static $_TSPEC;

  public $plan_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'plan_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_saas_contract_plan_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_saas_contract_plan_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_saas_contract_plan_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_saas_contract_plan_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::STRUCT,
          'class' => '\ERS\TSaasContractPlan',
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_saas_contract_plan_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_saas_contract_plan_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_saas_contract_plan_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_new_saas_contract_record_args extends TBase {
  static $_TSPEC;

  public $t_record = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 't_record',
          'type' => TType::STRUCT,
          'class' => '\ERS\TSaasContractRecord',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_new_saas_contract_record_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_new_saas_contract_record_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_new_saas_contract_record_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_new_saas_contract_record_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::STRING,
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_new_saas_contract_record_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_new_saas_contract_record_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_new_saas_contract_record_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_count_saas_contract_record_args extends TBase {
  static $_TSPEC;

  public $query_struct = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'query_struct',
          'type' => TType::STRUCT,
          'class' => '\ERS\TSaasContractRecordQuery',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_count_saas_contract_record_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_count_saas_contract_record_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_count_saas_contract_record_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_count_saas_contract_record_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::I32,
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_count_saas_contract_record_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_count_saas_contract_record_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_count_saas_contract_record_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_saas_contract_record_args extends TBase {
  static $_TSPEC;

  public $query_struct = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'query_struct',
          'type' => TType::STRUCT,
          'class' => '\ERS\TSaasContractRecordQuery',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_saas_contract_record_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_saas_contract_record_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_saas_contract_record_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_saas_contract_record_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::LST,
          'etype' => TType::STRUCT,
          'elem' => array(
            'type' => TType::STRUCT,
            'class' => '\ERS\TSaasContractRecord',
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_saas_contract_record_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_saas_contract_record_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_saas_contract_record_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_saas_status_args extends TBase {
  static $_TSPEC;

  public $query_struct = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'query_struct',
          'type' => TType::STRUCT,
          'class' => '\ERS\TSaasStatusQuery',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_saas_status_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_saas_status_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_saas_status_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_saas_status_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::LST,
          'etype' => TType::STRUCT,
          'elem' => array(
            'type' => TType::STRUCT,
            'class' => '\ERS\TCSaasStatus',
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_saas_status_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_saas_status_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_saas_status_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_count_saas_status_args extends TBase {
  static $_TSPEC;

  public $query_struct = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'query_struct',
          'type' => TType::STRUCT,
          'class' => '\ERS\TSaasStatusQuery',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_count_saas_status_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_count_saas_status_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_count_saas_status_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_count_saas_status_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::I32,
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_count_saas_status_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_count_saas_status_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_count_saas_status_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_saas_status_change_args extends TBase {
  static $_TSPEC;

  public $query_struct = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'query_struct',
          'type' => TType::STRUCT,
          'class' => '\ERS\TSaasStatusChangeQuery',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_saas_status_change_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_saas_status_change_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_saas_status_change_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_saas_status_change_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::LST,
          'etype' => TType::STRUCT,
          'elem' => array(
            'type' => TType::STRUCT,
            'class' => '\ERS\TSaasStatusChange',
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_saas_status_change_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_saas_status_change_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_saas_status_change_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_count_saas_status_change_args extends TBase {
  static $_TSPEC;

  public $query_struct = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'query_struct',
          'type' => TType::STRUCT,
          'class' => '\ERS\TSaasStatusChangeQuery',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_count_saas_status_change_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_count_saas_status_change_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_count_saas_status_change_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_count_saas_status_change_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::I32,
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_count_saas_status_change_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_count_saas_status_change_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_count_saas_status_change_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_saas_contract_record_args extends TBase {
  static $_TSPEC;

  public $sn = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'sn',
          'type' => TType::STRING,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_saas_contract_record_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_saas_contract_record_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_saas_contract_record_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_saas_contract_record_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::STRUCT,
          'class' => '\ERS\TSaasContractRecord',
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_saas_contract_record_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_saas_contract_record_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_saas_contract_record_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_mget_saas_contract_record_args extends TBase {
  static $_TSPEC;

  public $sns = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'sns',
          'type' => TType::LST,
          'etype' => TType::STRING,
          'elem' => array(
            'type' => TType::STRING,
            ),
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_mget_saas_contract_record_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_mget_saas_contract_record_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_mget_saas_contract_record_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_mget_saas_contract_record_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::LST,
          'etype' => TType::STRUCT,
          'elem' => array(
            'type' => TType::STRUCT,
            'class' => '\ERS\TSaasContractRecord',
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_mget_saas_contract_record_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_mget_saas_contract_record_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_mget_saas_contract_record_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_saas_update_contract_ranking_info_args extends TBase {
  static $_TSPEC;

  public $sn = null;
  public $ranking_infos = null;
  public $user_id = null;
  public $remark = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'sn',
          'type' => TType::STRING,
          ),
        2 => array(
          'var' => 'ranking_infos',
          'type' => TType::LST,
          'etype' => TType::STRUCT,
          'elem' => array(
            'type' => TType::STRUCT,
            'class' => '\ERS\TCRankingInfo',
            ),
          ),
        3 => array(
          'var' => 'user_id',
          'type' => TType::I32,
          ),
        4 => array(
          'var' => 'remark',
          'type' => TType::STRING,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_saas_update_contract_ranking_info_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_saas_update_contract_ranking_info_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_saas_update_contract_ranking_info_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_saas_update_contract_ranking_info_result extends TBase {
  static $_TSPEC;

  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_saas_update_contract_ranking_info_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_saas_update_contract_ranking_info_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_saas_update_contract_ranking_info_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_saas_contract_combo_args extends TBase {
  static $_TSPEC;

  public $sn = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'sn',
          'type' => TType::STRING,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_saas_contract_combo_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_saas_contract_combo_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_saas_contract_combo_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_saas_contract_combo_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::STRUCT,
          'class' => '\ERS\TSaasContractCombo',
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_saas_contract_combo_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_saas_contract_combo_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_saas_contract_combo_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_mget_saas_contract_combo_args extends TBase {
  static $_TSPEC;

  public $sns = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'sns',
          'type' => TType::LST,
          'etype' => TType::STRING,
          'elem' => array(
            'type' => TType::STRING,
            ),
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_mget_saas_contract_combo_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_mget_saas_contract_combo_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_mget_saas_contract_combo_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_mget_saas_contract_combo_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::LST,
          'etype' => TType::STRUCT,
          'elem' => array(
            'type' => TType::STRUCT,
            'class' => '\ERS\TSaasContractCombo',
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_mget_saas_contract_combo_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_mget_saas_contract_combo_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_mget_saas_contract_combo_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_saas_contract_combo_args extends TBase {
  static $_TSPEC;

  public $query_struct = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'query_struct',
          'type' => TType::STRUCT,
          'class' => '\ERS\TSaasContractComboQuery',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_saas_contract_combo_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_saas_contract_combo_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_saas_contract_combo_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_saas_contract_combo_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::LST,
          'etype' => TType::STRUCT,
          'elem' => array(
            'type' => TType::STRUCT,
            'class' => '\ERS\TSaasContractCombo',
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_saas_contract_combo_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_saas_contract_combo_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_saas_contract_combo_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_count_saas_contract_combo_args extends TBase {
  static $_TSPEC;

  public $query_struct = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'query_struct',
          'type' => TType::STRUCT,
          'class' => '\ERS\TSaasContractComboQuery',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_count_saas_contract_combo_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_count_saas_contract_combo_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_count_saas_contract_combo_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_count_saas_contract_combo_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::I32,
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_count_saas_contract_combo_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_count_saas_contract_combo_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_count_saas_contract_combo_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_new_saas_contract_combo_args extends TBase {
  static $_TSPEC;

  public $t_combo = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 't_combo',
          'type' => TType::STRUCT,
          'class' => '\ERS\TSaasContractCombo',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_new_saas_contract_combo_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_new_saas_contract_combo_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_new_saas_contract_combo_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_new_saas_contract_combo_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::STRING,
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_new_saas_contract_combo_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_new_saas_contract_combo_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_new_saas_contract_combo_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_confirm_saas_combo_income_args extends TBase {
  static $_TSPEC;

  public $sn = null;
  public $payment_type = null;
  public $user_id = null;
  public $rec_date = null;
  public $remark = null;
  public $saas_duration = null;
  public $saas_price = null;
  public $ranking_duration = null;
  public $ranking_price = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'sn',
          'type' => TType::STRING,
          ),
        2 => array(
          'var' => 'payment_type',
          'type' => TType::I16,
          ),
        3 => array(
          'var' => 'user_id',
          'type' => TType::I32,
          ),
        4 => array(
          'var' => 'rec_date',
          'type' => TType::I64,
          ),
        5 => array(
          'var' => 'remark',
          'type' => TType::STRING,
          ),
        6 => array(
          'var' => 'saas_duration',
          'type' => TType::I32,
          ),
        7 => array(
          'var' => 'saas_price',
          'type' => TType::DOUBLE,
          ),
        8 => array(
          'var' => 'ranking_duration',
          'type' => TType::I32,
          ),
        9 => array(
          'var' => 'ranking_price',
          'type' => TType::DOUBLE,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_confirm_saas_combo_income_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_confirm_saas_combo_income_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_confirm_saas_combo_income_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_confirm_saas_combo_income_result extends TBase {
  static $_TSPEC;

  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_confirm_saas_combo_income_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_confirm_saas_combo_income_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_confirm_saas_combo_income_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_stop_saas_contract_combo_args extends TBase {
  static $_TSPEC;

  public $sn = null;
  public $user_id = null;
  public $remark = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'sn',
          'type' => TType::STRING,
          ),
        2 => array(
          'var' => 'user_id',
          'type' => TType::I32,
          ),
        3 => array(
          'var' => 'remark',
          'type' => TType::STRING,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_stop_saas_contract_combo_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_stop_saas_contract_combo_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_stop_saas_contract_combo_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_stop_saas_contract_combo_result extends TBase {
  static $_TSPEC;

  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_stop_saas_contract_combo_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_stop_saas_contract_combo_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_stop_saas_contract_combo_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_abandon_saas_contract_combo_args extends TBase {
  static $_TSPEC;

  public $sn = null;
  public $user_id = null;
  public $remark = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'sn',
          'type' => TType::STRING,
          ),
        2 => array(
          'var' => 'user_id',
          'type' => TType::I32,
          ),
        3 => array(
          'var' => 'remark',
          'type' => TType::STRING,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_abandon_saas_contract_combo_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_abandon_saas_contract_combo_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_abandon_saas_contract_combo_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_abandon_saas_contract_combo_result extends TBase {
  static $_TSPEC;

  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_abandon_saas_contract_combo_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_abandon_saas_contract_combo_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_abandon_saas_contract_combo_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_op_quit_args extends TBase {
  static $_TSPEC;

  public $restaurant_id = null;
  public $admin_user_id = null;
  public $password = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'restaurant_id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'admin_user_id',
          'type' => TType::I32,
          ),
        3 => array(
          'var' => 'password',
          'type' => TType::STRING,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_op_quit_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_op_quit_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_op_quit_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_op_quit_result extends TBase {
  static $_TSPEC;


  public function __construct() {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        );
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_op_quit_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_op_quit_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_op_quit_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_new_food_activity_args extends TBase {
  static $_TSPEC;

  public $new_activity = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'new_activity',
          'type' => TType::STRUCT,
          'class' => '\ERS\TFoodActivity',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_new_food_activity_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_new_food_activity_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_new_food_activity_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_new_food_activity_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::I32,
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_new_food_activity_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_new_food_activity_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_new_food_activity_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_update_food_activity_args extends TBase {
  static $_TSPEC;

  public $food_activity_id = null;
  public $activity_struct = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'food_activity_id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'activity_struct',
          'type' => TType::STRUCT,
          'class' => '\ERS\TFoodActivity',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_update_food_activity_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_update_food_activity_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_update_food_activity_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_update_food_activity_result extends TBase {
  static $_TSPEC;

  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_update_food_activity_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_update_food_activity_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_update_food_activity_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_restaurant_appliable_activity_ids_args extends TBase {
  static $_TSPEC;

  public $restaurant_id = null;
  public $activity_category_id = null;
  public $activity_type = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'restaurant_id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'activity_category_id',
          'type' => TType::I32,
          ),
        3 => array(
          'var' => 'activity_type',
          'type' => TType::I16,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_restaurant_appliable_activity_ids_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_restaurant_appliable_activity_ids_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_restaurant_appliable_activity_ids_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_restaurant_appliable_activity_ids_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_restaurant_appliable_activity_ids_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_restaurant_appliable_activity_ids_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_restaurant_appliable_activity_ids_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_restaurant_activity_status_args extends TBase {
  static $_TSPEC;

  public $restaurant_id = null;
  public $activity_type = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'restaurant_id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'activity_type',
          'type' => TType::I16,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_restaurant_activity_status_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_restaurant_activity_status_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_restaurant_activity_status_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_restaurant_activity_status_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::I16,
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_restaurant_activity_status_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_restaurant_activity_status_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_restaurant_activity_status_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_food_activity_status_args extends TBase {
  static $_TSPEC;

  public $restaurant_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'restaurant_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_food_activity_status_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_food_activity_status_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_food_activity_status_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_food_activity_status_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::MAP,
          'ktype' => TType::I32,
          'vtype' => TType::I16,
          'key' => array(
            'type' => TType::I32,
          ),
          'val' => array(
            'type' => TType::I16,
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_food_activity_status_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_food_activity_status_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_food_activity_status_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_participatable_food_activity_ids_args extends TBase {
  static $_TSPEC;

  public $restaurant_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'restaurant_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_participatable_food_activity_ids_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_participatable_food_activity_ids_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_participatable_food_activity_ids_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_participatable_food_activity_ids_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::MAP,
          'ktype' => TType::I32,
          'vtype' => TType::LST,
          'key' => array(
            'type' => TType::I32,
          ),
          'val' => array(
            'type' => TType::LST,
            'etype' => TType::I32,
            'elem' => array(
              'type' => TType::I32,
              ),
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_participatable_food_activity_ids_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_participatable_food_activity_ids_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_participatable_food_activity_ids_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_apply_for_activity_subsidy_contract_args extends TBase {
  static $_TSPEC;

  public $restaurant_id = null;
  public $activity_id = null;
  public $activity_category_id = null;
  public $subsidy = null;
  public $submit_user_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'restaurant_id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'activity_id',
          'type' => TType::I32,
          ),
        3 => array(
          'var' => 'activity_category_id',
          'type' => TType::I32,
          ),
        4 => array(
          'var' => 'subsidy',
          'type' => TType::DOUBLE,
          ),
        5 => array(
          'var' => 'submit_user_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_apply_for_activity_subsidy_contract_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_apply_for_activity_subsidy_contract_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_apply_for_activity_subsidy_contract_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_apply_for_activity_subsidy_contract_result extends TBase {
  static $_TSPEC;

  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_apply_for_activity_subsidy_contract_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_apply_for_activity_subsidy_contract_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_apply_for_activity_subsidy_contract_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_apply_for_complex_activity_subsidy_contract_args extends TBase {
  static $_TSPEC;

  public $restaurant_id = null;
  public $activity_id = null;
  public $activity_category_id = null;
  public $subsidy_json = null;
  public $submit_user_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'restaurant_id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'activity_id',
          'type' => TType::I32,
          ),
        3 => array(
          'var' => 'activity_category_id',
          'type' => TType::I32,
          ),
        4 => array(
          'var' => 'subsidy_json',
          'type' => TType::STRING,
          ),
        5 => array(
          'var' => 'submit_user_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_apply_for_complex_activity_subsidy_contract_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_apply_for_complex_activity_subsidy_contract_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_apply_for_complex_activity_subsidy_contract_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_apply_for_complex_activity_subsidy_contract_result extends TBase {
  static $_TSPEC;

  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_apply_for_complex_activity_subsidy_contract_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_apply_for_complex_activity_subsidy_contract_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_apply_for_complex_activity_subsidy_contract_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_approve_activity_subsidy_contract_args extends TBase {
  static $_TSPEC;

  public $contract_ids = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'contract_ids',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_approve_activity_subsidy_contract_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_approve_activity_subsidy_contract_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_approve_activity_subsidy_contract_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_approve_activity_subsidy_contract_result extends TBase {
  static $_TSPEC;

  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_approve_activity_subsidy_contract_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_approve_activity_subsidy_contract_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_approve_activity_subsidy_contract_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_reject_activity_subsidy_contract_args extends TBase {
  static $_TSPEC;

  public $contract_ids = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'contract_ids',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_reject_activity_subsidy_contract_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_reject_activity_subsidy_contract_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_reject_activity_subsidy_contract_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_reject_activity_subsidy_contract_result extends TBase {
  static $_TSPEC;

  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_reject_activity_subsidy_contract_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_reject_activity_subsidy_contract_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_reject_activity_subsidy_contract_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_sign_activity_subsidy_contract_args extends TBase {
  static $_TSPEC;

  public $subsidy_contract_id = null;
  public $restaurant_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'subsidy_contract_id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'restaurant_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_sign_activity_subsidy_contract_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_sign_activity_subsidy_contract_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_sign_activity_subsidy_contract_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_sign_activity_subsidy_contract_result extends TBase {
  static $_TSPEC;

  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_sign_activity_subsidy_contract_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_sign_activity_subsidy_contract_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_sign_activity_subsidy_contract_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_refuse_activity_subsidy_contract_args extends TBase {
  static $_TSPEC;

  public $subsidy_contract_id = null;
  public $restaurant_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'subsidy_contract_id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'restaurant_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_refuse_activity_subsidy_contract_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_refuse_activity_subsidy_contract_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_refuse_activity_subsidy_contract_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_refuse_activity_subsidy_contract_result extends TBase {
  static $_TSPEC;

  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_refuse_activity_subsidy_contract_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_refuse_activity_subsidy_contract_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_refuse_activity_subsidy_contract_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_restaurant_activity_subsidy_args extends TBase {
  static $_TSPEC;

  public $restaurant_id = null;
  public $activity_id = null;
  public $activity_category_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'restaurant_id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'activity_id',
          'type' => TType::I32,
          ),
        3 => array(
          'var' => 'activity_category_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_restaurant_activity_subsidy_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_restaurant_activity_subsidy_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_restaurant_activity_subsidy_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_restaurant_activity_subsidy_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::DOUBLE,
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_restaurant_activity_subsidy_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_restaurant_activity_subsidy_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_restaurant_activity_subsidy_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_restaurant_activity_complex_subsidy_args extends TBase {
  static $_TSPEC;

  public $restaurant_id = null;
  public $activity_id = null;
  public $activity_category_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'restaurant_id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'activity_id',
          'type' => TType::I32,
          ),
        3 => array(
          'var' => 'activity_category_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_restaurant_activity_complex_subsidy_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_restaurant_activity_complex_subsidy_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_restaurant_activity_complex_subsidy_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_restaurant_activity_complex_subsidy_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::STRING,
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_restaurant_activity_complex_subsidy_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_restaurant_activity_complex_subsidy_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_restaurant_activity_complex_subsidy_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_activity_subsidy_contract_args extends TBase {
  static $_TSPEC;

  public $subsidy_contract_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'subsidy_contract_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_activity_subsidy_contract_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_activity_subsidy_contract_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_activity_subsidy_contract_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_activity_subsidy_contract_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::STRUCT,
          'class' => '\ERS\TActivitySubsidyContract',
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_activity_subsidy_contract_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_activity_subsidy_contract_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_activity_subsidy_contract_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_activity_subsidy_contract_args extends TBase {
  static $_TSPEC;

  public $query_struct = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'query_struct',
          'type' => TType::STRUCT,
          'class' => '\ERS\TActivitySubsidyContractQuery',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_activity_subsidy_contract_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_activity_subsidy_contract_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_activity_subsidy_contract_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_activity_subsidy_contract_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::LST,
          'etype' => TType::STRUCT,
          'elem' => array(
            'type' => TType::STRUCT,
            'class' => '\ERS\TActivitySubsidyContract',
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_activity_subsidy_contract_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_activity_subsidy_contract_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_activity_subsidy_contract_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_save_city_args extends TBase {
  static $_TSPEC;

  public $city_id = null;
  public $t_city = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'city_id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 't_city',
          'type' => TType::STRUCT,
          'class' => '\ERS\TCity',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_save_city_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_save_city_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_save_city_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_save_city_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::I32,
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_save_city_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_save_city_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_save_city_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_save_area_args extends TBase {
  static $_TSPEC;

  public $area_id = null;
  public $t_area = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'area_id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 't_area',
          'type' => TType::STRUCT,
          'class' => '\ERS\TArea',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_save_area_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_save_area_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_save_area_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_save_area_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::I32,
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_save_area_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_save_area_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_save_area_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_delete_area_args extends TBase {
  static $_TSPEC;

  public $area_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'area_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_delete_area_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_delete_area_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_delete_area_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_delete_area_result extends TBase {
  static $_TSPEC;

  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_delete_area_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_delete_area_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_delete_area_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_save_region_args extends TBase {
  static $_TSPEC;

  public $region_id = null;
  public $t_region = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'region_id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 't_region',
          'type' => TType::STRUCT,
          'class' => '\ERS\TRegion',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_save_region_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_save_region_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_save_region_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_save_region_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::I32,
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_save_region_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_save_region_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_save_region_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_remove_region_args extends TBase {
  static $_TSPEC;

  public $region_id = null;
  public $user_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'region_id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'user_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_remove_region_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_remove_region_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_remove_region_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_remove_region_result extends TBase {
  static $_TSPEC;

  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_remove_region_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_remove_region_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_remove_region_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_region_args extends TBase {
  static $_TSPEC;

  public $query_struct = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'query_struct',
          'type' => TType::STRUCT,
          'class' => '\ERS\TRegionQuery',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_region_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_region_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_region_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_region_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::LST,
          'etype' => TType::STRUCT,
          'elem' => array(
            'type' => TType::STRUCT,
            'class' => '\ERS\TRegion',
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_region_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_region_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_region_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_restaurant_in_region_args extends TBase {
  static $_TSPEC;

  public $query_struct = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'query_struct',
          'type' => TType::STRUCT,
          'class' => '\ERS\TRestaurantInRegionQuery',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_restaurant_in_region_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_restaurant_in_region_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_restaurant_in_region_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_restaurant_in_region_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::LST,
          'etype' => TType::STRUCT,
          'elem' => array(
            'type' => TType::STRUCT,
            'class' => '\ERS\TRestaurant',
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_restaurant_in_region_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_restaurant_in_region_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_restaurant_in_region_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_save_entry_args extends TBase {
  static $_TSPEC;

  public $entry_id = null;
  public $t_entry = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'entry_id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 't_entry',
          'type' => TType::STRUCT,
          'class' => '\ERS\TEntry',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_save_entry_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_save_entry_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_save_entry_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_save_entry_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::I32,
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_save_entry_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_save_entry_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_save_entry_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_walle_count_entry_args extends TBase {
  static $_TSPEC;

  public $query_struct = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'query_struct',
          'type' => TType::STRUCT,
          'class' => '\ERS\TWalleEntryQuery',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_walle_count_entry_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_walle_count_entry_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_walle_count_entry_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_walle_count_entry_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::I32,
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_walle_count_entry_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_walle_count_entry_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_walle_count_entry_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_walle_query_entry_args extends TBase {
  static $_TSPEC;

  public $query_struct = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'query_struct',
          'type' => TType::STRUCT,
          'class' => '\ERS\TWalleEntryQuery',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_walle_query_entry_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_walle_query_entry_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_walle_query_entry_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_walle_query_entry_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::LST,
          'etype' => TType::STRUCT,
          'elem' => array(
            'type' => TType::STRUCT,
            'class' => '\ERS\TEntry',
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_walle_query_entry_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_walle_query_entry_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_walle_query_entry_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_walle_get_kpi_stats_args extends TBase {
  static $_TSPEC;

  public $filter_struct = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'filter_struct',
          'type' => TType::STRUCT,
          'class' => '\ERS\TWalleKPIFilter',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_walle_get_kpi_stats_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_walle_get_kpi_stats_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_walle_get_kpi_stats_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_walle_get_kpi_stats_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::STRUCT,
          'class' => '\ERS\TCWalleKPIStats',
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_walle_get_kpi_stats_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_walle_get_kpi_stats_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_walle_get_kpi_stats_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_walle_count_online_payment_apply_args extends TBase {
  static $_TSPEC;

  public $query_struct = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'query_struct',
          'type' => TType::STRUCT,
          'class' => '\ERS\TOnlinePaymentApplyQuery',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_walle_count_online_payment_apply_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_walle_count_online_payment_apply_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_walle_count_online_payment_apply_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_walle_count_online_payment_apply_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::I32,
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_walle_count_online_payment_apply_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_walle_count_online_payment_apply_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_walle_count_online_payment_apply_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_walle_query_online_payment_apply_args extends TBase {
  static $_TSPEC;

  public $query_struct = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'query_struct',
          'type' => TType::STRUCT,
          'class' => '\ERS\TOnlinePaymentApplyQuery',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_walle_query_online_payment_apply_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_walle_query_online_payment_apply_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_walle_query_online_payment_apply_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_walle_query_online_payment_apply_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::LST,
          'etype' => TType::STRUCT,
          'elem' => array(
            'type' => TType::STRUCT,
            'class' => '\ERS\TCWalleOnlinePaymentApply',
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_walle_query_online_payment_apply_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_walle_query_online_payment_apply_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_walle_query_online_payment_apply_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_walle_new_online_payment_apply_args extends TBase {
  static $_TSPEC;

  public $user_bankcard_id = null;
  public $restaurant_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_bankcard_id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'restaurant_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_walle_new_online_payment_apply_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_walle_new_online_payment_apply_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_walle_new_online_payment_apply_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_walle_new_online_payment_apply_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::I32,
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_walle_new_online_payment_apply_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_walle_new_online_payment_apply_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_walle_new_online_payment_apply_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_walle_online_payment_approve_args extends TBase {
  static $_TSPEC;

  public $record_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'record_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_walle_online_payment_approve_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_walle_online_payment_approve_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_walle_online_payment_approve_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_walle_online_payment_approve_result extends TBase {
  static $_TSPEC;

  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_walle_online_payment_approve_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_walle_online_payment_approve_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_walle_online_payment_approve_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_walle_online_payment_overrule_args extends TBase {
  static $_TSPEC;

  public $record_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'record_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_walle_online_payment_overrule_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_walle_online_payment_overrule_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_walle_online_payment_overrule_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_walle_online_payment_overrule_result extends TBase {
  static $_TSPEC;

  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_walle_online_payment_overrule_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_walle_online_payment_overrule_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_walle_online_payment_overrule_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_fast_online_payment_approve_args extends TBase {
  static $_TSPEC;

  public $restaurant_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'restaurant_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_fast_online_payment_approve_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_fast_online_payment_approve_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_fast_online_payment_approve_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_fast_online_payment_approve_result extends TBase {
  static $_TSPEC;

  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_fast_online_payment_approve_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_fast_online_payment_approve_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_fast_online_payment_approve_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_save_district_args extends TBase {
  static $_TSPEC;

  public $district_id = null;
  public $t_district = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'district_id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 't_district',
          'type' => TType::STRUCT,
          'class' => '\ERS\TDistrict',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_save_district_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_save_district_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_save_district_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_save_district_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::I32,
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_save_district_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_save_district_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_save_district_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_save_zone_args extends TBase {
  static $_TSPEC;

  public $zone_id = null;
  public $t_zone = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'zone_id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 't_zone',
          'type' => TType::STRUCT,
          'class' => '\ERS\TZone',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_save_zone_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_save_zone_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_save_zone_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_save_zone_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::I32,
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_save_zone_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_save_zone_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_save_zone_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_count_restaurant_in_region_args extends TBase {
  static $_TSPEC;

  public $query_struct = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'query_struct',
          'type' => TType::STRUCT,
          'class' => '\ERS\TRestaurantInRegionQuery',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_count_restaurant_in_region_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_count_restaurant_in_region_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_count_restaurant_in_region_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_count_restaurant_in_region_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::I32,
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_count_restaurant_in_region_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_count_restaurant_in_region_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_count_restaurant_in_region_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_device_restaurant_args extends TBase {
  static $_TSPEC;

  public $query_struct = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'query_struct',
          'type' => TType::STRUCT,
          'class' => '\ERS\TDeviceRestaurantQuery',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_device_restaurant_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_device_restaurant_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_device_restaurant_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_device_restaurant_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::LST,
          'etype' => TType::STRUCT,
          'elem' => array(
            'type' => TType::STRUCT,
            'class' => '\ERS\TDeviceRestaurant',
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_device_restaurant_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_device_restaurant_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_device_restaurant_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_send_contract_notification_args extends TBase {
  static $_TSPEC;

  public $restaurant_ids = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'restaurant_ids',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_send_contract_notification_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_send_contract_notification_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_send_contract_notification_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_send_contract_notification_result extends TBase {
  static $_TSPEC;

  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_send_contract_notification_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_send_contract_notification_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_send_contract_notification_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_new_device_restaurant_args extends TBase {
  static $_TSPEC;

  public $restaurant_id = null;
  public $device_id = null;
  public $device_type = null;
  public $eleme_guid = null;
  public $version = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'restaurant_id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'device_id',
          'type' => TType::STRING,
          ),
        3 => array(
          'var' => 'device_type',
          'type' => TType::I16,
          ),
        4 => array(
          'var' => 'eleme_guid',
          'type' => TType::STRING,
          ),
        5 => array(
          'var' => 'version',
          'type' => TType::STRING,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_new_device_restaurant_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_new_device_restaurant_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_new_device_restaurant_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_new_device_restaurant_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::I32,
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_new_device_restaurant_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_new_device_restaurant_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_new_device_restaurant_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_remove_device_restaurant_args extends TBase {
  static $_TSPEC;

  public $id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_remove_device_restaurant_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_remove_device_restaurant_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_remove_device_restaurant_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_remove_device_restaurant_result extends TBase {
  static $_TSPEC;

  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_remove_device_restaurant_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_remove_device_restaurant_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_remove_device_restaurant_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_walle_get_saas_stats_count_args extends TBase {
  static $_TSPEC;

  public $filter_struct = null;
  public $group_by = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'filter_struct',
          'type' => TType::STRUCT,
          'class' => '\ERS\TWalleFilter',
          ),
        2 => array(
          'var' => 'group_by',
          'type' => TType::STRING,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_walle_get_saas_stats_count_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_walle_get_saas_stats_count_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_walle_get_saas_stats_count_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_walle_get_saas_stats_count_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::I32,
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_walle_get_saas_stats_count_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_walle_get_saas_stats_count_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_walle_get_saas_stats_count_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_walle_query_restaurant_args extends TBase {
  static $_TSPEC;

  public $query_struct = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'query_struct',
          'type' => TType::STRUCT,
          'class' => '\ERS\TRestaurantQuery',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_walle_query_restaurant_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_walle_query_restaurant_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_walle_query_restaurant_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_walle_query_restaurant_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::LST,
          'etype' => TType::STRUCT,
          'elem' => array(
            'type' => TType::STRUCT,
            'class' => '\ERS\TLeanRestaurant',
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_walle_query_restaurant_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_walle_query_restaurant_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_walle_query_restaurant_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_walle_get_saas_stats_args extends TBase {
  static $_TSPEC;

  public $filter_struct = null;
  public $group_by = null;
  public $sort_key = null;
  public $sort_type = null;
  public $offset = null;
  public $limit = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'filter_struct',
          'type' => TType::STRUCT,
          'class' => '\ERS\TWalleFilter',
          ),
        2 => array(
          'var' => 'group_by',
          'type' => TType::STRING,
          ),
        3 => array(
          'var' => 'sort_key',
          'type' => TType::STRING,
          ),
        4 => array(
          'var' => 'sort_type',
          'type' => TType::I16,
          ),
        5 => array(
          'var' => 'offset',
          'type' => TType::I32,
          ),
        6 => array(
          'var' => 'limit',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_walle_get_saas_stats_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_walle_get_saas_stats_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_walle_get_saas_stats_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_walle_get_saas_stats_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::LST,
          'etype' => TType::STRUCT,
          'elem' => array(
            'type' => TType::STRUCT,
            'class' => '\ERS\TCRestaurantSaasStats',
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_walle_get_saas_stats_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_walle_get_saas_stats_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_walle_get_saas_stats_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_walle_get_activity_list_args extends TBase {
  static $_TSPEC;

  public $query_struct = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'query_struct',
          'type' => TType::STRUCT,
          'class' => '\ERS\TActivityQuery',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_walle_get_activity_list_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_walle_get_activity_list_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_walle_get_activity_list_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_walle_get_activity_list_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::STRING,
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_walle_get_activity_list_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_walle_get_activity_list_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_walle_get_activity_list_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_walle_get_activity_list_by_ids_args extends TBase {
  static $_TSPEC;

  public $activity_ids = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'activity_ids',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_walle_get_activity_list_by_ids_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_walle_get_activity_list_by_ids_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_walle_get_activity_list_by_ids_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_walle_get_activity_list_by_ids_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::STRING,
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_walle_get_activity_list_by_ids_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_walle_get_activity_list_by_ids_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_walle_get_activity_list_by_ids_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_walle_get_logo_list_args extends TBase {
  static $_TSPEC;

  public $query_struct = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'query_struct',
          'type' => TType::STRUCT,
          'class' => '\ERS\TLogoQuery',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_walle_get_logo_list_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_walle_get_logo_list_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_walle_get_logo_list_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_walle_get_logo_list_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::STRING,
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_walle_get_logo_list_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_walle_get_logo_list_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_walle_get_logo_list_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_walle_get_restaurant_list_args extends TBase {
  static $_TSPEC;

  public $query_struct = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'query_struct',
          'type' => TType::STRUCT,
          'class' => '\ERS\TRestaurantQuery',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_walle_get_restaurant_list_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_walle_get_restaurant_list_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_walle_get_restaurant_list_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_walle_get_restaurant_list_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::STRING,
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_walle_get_restaurant_list_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_walle_get_restaurant_list_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_walle_get_restaurant_list_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_walle_get_restaurant_change_records_args extends TBase {
  static $_TSPEC;

  public $restaurant_id = null;
  public $limit = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'restaurant_id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'limit',
          'type' => TType::I16,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_walle_get_restaurant_change_records_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_walle_get_restaurant_change_records_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_walle_get_restaurant_change_records_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_walle_get_restaurant_change_records_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::LST,
          'etype' => TType::STRUCT,
          'elem' => array(
            'type' => TType::STRUCT,
            'class' => '\ERS\TCWalleRestaurantChangeRecord',
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_walle_get_restaurant_change_records_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_walle_get_restaurant_change_records_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_walle_get_restaurant_change_records_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_walle_get_op_apply_restaurants_args extends TBase {
  static $_TSPEC;

  public $restaurant_ids = null;
  public $regions_ids = null;
  public $keyword = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'restaurant_ids',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        2 => array(
          'var' => 'regions_ids',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        3 => array(
          'var' => 'keyword',
          'type' => TType::STRING,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_walle_get_op_apply_restaurants_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_walle_get_op_apply_restaurants_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_walle_get_op_apply_restaurants_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_walle_get_op_apply_restaurants_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::MAP,
          'ktype' => TType::I32,
          'vtype' => TType::STRING,
          'key' => array(
            'type' => TType::I32,
          ),
          'val' => array(
            'type' => TType::STRING,
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_walle_get_op_apply_restaurants_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_walle_get_op_apply_restaurants_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_walle_get_op_apply_restaurants_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_walle_get_restaurant_list_by_ids_args extends TBase {
  static $_TSPEC;

  public $restaurant_ids = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'restaurant_ids',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_walle_get_restaurant_list_by_ids_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_walle_get_restaurant_list_by_ids_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_walle_get_restaurant_list_by_ids_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_walle_get_restaurant_list_by_ids_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::STRING,
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_walle_get_restaurant_list_by_ids_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_walle_get_restaurant_list_by_ids_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_walle_get_restaurant_list_by_ids_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_walle_save_friend_link_args extends TBase {
  static $_TSPEC;

  public $friend_link_id = null;
  public $t_struct = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'friend_link_id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 't_struct',
          'type' => TType::STRUCT,
          'class' => '\ERS\TFriendLink',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_walle_save_friend_link_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_walle_save_friend_link_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_walle_save_friend_link_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_walle_save_friend_link_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::I32,
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_walle_save_friend_link_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_walle_save_friend_link_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_walle_save_friend_link_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_walle_remove_friend_link_args extends TBase {
  static $_TSPEC;

  public $friend_link_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'friend_link_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_walle_remove_friend_link_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_walle_remove_friend_link_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_walle_remove_friend_link_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_walle_remove_friend_link_result extends TBase {
  static $_TSPEC;

  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_walle_remove_friend_link_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_walle_remove_friend_link_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_walle_remove_friend_link_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_walle_count_friend_link_args extends TBase {
  static $_TSPEC;

  public $query_struct = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'query_struct',
          'type' => TType::STRUCT,
          'class' => '\ERS\TFriendLinkQuery',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_walle_count_friend_link_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_walle_count_friend_link_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_walle_count_friend_link_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_walle_count_friend_link_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::I32,
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_walle_count_friend_link_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_walle_count_friend_link_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_walle_count_friend_link_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_walle_query_friend_link_args extends TBase {
  static $_TSPEC;

  public $query_struct = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'query_struct',
          'type' => TType::STRUCT,
          'class' => '\ERS\TFriendLinkQuery',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_walle_query_friend_link_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_walle_query_friend_link_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_walle_query_friend_link_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_walle_query_friend_link_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::LST,
          'etype' => TType::STRUCT,
          'elem' => array(
            'type' => TType::STRUCT,
            'class' => '\ERS\TFriendLink',
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_walle_query_friend_link_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_walle_query_friend_link_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_walle_query_friend_link_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_walle_save_quick_message_args extends TBase {
  static $_TSPEC;

  public $quick_message_id = null;
  public $t_struct = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'quick_message_id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 't_struct',
          'type' => TType::STRUCT,
          'class' => '\ERS\TQuickMessage',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_walle_save_quick_message_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_walle_save_quick_message_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_walle_save_quick_message_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_walle_save_quick_message_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::I32,
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_walle_save_quick_message_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_walle_save_quick_message_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_walle_save_quick_message_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_walle_remove_quick_message_args extends TBase {
  static $_TSPEC;

  public $quick_message_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'quick_message_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_walle_remove_quick_message_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_walle_remove_quick_message_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_walle_remove_quick_message_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_walle_remove_quick_message_result extends TBase {
  static $_TSPEC;

  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_walle_remove_quick_message_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_walle_remove_quick_message_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_walle_remove_quick_message_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_walle_count_quick_message_args extends TBase {
  static $_TSPEC;

  public $query_struct = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'query_struct',
          'type' => TType::STRUCT,
          'class' => '\ERS\TQuickMessageQuery',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_walle_count_quick_message_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_walle_count_quick_message_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_walle_count_quick_message_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_walle_count_quick_message_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::I32,
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_walle_count_quick_message_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_walle_count_quick_message_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_walle_count_quick_message_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_walle_query_quick_message_args extends TBase {
  static $_TSPEC;

  public $query_struct = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'query_struct',
          'type' => TType::STRUCT,
          'class' => '\ERS\TQuickMessageQuery',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_walle_query_quick_message_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_walle_query_quick_message_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_walle_query_quick_message_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_walle_query_quick_message_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::LST,
          'etype' => TType::STRUCT,
          'elem' => array(
            'type' => TType::STRUCT,
            'class' => '\ERS\TQuickMessage',
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_walle_query_quick_message_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_walle_query_quick_message_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_walle_query_quick_message_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_walle_count_comment_reply_args extends TBase {
  static $_TSPEC;

  public $query_struct = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'query_struct',
          'type' => TType::STRUCT,
          'class' => '\ERS\TWalleCommentReplyQuery',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_walle_count_comment_reply_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_walle_count_comment_reply_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_walle_count_comment_reply_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_walle_count_comment_reply_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::I32,
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_walle_count_comment_reply_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_walle_count_comment_reply_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_walle_count_comment_reply_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_walle_query_comment_reply_args extends TBase {
  static $_TSPEC;

  public $query_struct = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'query_struct',
          'type' => TType::STRUCT,
          'class' => '\ERS\TWalleCommentReplyQuery',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_walle_query_comment_reply_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_walle_query_comment_reply_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_walle_query_comment_reply_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_walle_query_comment_reply_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::LST,
          'etype' => TType::STRUCT,
          'elem' => array(
            'type' => TType::STRUCT,
            'class' => '\ERS\TCWalleCommentReply',
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_walle_query_comment_reply_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_walle_query_comment_reply_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_walle_query_comment_reply_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_walle_set_comment_reply_valid_args extends TBase {
  static $_TSPEC;

  public $reply_id = null;
  public $is_valid = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'reply_id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'is_valid',
          'type' => TType::I16,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_walle_set_comment_reply_valid_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_walle_set_comment_reply_valid_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_walle_set_comment_reply_valid_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_walle_set_comment_reply_valid_result extends TBase {
  static $_TSPEC;

  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_walle_set_comment_reply_valid_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_walle_set_comment_reply_valid_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_walle_set_comment_reply_valid_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_walle_count_restaurant_comment_args extends TBase {
  static $_TSPEC;

  public $query_struct = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'query_struct',
          'type' => TType::STRUCT,
          'class' => '\ERS\TWalleRestaurantCommentQuery',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_walle_count_restaurant_comment_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_walle_count_restaurant_comment_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_walle_count_restaurant_comment_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_walle_count_restaurant_comment_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::I32,
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_walle_count_restaurant_comment_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_walle_count_restaurant_comment_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_walle_count_restaurant_comment_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_walle_query_restaurant_comment_args extends TBase {
  static $_TSPEC;

  public $query_struct = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'query_struct',
          'type' => TType::STRUCT,
          'class' => '\ERS\TWalleRestaurantCommentQuery',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_walle_query_restaurant_comment_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_walle_query_restaurant_comment_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_walle_query_restaurant_comment_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_walle_query_restaurant_comment_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::LST,
          'etype' => TType::STRUCT,
          'elem' => array(
            'type' => TType::STRUCT,
            'class' => '\ERS\TCWalleRestaurantComment',
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_walle_query_restaurant_comment_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_walle_query_restaurant_comment_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_walle_query_restaurant_comment_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_walle_set_restaurant_comment_valid_args extends TBase {
  static $_TSPEC;

  public $comment_id = null;
  public $is_valid = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'comment_id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'is_valid',
          'type' => TType::I16,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_walle_set_restaurant_comment_valid_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_walle_set_restaurant_comment_valid_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_walle_set_restaurant_comment_valid_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_walle_set_restaurant_comment_valid_result extends TBase {
  static $_TSPEC;

  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_walle_set_restaurant_comment_valid_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_walle_set_restaurant_comment_valid_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_walle_set_restaurant_comment_valid_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_walle_reply_restaurant_comment_args extends TBase {
  static $_TSPEC;

  public $comment_id = null;
  public $user_id = null;
  public $content = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'comment_id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'user_id',
          'type' => TType::I32,
          ),
        3 => array(
          'var' => 'content',
          'type' => TType::STRING,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_walle_reply_restaurant_comment_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_walle_reply_restaurant_comment_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_walle_reply_restaurant_comment_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_walle_reply_restaurant_comment_result extends TBase {
  static $_TSPEC;

  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_walle_reply_restaurant_comment_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_walle_reply_restaurant_comment_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_walle_reply_restaurant_comment_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_mset_restaurant_open_apply_status_args extends TBase {
  static $_TSPEC;

  public $ids = null;
  public $status = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'ids',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        2 => array(
          'var' => 'status',
          'type' => TType::I16,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_mset_restaurant_open_apply_status_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_mset_restaurant_open_apply_status_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_mset_restaurant_open_apply_status_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_mset_restaurant_open_apply_status_result extends TBase {
  static $_TSPEC;

  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_mset_restaurant_open_apply_status_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_mset_restaurant_open_apply_status_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_mset_restaurant_open_apply_status_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_napos_restaurant_promotion_save_args extends TBase {
  static $_TSPEC;

  public $promotion_id = null;
  public $t_promotion = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'promotion_id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 't_promotion',
          'type' => TType::STRUCT,
          'class' => '\ERS\TRestaurantPromotion',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_napos_restaurant_promotion_save_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_napos_restaurant_promotion_save_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_napos_restaurant_promotion_save_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_napos_restaurant_promotion_save_result extends TBase {
  static $_TSPEC;

  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_napos_restaurant_promotion_save_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_napos_restaurant_promotion_save_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_napos_restaurant_promotion_save_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_napos_count_comments_args extends TBase {
  static $_TSPEC;

  public $query_struct = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'query_struct',
          'type' => TType::STRUCT,
          'class' => '\ERS\TNaposCommentQuery',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_napos_count_comments_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_napos_count_comments_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_napos_count_comments_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_napos_count_comments_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::I32,
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_napos_count_comments_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_napos_count_comments_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_napos_count_comments_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_napos_query_comments_args extends TBase {
  static $_TSPEC;

  public $query_struct = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'query_struct',
          'type' => TType::STRUCT,
          'class' => '\ERS\TNaposCommentQuery',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_napos_query_comments_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_napos_query_comments_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_napos_query_comments_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_napos_query_comments_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::LST,
          'etype' => TType::STRUCT,
          'elem' => array(
            'type' => TType::STRUCT,
            'class' => '\ERS\TCCommentWithReplies',
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_napos_query_comments_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_napos_query_comments_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_napos_query_comments_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_napos_get_message_args extends TBase {
  static $_TSPEC;

  public $message_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'message_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_napos_get_message_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_napos_get_message_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_napos_get_message_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_napos_get_message_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::STRUCT,
          'class' => '\ERS\TRestaurantMessage',
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_napos_get_message_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_napos_get_message_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_napos_get_message_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_napos_mget_message_args extends TBase {
  static $_TSPEC;

  public $restaurant_id = null;
  public $offset = null;
  public $limit = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'restaurant_id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'offset',
          'type' => TType::I32,
          ),
        3 => array(
          'var' => 'limit',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_napos_mget_message_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_napos_mget_message_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_napos_mget_message_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_napos_mget_message_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::LST,
          'etype' => TType::STRUCT,
          'elem' => array(
            'type' => TType::STRUCT,
            'class' => '\ERS\TRestaurantMessage',
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_napos_mget_message_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_napos_mget_message_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_napos_mget_message_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_napos_count_unread_message_args extends TBase {
  static $_TSPEC;

  public $restaurant_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'restaurant_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_napos_count_unread_message_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_napos_count_unread_message_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_napos_count_unread_message_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_napos_count_unread_message_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::I32,
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_napos_count_unread_message_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_napos_count_unread_message_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_napos_count_unread_message_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_napos_mget_unread_message_args extends TBase {
  static $_TSPEC;

  public $restaurant_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'restaurant_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_napos_mget_unread_message_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_napos_mget_unread_message_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_napos_mget_unread_message_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_napos_mget_unread_message_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::LST,
          'etype' => TType::STRUCT,
          'elem' => array(
            'type' => TType::STRUCT,
            'class' => '\ERS\TRestaurantMessage',
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_napos_mget_unread_message_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_napos_mget_unread_message_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_napos_mget_unread_message_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_napos_read_message_args extends TBase {
  static $_TSPEC;

  public $message_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'message_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_napos_read_message_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_napos_read_message_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_napos_read_message_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_napos_read_message_result extends TBase {
  static $_TSPEC;

  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_napos_read_message_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_napos_read_message_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_napos_read_message_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_mset_operation_remind_status_args extends TBase {
  static $_TSPEC;

  public $or_ids = null;
  public $status = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'or_ids',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        2 => array(
          'var' => 'status',
          'type' => TType::I16,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_mset_operation_remind_status_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_mset_operation_remind_status_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_mset_operation_remind_status_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_mset_operation_remind_status_result extends TBase {
  static $_TSPEC;

  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_mset_operation_remind_status_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_mset_operation_remind_status_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_mset_operation_remind_status_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_openapi_get_new_restaurant_ids_args extends TBase {
  static $_TSPEC;

  public $city_id = null;
  public $start_time = null;
  public $end_time = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'city_id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'start_time',
          'type' => TType::I64,
          ),
        3 => array(
          'var' => 'end_time',
          'type' => TType::I64,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_openapi_get_new_restaurant_ids_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_openapi_get_new_restaurant_ids_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_openapi_get_new_restaurant_ids_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_openapi_get_new_restaurant_ids_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_openapi_get_new_restaurant_ids_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_openapi_get_new_restaurant_ids_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_openapi_get_new_restaurant_ids_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_revert_decr_foods_stock_args extends TBase {
  static $_TSPEC;

  public $order_id = null;
  public $food_stock_map = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'order_id',
          'type' => TType::I64,
          ),
        2 => array(
          'var' => 'food_stock_map',
          'type' => TType::MAP,
          'ktype' => TType::I32,
          'vtype' => TType::I32,
          'key' => array(
            'type' => TType::I32,
          ),
          'val' => array(
            'type' => TType::I32,
            ),
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_revert_decr_foods_stock_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_revert_decr_foods_stock_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_revert_decr_foods_stock_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_revert_decr_foods_stock_result extends TBase {
  static $_TSPEC;

  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_revert_decr_foods_stock_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_revert_decr_foods_stock_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_revert_decr_foods_stock_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_process_saas_status_touch_args extends TBase {
  static $_TSPEC;

  public $order_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'order_id',
          'type' => TType::I64,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_process_saas_status_touch_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_process_saas_status_touch_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_process_saas_status_touch_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_process_saas_status_touch_result extends TBase {
  static $_TSPEC;

  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_process_saas_status_touch_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_process_saas_status_touch_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_process_saas_status_touch_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_process_post_bankcard_bind_approve_args extends TBase {
  static $_TSPEC;

  public $restaurant_id = null;
  public $timestamp = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'restaurant_id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'timestamp',
          'type' => TType::I64,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_process_post_bankcard_bind_approve_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_process_post_bankcard_bind_approve_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_process_post_bankcard_bind_approve_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_process_post_bankcard_bind_approve_result extends TBase {
  static $_TSPEC;

  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_process_post_bankcard_bind_approve_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_process_post_bankcard_bind_approve_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_process_post_bankcard_bind_approve_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_mset_tuesday_half_price_food_stock_args extends TBase {
  static $_TSPEC;

  public $is_max = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'is_max',
          'type' => TType::BOOL,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_mset_tuesday_half_price_food_stock_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_mset_tuesday_half_price_food_stock_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_mset_tuesday_half_price_food_stock_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_mset_tuesday_half_price_food_stock_result extends TBase {
  static $_TSPEC;

  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_mset_tuesday_half_price_food_stock_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_mset_tuesday_half_price_food_stock_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_mset_tuesday_half_price_food_stock_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_reset_half_price_food_stock_by_category_args extends TBase {
  static $_TSPEC;

  public $unique_week = null;
  public $category_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'unique_week',
          'type' => TType::STRING,
          ),
        2 => array(
          'var' => 'category_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_reset_half_price_food_stock_by_category_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_reset_half_price_food_stock_by_category_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_reset_half_price_food_stock_by_category_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_reset_half_price_food_stock_by_category_result extends TBase {
  static $_TSPEC;

  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_reset_half_price_food_stock_by_category_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_reset_half_price_food_stock_by_category_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_reset_half_price_food_stock_by_category_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_process_remove_market_staff_args extends TBase {
  static $_TSPEC;

  public $user_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_process_remove_market_staff_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_process_remove_market_staff_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_process_remove_market_staff_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_process_remove_market_staff_result extends TBase {
  static $_TSPEC;

  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_process_remove_market_staff_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_process_remove_market_staff_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_process_remove_market_staff_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_refresh_flavors_by_restaurant_args extends TBase {
  static $_TSPEC;

  public $restaurant_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'restaurant_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_refresh_flavors_by_restaurant_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_refresh_flavors_by_restaurant_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_refresh_flavors_by_restaurant_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_refresh_flavors_by_restaurant_result extends TBase {
  static $_TSPEC;

  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_refresh_flavors_by_restaurant_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_refresh_flavors_by_restaurant_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_refresh_flavors_by_restaurant_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_set_delete_region_task_status_args extends TBase {
  static $_TSPEC;

  public $dl_region_id = null;
  public $status = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'dl_region_id',
          'type' => TType::I64,
          ),
        2 => array(
          'var' => 'status',
          'type' => TType::I16,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_set_delete_region_task_status_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_set_delete_region_task_status_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_set_delete_region_task_status_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_set_delete_region_task_status_result extends TBase {
  static $_TSPEC;

  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_set_delete_region_task_status_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_set_delete_region_task_status_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_set_delete_region_task_status_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_set_update_region_task_status_args extends TBase {
  static $_TSPEC;

  public $cl_region_id = null;
  public $status = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'cl_region_id',
          'type' => TType::I64,
          ),
        2 => array(
          'var' => 'status',
          'type' => TType::I16,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_set_update_region_task_status_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_set_update_region_task_status_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_set_update_region_task_status_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_set_update_region_task_status_result extends TBase {
  static $_TSPEC;

  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_set_update_region_task_status_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_set_update_region_task_status_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_set_update_region_task_status_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_send_update_restaurant_evaluation_task_args extends TBase {
  static $_TSPEC;


  public function __construct() {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        );
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_send_update_restaurant_evaluation_task_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_send_update_restaurant_evaluation_task_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_send_update_restaurant_evaluation_task_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_send_update_restaurant_evaluation_task_result extends TBase {
  static $_TSPEC;

  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_send_update_restaurant_evaluation_task_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_send_update_restaurant_evaluation_task_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_send_update_restaurant_evaluation_task_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_daily_clear_restaurant_menu_cache_args extends TBase {
  static $_TSPEC;


  public function __construct() {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        );
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_daily_clear_restaurant_menu_cache_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_daily_clear_restaurant_menu_cache_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_daily_clear_restaurant_menu_cache_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_daily_clear_restaurant_menu_cache_result extends TBase {
  static $_TSPEC;

  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_daily_clear_restaurant_menu_cache_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_daily_clear_restaurant_menu_cache_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_daily_clear_restaurant_menu_cache_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_semi_send_update_restaurant_evaluation_task_args extends TBase {
  static $_TSPEC;

  public $offset = null;
  public $limit = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'offset',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'limit',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_semi_send_update_restaurant_evaluation_task_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_semi_send_update_restaurant_evaluation_task_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_semi_send_update_restaurant_evaluation_task_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_semi_send_update_restaurant_evaluation_task_result extends TBase {
  static $_TSPEC;

  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_semi_send_update_restaurant_evaluation_task_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_semi_send_update_restaurant_evaluation_task_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_semi_send_update_restaurant_evaluation_task_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_update_restaurant_evaluation_args extends TBase {
  static $_TSPEC;

  public $restaurant_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'restaurant_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_update_restaurant_evaluation_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_update_restaurant_evaluation_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_update_restaurant_evaluation_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_update_restaurant_evaluation_result extends TBase {
  static $_TSPEC;

  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_update_restaurant_evaluation_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_update_restaurant_evaluation_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_update_restaurant_evaluation_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_notify_napos_mobile_to_sync_args extends TBase {
  static $_TSPEC;

  public $restaurant_id = null;
  public $is_new_order = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'restaurant_id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'is_new_order',
          'type' => TType::BOOL,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_notify_napos_mobile_to_sync_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_notify_napos_mobile_to_sync_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_notify_napos_mobile_to_sync_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_notify_napos_mobile_to_sync_result extends TBase {
  static $_TSPEC;

  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_notify_napos_mobile_to_sync_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_notify_napos_mobile_to_sync_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_notify_napos_mobile_to_sync_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_notify_napos_mobile_to_sync2_args extends TBase {
  static $_TSPEC;

  public $restaurant_id = null;
  public $is_new_order = null;
  public $timestamp = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'restaurant_id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'is_new_order',
          'type' => TType::BOOL,
          ),
        3 => array(
          'var' => 'timestamp',
          'type' => TType::I64,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_notify_napos_mobile_to_sync2_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_notify_napos_mobile_to_sync2_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_notify_napos_mobile_to_sync2_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_notify_napos_mobile_to_sync2_result extends TBase {
  static $_TSPEC;

  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_notify_napos_mobile_to_sync2_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_notify_napos_mobile_to_sync2_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_notify_napos_mobile_to_sync2_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_update_food_ugc_image_cover_args extends TBase {
  static $_TSPEC;

  public $food_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'food_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_update_food_ugc_image_cover_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_update_food_ugc_image_cover_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_update_food_ugc_image_cover_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_update_food_ugc_image_cover_result extends TBase {
  static $_TSPEC;

  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_update_food_ugc_image_cover_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_update_food_ugc_image_cover_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_update_food_ugc_image_cover_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_refresh_food_has_activity_args extends TBase {
  static $_TSPEC;

  public $food_ids = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'food_ids',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_refresh_food_has_activity_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_refresh_food_has_activity_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_refresh_food_has_activity_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_refresh_food_has_activity_result extends TBase {
  static $_TSPEC;

  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_refresh_food_has_activity_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_refresh_food_has_activity_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_refresh_food_has_activity_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_refresh_restaurant_food_activity_args extends TBase {
  static $_TSPEC;

  public $restaurant_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'restaurant_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_refresh_restaurant_food_activity_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_refresh_restaurant_food_activity_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_refresh_restaurant_food_activity_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_refresh_restaurant_food_activity_result extends TBase {
  static $_TSPEC;

  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_refresh_restaurant_food_activity_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_refresh_restaurant_food_activity_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_refresh_restaurant_food_activity_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_args extends TBase {
  static $_TSPEC;

  public $restaurant_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'restaurant_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::STRUCT,
          'class' => '\ERS\TRestaurant',
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_mget_args extends TBase {
  static $_TSPEC;

  public $restaurant_ids = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'restaurant_ids',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_mget_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_mget_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_mget_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_mget_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::LST,
          'etype' => TType::STRUCT,
          'elem' => array(
            'type' => TType::STRUCT,
            'class' => '\ERS\TRestaurant',
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_mget_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_mget_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_mget_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_master_get_args extends TBase {
  static $_TSPEC;

  public $id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_master_get_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_master_get_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_master_get_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_master_get_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::STRUCT,
          'class' => '\ERS\TRestaurant',
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_master_get_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_master_get_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_master_get_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_by_wireless_printer_esn_args extends TBase {
  static $_TSPEC;

  public $esn = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'esn',
          'type' => TType::STRING,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_by_wireless_printer_esn_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_by_wireless_printer_esn_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_by_wireless_printer_esn_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_by_wireless_printer_esn_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::STRUCT,
          'class' => '\ERS\TRestaurant',
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_by_wireless_printer_esn_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_by_wireless_printer_esn_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_by_wireless_printer_esn_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_by_name_for_url_args extends TBase {
  static $_TSPEC;

  public $name_for_url = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'name_for_url',
          'type' => TType::STRING,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_by_name_for_url_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_by_name_for_url_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_by_name_for_url_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_by_name_for_url_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::STRUCT,
          'class' => '\ERS\TRestaurant',
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_by_name_for_url_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_by_name_for_url_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_by_name_for_url_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_by_mobile_args extends TBase {
  static $_TSPEC;

  public $mobile = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'mobile',
          'type' => TType::STRING,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_by_mobile_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_by_mobile_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_by_mobile_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_by_mobile_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::STRUCT,
          'class' => '\ERS\TRestaurant',
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_by_mobile_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_by_mobile_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_by_mobile_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_by_admin_args extends TBase {
  static $_TSPEC;

  public $user_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_by_admin_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_by_admin_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_by_admin_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_by_admin_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::STRUCT,
          'class' => '\ERS\TRestaurant',
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_by_admin_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_by_admin_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_by_admin_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_app_campaign_by_sn_args extends TBase {
  static $_TSPEC;

  public $sn = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'sn',
          'type' => TType::STRING,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_app_campaign_by_sn_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_app_campaign_by_sn_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_app_campaign_by_sn_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_app_campaign_by_sn_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::STRUCT,
          'class' => '\ERS\TAppCampaign',
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_app_campaign_by_sn_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_app_campaign_by_sn_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_app_campaign_by_sn_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_bankcard_args extends TBase {
  static $_TSPEC;

  public $restaurant_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'restaurant_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_bankcard_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_bankcard_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_bankcard_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_bankcard_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::STRUCT,
          'class' => '\ERS\TRestaurantBankcard',
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_bankcard_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_bankcard_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_bankcard_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_bankcard_new_args extends TBase {
  static $_TSPEC;

  public $restaurant_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'restaurant_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_bankcard_new_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_bankcard_new_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_bankcard_new_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_bankcard_new_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::STRUCT,
          'class' => '\ERS\TCBankcard',
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_bankcard_new_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_bankcard_new_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_bankcard_new_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_mget_bankcard_args extends TBase {
  static $_TSPEC;

  public $restaurant_ids = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'restaurant_ids',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_mget_bankcard_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_mget_bankcard_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_mget_bankcard_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_mget_bankcard_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::LST,
          'etype' => TType::STRUCT,
          'elem' => array(
            'type' => TType::STRUCT,
            'class' => '\ERS\TRestaurantBankcard',
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_mget_bankcard_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_mget_bankcard_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_mget_bankcard_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_mget_restaurant_bankcard_args extends TBase {
  static $_TSPEC;

  public $restaurant_ids = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'restaurant_ids',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_mget_restaurant_bankcard_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_mget_restaurant_bankcard_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_mget_restaurant_bankcard_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_mget_restaurant_bankcard_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::MAP,
          'ktype' => TType::I32,
          'vtype' => TType::STRUCT,
          'key' => array(
            'type' => TType::I32,
          ),
          'val' => array(
            'type' => TType::STRUCT,
            'class' => '\ERS\TRestaurantBankcard',
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_mget_restaurant_bankcard_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_mget_restaurant_bankcard_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_mget_restaurant_bankcard_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_update_bankcard_args extends TBase {
  static $_TSPEC;

  public $update_struct = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'update_struct',
          'type' => TType::STRUCT,
          'class' => '\ERS\TRestaurantBankcard',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_update_bankcard_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_update_bankcard_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_update_bankcard_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_update_bankcard_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::I32,
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_update_bankcard_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_update_bankcard_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_update_bankcard_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_remove_bankcard_args extends TBase {
  static $_TSPEC;

  public $restaurant_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'restaurant_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_remove_bankcard_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_remove_bankcard_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_remove_bankcard_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_remove_bankcard_result extends TBase {
  static $_TSPEC;

  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_remove_bankcard_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_remove_bankcard_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_remove_bankcard_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_by_dock_corp_args extends TBase {
  static $_TSPEC;

  public $dock_corp_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'dock_corp_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_by_dock_corp_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_by_dock_corp_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_by_dock_corp_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_by_dock_corp_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::LST,
          'etype' => TType::STRUCT,
          'elem' => array(
            'type' => TType::STRUCT,
            'class' => '\ERS\TRestaurant',
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_by_dock_corp_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_by_dock_corp_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_by_dock_corp_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_open_apply_by_admin_args extends TBase {
  static $_TSPEC;

  public $user_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_open_apply_by_admin_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_open_apply_by_admin_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_open_apply_by_admin_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_open_apply_by_admin_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::STRUCT,
          'class' => '\ERS\TRestaurantOpenApply',
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_open_apply_by_admin_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_open_apply_by_admin_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_open_apply_by_admin_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_open_apply_args extends TBase {
  static $_TSPEC;

  public $id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_open_apply_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_open_apply_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_open_apply_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_open_apply_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::STRUCT,
          'class' => '\ERS\TRestaurantOpenApply',
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_open_apply_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_open_apply_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_open_apply_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_restaurant_open_apply_args extends TBase {
  static $_TSPEC;

  public $t_open_apply = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 't_open_apply',
          'type' => TType::STRUCT,
          'class' => '\ERS\TRestaurantOpenApplyQuery',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_restaurant_open_apply_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_restaurant_open_apply_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_restaurant_open_apply_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_restaurant_open_apply_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::LST,
          'etype' => TType::STRUCT,
          'elem' => array(
            'type' => TType::STRUCT,
            'class' => '\ERS\TRestaurantOpenApply',
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_restaurant_open_apply_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_restaurant_open_apply_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_restaurant_open_apply_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_count_restaurant_open_apply_args extends TBase {
  static $_TSPEC;

  public $t_open_apply = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 't_open_apply',
          'type' => TType::STRUCT,
          'class' => '\ERS\TRestaurantOpenApplyQuery',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_count_restaurant_open_apply_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_count_restaurant_open_apply_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_count_restaurant_open_apply_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_count_restaurant_open_apply_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::I32,
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_count_restaurant_open_apply_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_count_restaurant_open_apply_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_count_restaurant_open_apply_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_entry_args extends TBase {
  static $_TSPEC;

  public $entry_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'entry_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_entry_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_entry_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_entry_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_entry_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::STRUCT,
          'class' => '\ERS\TEntry',
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_entry_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_entry_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_entry_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_mget_entry_args extends TBase {
  static $_TSPEC;

  public $ids = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'ids',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_mget_entry_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_mget_entry_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_mget_entry_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_mget_entry_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::LST,
          'etype' => TType::STRUCT,
          'elem' => array(
            'type' => TType::STRUCT,
            'class' => '\ERS\TEntry',
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_mget_entry_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_mget_entry_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_mget_entry_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_entry_by_sn_args extends TBase {
  static $_TSPEC;

  public $sn = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'sn',
          'type' => TType::STRING,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_entry_by_sn_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_entry_by_sn_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_entry_by_sn_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_entry_by_sn_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::STRUCT,
          'class' => '\ERS\TEntry',
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_entry_by_sn_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_entry_by_sn_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_entry_by_sn_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_entry_args extends TBase {
  static $_TSPEC;

  public $query_struct = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'query_struct',
          'type' => TType::STRUCT,
          'class' => '\ERS\TEntryQuery',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_entry_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_entry_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_entry_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_entry_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::LST,
          'etype' => TType::STRUCT,
          'elem' => array(
            'type' => TType::STRUCT,
            'class' => '\ERS\TEntry',
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_entry_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_entry_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_entry_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_district_args extends TBase {
  static $_TSPEC;

  public $district_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'district_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_district_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_district_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_district_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_district_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::STRUCT,
          'class' => '\ERS\TDistrict',
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_district_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_district_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_district_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_district_args extends TBase {
  static $_TSPEC;

  public $query_struct = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'query_struct',
          'type' => TType::STRUCT,
          'class' => '\ERS\TDistrictQuery',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_district_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_district_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_district_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_district_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::LST,
          'etype' => TType::STRUCT,
          'elem' => array(
            'type' => TType::STRUCT,
            'class' => '\ERS\TDistrict',
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_district_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_district_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_district_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_zone_args extends TBase {
  static $_TSPEC;

  public $zone_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'zone_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_zone_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_zone_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_zone_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_zone_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::STRUCT,
          'class' => '\ERS\TZone',
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_zone_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_zone_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_zone_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_zone_args extends TBase {
  static $_TSPEC;

  public $query_struct = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'query_struct',
          'type' => TType::STRUCT,
          'class' => '\ERS\TZoneQuery',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_zone_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_zone_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_zone_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_zone_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::LST,
          'etype' => TType::STRUCT,
          'elem' => array(
            'type' => TType::STRUCT,
            'class' => '\ERS\TZone',
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_zone_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_zone_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_zone_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_direct_struct_args extends TBase {
  static $_TSPEC;

  public $user_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_direct_struct_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_direct_struct_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_direct_struct_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_direct_struct_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::STRUCT,
          'class' => '\ERS\TDirectStruct',
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_direct_struct_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_direct_struct_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_direct_struct_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_region_args extends TBase {
  static $_TSPEC;

  public $region_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'region_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_region_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_region_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_region_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_region_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::STRUCT,
          'class' => '\ERS\TRegion',
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_region_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_region_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_region_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_master_get_region_args extends TBase {
  static $_TSPEC;

  public $region_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'region_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_master_get_region_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_master_get_region_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_master_get_region_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_master_get_region_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::STRUCT,
          'class' => '\ERS\TRegion',
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_master_get_region_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_master_get_region_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_master_get_region_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_mget_region_args extends TBase {
  static $_TSPEC;

  public $region_ids = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'region_ids',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_mget_region_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_mget_region_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_mget_region_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_mget_region_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::MAP,
          'ktype' => TType::I32,
          'vtype' => TType::STRUCT,
          'key' => array(
            'type' => TType::I32,
          ),
          'val' => array(
            'type' => TType::STRUCT,
            'class' => '\ERS\TRegion',
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_mget_region_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_mget_region_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_mget_region_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_region_by_entry_args extends TBase {
  static $_TSPEC;

  public $entry_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'entry_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_region_by_entry_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_region_by_entry_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_region_by_entry_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_region_by_entry_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::STRUCT,
          'class' => '\ERS\TRegion',
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_region_by_entry_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_region_by_entry_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_region_by_entry_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_region_by_restaurant_args extends TBase {
  static $_TSPEC;

  public $restaurant_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'restaurant_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_region_by_restaurant_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_region_by_restaurant_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_region_by_restaurant_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_region_by_restaurant_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::STRUCT,
          'class' => '\ERS\TRegion',
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_region_by_restaurant_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_region_by_restaurant_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_region_by_restaurant_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_region_group_args extends TBase {
  static $_TSPEC;

  public $region_group_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'region_group_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_region_group_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_region_group_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_region_group_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_region_group_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::STRUCT,
          'class' => '\ERS\TRegionGroup',
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_region_group_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_region_group_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_region_group_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_mget_region_group_args extends TBase {
  static $_TSPEC;

  public $region_group_ids = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'region_group_ids',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_mget_region_group_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_mget_region_group_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_mget_region_group_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_mget_region_group_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::MAP,
          'ktype' => TType::I32,
          'vtype' => TType::STRUCT,
          'key' => array(
            'type' => TType::I32,
          ),
          'val' => array(
            'type' => TType::STRUCT,
            'class' => '\ERS\TRegionGroup',
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_mget_region_group_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_mget_region_group_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_mget_region_group_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_region_group_by_region_args extends TBase {
  static $_TSPEC;

  public $region_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'region_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_region_group_by_region_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_region_group_by_region_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_region_group_by_region_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_region_group_by_region_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::STRUCT,
          'class' => '\ERS\TRegionGroup',
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_region_group_by_region_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_region_group_by_region_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_region_group_by_region_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_count_region_group_args extends TBase {
  static $_TSPEC;

  public $query_struct = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'query_struct',
          'type' => TType::STRUCT,
          'class' => '\ERS\TRegionGroupQuery',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_count_region_group_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_count_region_group_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_count_region_group_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_count_region_group_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::I32,
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_count_region_group_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_count_region_group_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_count_region_group_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_region_group_args extends TBase {
  static $_TSPEC;

  public $query_struct = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'query_struct',
          'type' => TType::STRUCT,
          'class' => '\ERS\TRegionGroupQuery',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_region_group_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_region_group_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_region_group_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_region_group_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::LST,
          'etype' => TType::STRUCT,
          'elem' => array(
            'type' => TType::STRUCT,
            'class' => '\ERS\TRegionGroup',
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_region_group_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_region_group_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_region_group_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_save_region_group_args extends TBase {
  static $_TSPEC;

  public $region_group_id = null;
  public $region_group = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'region_group_id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'region_group',
          'type' => TType::STRUCT,
          'class' => '\ERS\TRegionGroup',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_save_region_group_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_save_region_group_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_save_region_group_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_save_region_group_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::I32,
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_save_region_group_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_save_region_group_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_save_region_group_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_remove_region_group_args extends TBase {
  static $_TSPEC;

  public $region_group_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'region_group_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_remove_region_group_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_remove_region_group_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_remove_region_group_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_remove_region_group_result extends TBase {
  static $_TSPEC;

  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_remove_region_group_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_remove_region_group_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_remove_region_group_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_update_region_group_region_args extends TBase {
  static $_TSPEC;

  public $region_group_id = null;
  public $region_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'region_group_id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'region_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_update_region_group_region_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_update_region_group_region_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_update_region_group_region_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_update_region_group_region_result extends TBase {
  static $_TSPEC;

  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_update_region_group_region_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_update_region_group_region_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_update_region_group_region_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_regions_by_region_group_ids_args extends TBase {
  static $_TSPEC;

  public $region_group_ids = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'region_group_ids',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_regions_by_region_group_ids_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_regions_by_region_group_ids_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_regions_by_region_group_ids_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_regions_by_region_group_ids_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::LST,
          'etype' => TType::STRUCT,
          'elem' => array(
            'type' => TType::STRUCT,
            'class' => '\ERS\TRegion',
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_regions_by_region_group_ids_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_regions_by_region_group_ids_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_regions_by_region_group_ids_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_activity_args extends TBase {
  static $_TSPEC;

  public $activity_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'activity_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_activity_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_activity_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_activity_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_activity_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::STRUCT,
          'class' => '\ERS\TActivity',
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_activity_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_activity_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_activity_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_mget_activity_args extends TBase {
  static $_TSPEC;

  public $activity_ids = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'activity_ids',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_mget_activity_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_mget_activity_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_mget_activity_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_mget_activity_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::LST,
          'etype' => TType::STRUCT,
          'elem' => array(
            'type' => TType::STRUCT,
            'class' => '\ERS\TActivity',
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_mget_activity_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_mget_activity_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_mget_activity_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_city_args extends TBase {
  static $_TSPEC;

  public $city_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'city_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_city_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_city_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_city_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_city_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::STRUCT,
          'class' => '\ERS\TCity',
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_city_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_city_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_city_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_city_by_name_args extends TBase {
  static $_TSPEC;

  public $city_name = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'city_name',
          'type' => TType::STRING,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_city_by_name_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_city_by_name_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_city_by_name_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_city_by_name_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::STRUCT,
          'class' => '\ERS\TCity',
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_city_by_name_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_city_by_name_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_city_by_name_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_mget_city_args extends TBase {
  static $_TSPEC;

  public $city_ids = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'city_ids',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_mget_city_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_mget_city_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_mget_city_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_mget_city_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::MAP,
          'ktype' => TType::I32,
          'vtype' => TType::STRUCT,
          'key' => array(
            'type' => TType::I32,
          ),
          'val' => array(
            'type' => TType::STRUCT,
            'class' => '\ERS\TCity',
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_mget_city_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_mget_city_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_mget_city_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_city_by_region_args extends TBase {
  static $_TSPEC;

  public $region_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'region_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_city_by_region_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_city_by_region_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_city_by_region_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_city_by_region_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::STRUCT,
          'class' => '\ERS\TCity',
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_city_by_region_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_city_by_region_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_city_by_region_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_city_by_region_group_args extends TBase {
  static $_TSPEC;

  public $region_group_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'region_group_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_city_by_region_group_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_city_by_region_group_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_city_by_region_group_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_city_by_region_group_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::STRUCT,
          'class' => '\ERS\TCity',
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_city_by_region_group_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_city_by_region_group_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_city_by_region_group_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_city_by_code_args extends TBase {
  static $_TSPEC;

  public $district_code = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'district_code',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_city_by_code_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_city_by_code_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_city_by_code_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_city_by_code_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::STRUCT,
          'class' => '\ERS\TCity',
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_city_by_code_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_city_by_code_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_city_by_code_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_city_by_area_code_args extends TBase {
  static $_TSPEC;

  public $area_code = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'area_code',
          'type' => TType::STRING,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_city_by_area_code_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_city_by_area_code_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_city_by_area_code_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_city_by_area_code_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::STRUCT,
          'class' => '\ERS\TCity',
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_city_by_area_code_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_city_by_area_code_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_city_by_area_code_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_country_region_args extends TBase {
  static $_TSPEC;

  public $query_struct = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'query_struct',
          'type' => TType::STRUCT,
          'class' => '\ERS\TCountryRegionQuery',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_country_region_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_country_region_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_country_region_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_country_region_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::LST,
          'etype' => TType::STRUCT,
          'elem' => array(
            'type' => TType::STRUCT,
            'class' => '\ERS\TCountryRegion',
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_country_region_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_country_region_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_country_region_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_city_args extends TBase {
  static $_TSPEC;

  public $query_struct = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'query_struct',
          'type' => TType::STRUCT,
          'class' => '\ERS\TCityQuery',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_city_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_city_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_city_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_city_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::LST,
          'etype' => TType::STRUCT,
          'elem' => array(
            'type' => TType::STRUCT,
            'class' => '\ERS\TCity',
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_city_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_city_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_city_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_food_args extends TBase {
  static $_TSPEC;

  public $food_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'food_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_food_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_food_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_food_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_food_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::STRUCT,
          'class' => '\ERS\TFood',
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_food_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_food_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_food_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_mget_food_args extends TBase {
  static $_TSPEC;

  public $food_ids = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'food_ids',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_mget_food_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_mget_food_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_mget_food_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_mget_food_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::LST,
          'etype' => TType::STRUCT,
          'elem' => array(
            'type' => TType::STRUCT,
            'class' => '\ERS\TFood',
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_mget_food_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_mget_food_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_mget_food_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_master_get_food_args extends TBase {
  static $_TSPEC;

  public $food_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'food_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_master_get_food_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_master_get_food_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_master_get_food_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_master_get_food_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::STRUCT,
          'class' => '\ERS\TFood',
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_master_get_food_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_master_get_food_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_master_get_food_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_food_by_sn_args extends TBase {
  static $_TSPEC;

  public $sn = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'sn',
          'type' => TType::STRING,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_food_by_sn_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_food_by_sn_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_food_by_sn_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_food_by_sn_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::STRUCT,
          'class' => '\ERS\TFood',
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_food_by_sn_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_food_by_sn_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_food_by_sn_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_food_category_args extends TBase {
  static $_TSPEC;

  public $food_category_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'food_category_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_food_category_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_food_category_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_food_category_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_food_category_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::STRUCT,
          'class' => '\ERS\TFoodCategory',
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_food_category_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_food_category_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_food_category_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_mget_food_category_args extends TBase {
  static $_TSPEC;

  public $food_category_ids = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'food_category_ids',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_mget_food_category_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_mget_food_category_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_mget_food_category_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_mget_food_category_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::LST,
          'etype' => TType::STRUCT,
          'elem' => array(
            'type' => TType::STRUCT,
            'class' => '\ERS\TFoodCategory',
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_mget_food_category_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_mget_food_category_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_mget_food_category_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_master_get_food_category_args extends TBase {
  static $_TSPEC;

  public $food_category_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'food_category_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_master_get_food_category_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_master_get_food_category_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_master_get_food_category_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_master_get_food_category_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::STRUCT,
          'class' => '\ERS\TFoodCategory',
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_master_get_food_category_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_master_get_food_category_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_master_get_food_category_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_food_ugc_image_args extends TBase {
  static $_TSPEC;

  public $food_ugc_image_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'food_ugc_image_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_food_ugc_image_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_food_ugc_image_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_food_ugc_image_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_food_ugc_image_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::STRUCT,
          'class' => '\ERS\TFoodUgcImage',
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_food_ugc_image_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_food_ugc_image_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_food_ugc_image_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_food_ugc_image_pr_args extends TBase {
  static $_TSPEC;

  public $food_ugc_image_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'food_ugc_image_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_food_ugc_image_pr_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_food_ugc_image_pr_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_food_ugc_image_pr_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_food_ugc_image_pr_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::LST,
          'etype' => TType::STRUCT,
          'elem' => array(
            'type' => TType::STRUCT,
            'class' => '\ERS\TFoodUgcImagePr',
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_food_ugc_image_pr_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_food_ugc_image_pr_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_food_ugc_image_pr_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_mget_food_ugc_image_args extends TBase {
  static $_TSPEC;

  public $food_ugc_image_ids = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'food_ugc_image_ids',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_mget_food_ugc_image_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_mget_food_ugc_image_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_mget_food_ugc_image_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_mget_food_ugc_image_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::LST,
          'etype' => TType::STRUCT,
          'elem' => array(
            'type' => TType::STRUCT,
            'class' => '\ERS\TFoodUgcImage',
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_mget_food_ugc_image_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_mget_food_ugc_image_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_mget_food_ugc_image_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_food_ugc_image_by_sn_args extends TBase {
  static $_TSPEC;

  public $sn = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'sn',
          'type' => TType::STRING,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_food_ugc_image_by_sn_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_food_ugc_image_by_sn_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_food_ugc_image_by_sn_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_food_ugc_image_by_sn_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::STRUCT,
          'class' => '\ERS\TFoodUgcImage',
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_food_ugc_image_by_sn_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_food_ugc_image_by_sn_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_food_ugc_image_by_sn_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_food_ugc_image_by_order_item_id_args extends TBase {
  static $_TSPEC;

  public $order_item_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'order_item_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_food_ugc_image_by_order_item_id_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_food_ugc_image_by_order_item_id_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_food_ugc_image_by_order_item_id_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_food_ugc_image_by_order_item_id_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::STRUCT,
          'class' => '\ERS\TFoodUgcImage',
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_food_ugc_image_by_order_item_id_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_food_ugc_image_by_order_item_id_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_food_ugc_image_by_order_item_id_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_food_ugc_image_by_user_id_args extends TBase {
  static $_TSPEC;

  public $user_id = null;
  public $date = null;
  public $max_day = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'date',
          'type' => TType::STRING,
          ),
        3 => array(
          'var' => 'max_day',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_food_ugc_image_by_user_id_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_food_ugc_image_by_user_id_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_food_ugc_image_by_user_id_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_food_ugc_image_by_user_id_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::LST,
          'etype' => TType::STRUCT,
          'elem' => array(
            'type' => TType::STRUCT,
            'class' => '\ERS\TFoodUgcImage',
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_food_ugc_image_by_user_id_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_food_ugc_image_by_user_id_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_food_ugc_image_by_user_id_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_count_food_ugc_image_args extends TBase {
  static $_TSPEC;

  public $query_struct = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'query_struct',
          'type' => TType::STRUCT,
          'class' => '\ERS\TFoodUgcImageQuery',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_count_food_ugc_image_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_count_food_ugc_image_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_count_food_ugc_image_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_count_food_ugc_image_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::I32,
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_count_food_ugc_image_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_count_food_ugc_image_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_count_food_ugc_image_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_food_ugc_image_args extends TBase {
  static $_TSPEC;

  public $query_struct = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'query_struct',
          'type' => TType::STRUCT,
          'class' => '\ERS\TFoodUgcImageQuery',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_food_ugc_image_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_food_ugc_image_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_food_ugc_image_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_food_ugc_image_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::LST,
          'etype' => TType::STRUCT,
          'elem' => array(
            'type' => TType::STRUCT,
            'class' => '\ERS\TFoodUgcImage',
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_food_ugc_image_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_food_ugc_image_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_food_ugc_image_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_count_food_ugc_image_cover_args extends TBase {
  static $_TSPEC;

  public $query_struct = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'query_struct',
          'type' => TType::STRUCT,
          'class' => '\ERS\TFoodUgcImageCoverQuery',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_count_food_ugc_image_cover_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_count_food_ugc_image_cover_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_count_food_ugc_image_cover_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_count_food_ugc_image_cover_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::I32,
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_count_food_ugc_image_cover_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_count_food_ugc_image_cover_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_count_food_ugc_image_cover_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_food_ugc_image_cover_args extends TBase {
  static $_TSPEC;

  public $query_struct = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'query_struct',
          'type' => TType::STRUCT,
          'class' => '\ERS\TFoodUgcImageCoverQuery',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_food_ugc_image_cover_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_food_ugc_image_cover_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_food_ugc_image_cover_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_food_ugc_image_cover_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::LST,
          'etype' => TType::STRUCT,
          'elem' => array(
            'type' => TType::STRUCT,
            'class' => '\ERS\TFoodUgcImageCover',
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_food_ugc_image_cover_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_food_ugc_image_cover_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_food_ugc_image_cover_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_like_food_ugc_image_args extends TBase {
  static $_TSPEC;

  public $user_id = null;
  public $food_ugc_image_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'food_ugc_image_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_like_food_ugc_image_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_like_food_ugc_image_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_like_food_ugc_image_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_like_food_ugc_image_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::I32,
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_like_food_ugc_image_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_like_food_ugc_image_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_like_food_ugc_image_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_dislike_food_ugc_image_args extends TBase {
  static $_TSPEC;

  public $user_id = null;
  public $food_ugc_image_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'food_ugc_image_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_dislike_food_ugc_image_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_dislike_food_ugc_image_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_dislike_food_ugc_image_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_dislike_food_ugc_image_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::I32,
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_dislike_food_ugc_image_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_dislike_food_ugc_image_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_dislike_food_ugc_image_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_filter_liked_food_ugc_image_ids_args extends TBase {
  static $_TSPEC;

  public $user_id = null;
  public $food_ugc_image_ids = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'food_ugc_image_ids',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_filter_liked_food_ugc_image_ids_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_filter_liked_food_ugc_image_ids_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_filter_liked_food_ugc_image_ids_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_filter_liked_food_ugc_image_ids_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_filter_liked_food_ugc_image_ids_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_filter_liked_food_ugc_image_ids_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_filter_liked_food_ugc_image_ids_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_liked_food_ugc_image_cover_ids_by_user_args extends TBase {
  static $_TSPEC;

  public $restaurant_id = null;
  public $user_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'restaurant_id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'user_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_liked_food_ugc_image_cover_ids_by_user_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_liked_food_ugc_image_cover_ids_by_user_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_liked_food_ugc_image_cover_ids_by_user_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_liked_food_ugc_image_cover_ids_by_user_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_liked_food_ugc_image_cover_ids_by_user_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_liked_food_ugc_image_cover_ids_by_user_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_liked_food_ugc_image_cover_ids_by_user_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_report_food_ugc_image_args extends TBase {
  static $_TSPEC;

  public $user_id = null;
  public $food_ugc_image_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'food_ugc_image_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_report_food_ugc_image_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_report_food_ugc_image_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_report_food_ugc_image_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_report_food_ugc_image_result extends TBase {
  static $_TSPEC;

  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_report_food_ugc_image_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_report_food_ugc_image_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_report_food_ugc_image_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_mget_garnish_args extends TBase {
  static $_TSPEC;

  public $garnish_ids = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'garnish_ids',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_mget_garnish_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_mget_garnish_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_mget_garnish_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_mget_garnish_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::LST,
          'etype' => TType::STRUCT,
          'elem' => array(
            'type' => TType::STRUCT,
            'class' => '\ERS\TGarnish',
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_mget_garnish_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_mget_garnish_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_mget_garnish_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_mget_garnish_by_food_args extends TBase {
  static $_TSPEC;

  public $food_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'food_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_mget_garnish_by_food_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_mget_garnish_by_food_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_mget_garnish_by_food_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_mget_garnish_by_food_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::LST,
          'etype' => TType::STRUCT,
          'elem' => array(
            'type' => TType::STRUCT,
            'class' => '\ERS\TGarnish',
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_mget_garnish_by_food_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_mget_garnish_by_food_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_mget_garnish_by_food_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_mget_food_flavor_by_food_ids_args extends TBase {
  static $_TSPEC;

  public $food_ids = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'food_ids',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_mget_food_flavor_by_food_ids_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_mget_food_flavor_by_food_ids_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_mget_food_flavor_by_food_ids_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_mget_food_flavor_by_food_ids_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::LST,
          'etype' => TType::STRUCT,
          'elem' => array(
            'type' => TType::STRUCT,
            'class' => '\ERS\TFoodFlavor',
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_mget_food_flavor_by_food_ids_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_mget_food_flavor_by_food_ids_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_mget_food_flavor_by_food_ids_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_garnish_category_args extends TBase {
  static $_TSPEC;

  public $garnish_category_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'garnish_category_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_garnish_category_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_garnish_category_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_garnish_category_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_garnish_category_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::STRUCT,
          'class' => '\ERS\TGarnishCategory',
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_garnish_category_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_garnish_category_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_garnish_category_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_mget_garnish_category_args extends TBase {
  static $_TSPEC;

  public $garnish_category_ids = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'garnish_category_ids',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_mget_garnish_category_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_mget_garnish_category_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_mget_garnish_category_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_mget_garnish_category_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::LST,
          'etype' => TType::STRUCT,
          'elem' => array(
            'type' => TType::STRUCT,
            'class' => '\ERS\TGarnishCategory',
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_mget_garnish_category_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_mget_garnish_category_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_mget_garnish_category_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_mget_garnish_category_by_food_args extends TBase {
  static $_TSPEC;

  public $food_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'food_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_mget_garnish_category_by_food_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_mget_garnish_category_by_food_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_mget_garnish_category_by_food_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_mget_garnish_category_by_food_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::LST,
          'etype' => TType::STRUCT,
          'elem' => array(
            'type' => TType::STRUCT,
            'class' => '\ERS\TGarnishCategory',
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_mget_garnish_category_by_food_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_mget_garnish_category_by_food_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_mget_garnish_category_by_food_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_activity_args extends TBase {
  static $_TSPEC;

  public $query_struct = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'query_struct',
          'type' => TType::STRUCT,
          'class' => '\ERS\TActivityQuery',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_activity_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_activity_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_activity_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_activity_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::LST,
          'etype' => TType::STRUCT,
          'elem' => array(
            'type' => TType::STRUCT,
            'class' => '\ERS\TActivity',
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_activity_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_activity_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_activity_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_activity_by_sn_args extends TBase {
  static $_TSPEC;

  public $sn = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'sn',
          'type' => TType::STRING,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_activity_by_sn_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_activity_by_sn_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_activity_by_sn_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_activity_by_sn_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::STRUCT,
          'class' => '\ERS\TActivity',
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_activity_by_sn_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_activity_by_sn_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_activity_by_sn_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_activity_ids_by_geohash_args extends TBase {
  static $_TSPEC;

  public $geohash = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'geohash',
          'type' => TType::I64,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_activity_ids_by_geohash_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_activity_ids_by_geohash_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_activity_ids_by_geohash_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_activity_ids_by_geohash_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_activity_ids_by_geohash_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_activity_ids_by_geohash_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_activity_ids_by_geohash_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_dock_corp_args extends TBase {
  static $_TSPEC;

  public $id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_dock_corp_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_dock_corp_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_dock_corp_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_dock_corp_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::STRUCT,
          'class' => '\ERS\TDockCorp',
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_dock_corp_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_dock_corp_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_dock_corp_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_dock_corp_by_restaurant_args extends TBase {
  static $_TSPEC;

  public $restaurant_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'restaurant_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_dock_corp_by_restaurant_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_dock_corp_by_restaurant_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_dock_corp_by_restaurant_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_dock_corp_by_restaurant_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::STRUCT,
          'class' => '\ERS\TDockCorp',
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_dock_corp_by_restaurant_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_dock_corp_by_restaurant_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_dock_corp_by_restaurant_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_dock_corp_by_app_args extends TBase {
  static $_TSPEC;

  public $app_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'app_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_dock_corp_by_app_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_dock_corp_by_app_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_dock_corp_by_app_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_dock_corp_by_app_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::STRUCT,
          'class' => '\ERS\TDockCorp',
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_dock_corp_by_app_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_dock_corp_by_app_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_dock_corp_by_app_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_mget_dock_corp_args extends TBase {
  static $_TSPEC;

  public $ids = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'ids',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_mget_dock_corp_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_mget_dock_corp_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_mget_dock_corp_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_mget_dock_corp_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::LST,
          'etype' => TType::STRUCT,
          'elem' => array(
            'type' => TType::STRUCT,
            'class' => '\ERS\TDockCorp',
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_mget_dock_corp_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_mget_dock_corp_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_mget_dock_corp_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_count_dock_corp_args extends TBase {
  static $_TSPEC;

  public $query_struct = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'query_struct',
          'type' => TType::STRUCT,
          'class' => '\ERS\TDockCorpQuery',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_count_dock_corp_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_count_dock_corp_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_count_dock_corp_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_count_dock_corp_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::I32,
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_count_dock_corp_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_count_dock_corp_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_count_dock_corp_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_dock_corp_args extends TBase {
  static $_TSPEC;

  public $query_struct = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'query_struct',
          'type' => TType::STRUCT,
          'class' => '\ERS\TDockCorpQuery',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_dock_corp_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_dock_corp_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_dock_corp_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_dock_corp_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::LST,
          'etype' => TType::STRUCT,
          'elem' => array(
            'type' => TType::STRUCT,
            'class' => '\ERS\TDockCorp',
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_dock_corp_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_dock_corp_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_dock_corp_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_dock_corp_restaurant_args extends TBase {
  static $_TSPEC;

  public $id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_dock_corp_restaurant_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_dock_corp_restaurant_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_dock_corp_restaurant_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_dock_corp_restaurant_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::STRUCT,
          'class' => '\ERS\TDockCorpRestaurant',
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_dock_corp_restaurant_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_dock_corp_restaurant_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_dock_corp_restaurant_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_mget_dock_corp_restaurant_args extends TBase {
  static $_TSPEC;

  public $ids = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'ids',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_mget_dock_corp_restaurant_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_mget_dock_corp_restaurant_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_mget_dock_corp_restaurant_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_mget_dock_corp_restaurant_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::LST,
          'etype' => TType::STRUCT,
          'elem' => array(
            'type' => TType::STRUCT,
            'class' => '\ERS\TDockCorpRestaurant',
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_mget_dock_corp_restaurant_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_mget_dock_corp_restaurant_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_mget_dock_corp_restaurant_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_dock_corp_restaurant_args extends TBase {
  static $_TSPEC;

  public $corp_ids = null;
  public $restaurant_ids = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'corp_ids',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        2 => array(
          'var' => 'restaurant_ids',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_dock_corp_restaurant_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_dock_corp_restaurant_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_dock_corp_restaurant_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_dock_corp_restaurant_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::LST,
          'etype' => TType::STRUCT,
          'elem' => array(
            'type' => TType::STRUCT,
            'class' => '\ERS\TDockCorpRestaurant',
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_dock_corp_restaurant_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_dock_corp_restaurant_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_dock_corp_restaurant_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_logo_args extends TBase {
  static $_TSPEC;

  public $logo_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'logo_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_logo_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_logo_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_logo_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_logo_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::STRUCT,
          'class' => '\ERS\TLogo',
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_logo_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_logo_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_logo_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_mget_logo_args extends TBase {
  static $_TSPEC;

  public $logo_ids = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'logo_ids',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_mget_logo_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_mget_logo_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_mget_logo_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_mget_logo_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::LST,
          'etype' => TType::STRUCT,
          'elem' => array(
            'type' => TType::STRUCT,
            'class' => '\ERS\TLogo',
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_mget_logo_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_mget_logo_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_mget_logo_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_current_logo_args extends TBase {
  static $_TSPEC;


  public function __construct() {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        );
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_current_logo_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_current_logo_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_current_logo_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_current_logo_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::LST,
          'etype' => TType::STRUCT,
          'elem' => array(
            'type' => TType::STRUCT,
            'class' => '\ERS\TLogo',
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_current_logo_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_current_logo_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_current_logo_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_location_by_restaurant_args extends TBase {
  static $_TSPEC;

  public $restaurant_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'restaurant_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_location_by_restaurant_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_location_by_restaurant_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_location_by_restaurant_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_location_by_restaurant_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_location_by_restaurant_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_location_by_restaurant_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_location_by_restaurant_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_location_by_region_args extends TBase {
  static $_TSPEC;

  public $region_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'region_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_location_by_region_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_location_by_region_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_location_by_region_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_location_by_region_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_location_by_region_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_location_by_region_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_location_by_region_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_free_gift_activity_args extends TBase {
  static $_TSPEC;

  public $free_gift_activity_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'free_gift_activity_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_free_gift_activity_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_free_gift_activity_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_free_gift_activity_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_free_gift_activity_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::STRUCT,
          'class' => '\ERS\TFreeGiftActivity',
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_free_gift_activity_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_free_gift_activity_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_free_gift_activity_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_mget_free_gift_activity_args extends TBase {
  static $_TSPEC;

  public $free_gift_activity_ids = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'free_gift_activity_ids',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_mget_free_gift_activity_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_mget_free_gift_activity_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_mget_free_gift_activity_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_mget_free_gift_activity_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::LST,
          'etype' => TType::STRUCT,
          'elem' => array(
            'type' => TType::STRUCT,
            'class' => '\ERS\TFreeGiftActivity',
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_mget_free_gift_activity_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_mget_free_gift_activity_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_mget_free_gift_activity_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_mget_free_gift_activity_list_args extends TBase {
  static $_TSPEC;


  public function __construct() {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        );
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_mget_free_gift_activity_list_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_mget_free_gift_activity_list_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_mget_free_gift_activity_list_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_mget_free_gift_activity_list_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::LST,
          'etype' => TType::STRUCT,
          'elem' => array(
            'type' => TType::STRUCT,
            'class' => '\ERS\TFreeGiftActivity',
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_mget_free_gift_activity_list_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_mget_free_gift_activity_list_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_mget_free_gift_activity_list_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_mget_free_gift_activity_by_attributes_args extends TBase {
  static $_TSPEC;

  public $attrs = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'attrs',
          'type' => TType::LST,
          'etype' => TType::STRING,
          'elem' => array(
            'type' => TType::STRING,
            ),
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_mget_free_gift_activity_by_attributes_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_mget_free_gift_activity_by_attributes_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_mget_free_gift_activity_by_attributes_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_mget_free_gift_activity_by_attributes_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::LST,
          'etype' => TType::STRUCT,
          'elem' => array(
            'type' => TType::STRUCT,
            'class' => '\ERS\TFreeGiftActivity',
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_mget_free_gift_activity_by_attributes_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_mget_free_gift_activity_by_attributes_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_mget_free_gift_activity_by_attributes_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_by_entry_args extends TBase {
  static $_TSPEC;

  public $entry_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'entry_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_by_entry_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_by_entry_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_by_entry_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_by_entry_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::LST,
          'etype' => TType::STRUCT,
          'elem' => array(
            'type' => TType::STRUCT,
            'class' => '\ERS\TRestaurant',
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_by_entry_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_by_entry_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_by_entry_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_premium_by_entry_args extends TBase {
  static $_TSPEC;

  public $entry_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'entry_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_premium_by_entry_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_premium_by_entry_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_premium_by_entry_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_premium_by_entry_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::LST,
          'etype' => TType::STRUCT,
          'elem' => array(
            'type' => TType::STRUCT,
            'class' => '\ERS\TRestaurant',
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_premium_by_entry_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_premium_by_entry_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_premium_by_entry_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_premium_by_geohash2_args extends TBase {
  static $_TSPEC;

  public $geohash = null;
  public $offset = null;
  public $limit = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'geohash',
          'type' => TType::I64,
          ),
        2 => array(
          'var' => 'offset',
          'type' => TType::I32,
          ),
        3 => array(
          'var' => 'limit',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_premium_by_geohash2_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_premium_by_geohash2_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_premium_by_geohash2_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_premium_by_geohash2_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::LST,
          'etype' => TType::STRUCT,
          'elem' => array(
            'type' => TType::STRUCT,
            'class' => '\ERS\TLeanRestaurant',
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_premium_by_geohash2_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_premium_by_geohash2_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_premium_by_geohash2_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_count_premium_by_geohash_args extends TBase {
  static $_TSPEC;

  public $geohash = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'geohash',
          'type' => TType::I64,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_count_premium_by_geohash_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_count_premium_by_geohash_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_count_premium_by_geohash_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_count_premium_by_geohash_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::I32,
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_count_premium_by_geohash_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_count_premium_by_geohash_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_count_premium_by_geohash_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_bookable_by_entry_args extends TBase {
  static $_TSPEC;

  public $entry_id = null;
  public $deliver_time = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'entry_id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'deliver_time',
          'type' => TType::STRING,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_bookable_by_entry_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_bookable_by_entry_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_bookable_by_entry_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_bookable_by_entry_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::LST,
          'etype' => TType::STRUCT,
          'elem' => array(
            'type' => TType::STRUCT,
            'class' => '\ERS\TRestaurant',
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_bookable_by_entry_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_bookable_by_entry_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_bookable_by_entry_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_favor_by_geohash_args extends TBase {
  static $_TSPEC;

  public $user_id = null;
  public $geohash = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'geohash',
          'type' => TType::I64,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_favor_by_geohash_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_favor_by_geohash_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_favor_by_geohash_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_favor_by_geohash_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::LST,
          'etype' => TType::STRUCT,
          'elem' => array(
            'type' => TType::STRUCT,
            'class' => '\ERS\TRestaurant',
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_favor_by_geohash_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_favor_by_geohash_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_favor_by_geohash_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_favor_by_entry_args extends TBase {
  static $_TSPEC;

  public $user_id = null;
  public $entry_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'entry_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_favor_by_entry_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_favor_by_entry_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_favor_by_entry_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_favor_by_entry_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::LST,
          'etype' => TType::STRUCT,
          'elem' => array(
            'type' => TType::STRUCT,
            'class' => '\ERS\TRestaurant',
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_favor_by_entry_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_favor_by_entry_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_favor_by_entry_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_favor_ids_args extends TBase {
  static $_TSPEC;

  public $user_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_favor_ids_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_favor_ids_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_favor_ids_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_favor_ids_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_favor_ids_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_favor_ids_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_favor_ids_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_favor_args extends TBase {
  static $_TSPEC;

  public $user_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_favor_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_favor_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_favor_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_favor_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::LST,
          'etype' => TType::STRUCT,
          'elem' => array(
            'type' => TType::STRUCT,
            'class' => '\ERS\TRestaurant',
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_favor_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_favor_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_favor_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_by_geohash_args extends TBase {
  static $_TSPEC;

  public $geohash = null;
  public $offset = null;
  public $limit = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'geohash',
          'type' => TType::I64,
          ),
        2 => array(
          'var' => 'offset',
          'type' => TType::I32,
          ),
        3 => array(
          'var' => 'limit',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_by_geohash_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_by_geohash_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_by_geohash_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_by_geohash_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::LST,
          'etype' => TType::STRUCT,
          'elem' => array(
            'type' => TType::STRUCT,
            'class' => '\ERS\TRestaurant',
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_by_geohash_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_by_geohash_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_by_geohash_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_by_psn_args extends TBase {
  static $_TSPEC;

  public $psn = null;
  public $offset = null;
  public $limit = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'psn',
          'type' => TType::STRING,
          ),
        2 => array(
          'var' => 'offset',
          'type' => TType::I32,
          ),
        3 => array(
          'var' => 'limit',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_by_psn_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_by_psn_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_by_psn_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_by_psn_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::LST,
          'etype' => TType::STRUCT,
          'elem' => array(
            'type' => TType::STRUCT,
            'class' => '\ERS\TRestaurant',
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_by_psn_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_by_psn_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_by_psn_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_premium_by_geohash_args extends TBase {
  static $_TSPEC;

  public $geohash = null;
  public $offset = null;
  public $limit = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'geohash',
          'type' => TType::I64,
          ),
        2 => array(
          'var' => 'offset',
          'type' => TType::I32,
          ),
        3 => array(
          'var' => 'limit',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_premium_by_geohash_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_premium_by_geohash_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_premium_by_geohash_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_premium_by_geohash_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::LST,
          'etype' => TType::STRUCT,
          'elem' => array(
            'type' => TType::STRUCT,
            'class' => '\ERS\TRestaurant',
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_premium_by_geohash_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_premium_by_geohash_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_premium_by_geohash_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_premium_by_psn_args extends TBase {
  static $_TSPEC;

  public $psn = null;
  public $offset = null;
  public $limit = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'psn',
          'type' => TType::STRING,
          ),
        2 => array(
          'var' => 'offset',
          'type' => TType::I32,
          ),
        3 => array(
          'var' => 'limit',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_premium_by_psn_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_premium_by_psn_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_premium_by_psn_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_premium_by_psn_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::LST,
          'etype' => TType::STRUCT,
          'elem' => array(
            'type' => TType::STRUCT,
            'class' => '\ERS\TRestaurant',
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_premium_by_psn_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_premium_by_psn_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_premium_by_psn_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_by_geohash2_args extends TBase {
  static $_TSPEC;

  public $geohash = null;
  public $offset = null;
  public $limit = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'geohash',
          'type' => TType::I64,
          ),
        2 => array(
          'var' => 'offset',
          'type' => TType::I32,
          ),
        3 => array(
          'var' => 'limit',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_by_geohash2_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_by_geohash2_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_by_geohash2_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_by_geohash2_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::LST,
          'etype' => TType::STRUCT,
          'elem' => array(
            'type' => TType::STRUCT,
            'class' => '\ERS\TLeanRestaurant',
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_by_geohash2_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_by_geohash2_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_by_geohash2_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_bookable_by_geohash2_args extends TBase {
  static $_TSPEC;

  public $geohash = null;
  public $deliver_time = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'geohash',
          'type' => TType::I64,
          ),
        2 => array(
          'var' => 'deliver_time',
          'type' => TType::STRING,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_bookable_by_geohash2_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_bookable_by_geohash2_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_bookable_by_geohash2_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_bookable_by_geohash2_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::LST,
          'etype' => TType::STRUCT,
          'elem' => array(
            'type' => TType::STRUCT,
            'class' => '\ERS\TRestaurant',
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_bookable_by_geohash2_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_bookable_by_geohash2_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_bookable_by_geohash2_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_favor_food_ids_by_restaurant_args extends TBase {
  static $_TSPEC;

  public $user_id = null;
  public $restaurant_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'restaurant_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_favor_food_ids_by_restaurant_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_favor_food_ids_by_restaurant_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_favor_food_ids_by_restaurant_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_favor_food_ids_by_restaurant_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_favor_food_ids_by_restaurant_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_favor_food_ids_by_restaurant_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_favor_food_ids_by_restaurant_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_favor_food_ids_by_user_args extends TBase {
  static $_TSPEC;

  public $user_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_favor_food_ids_by_user_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_favor_food_ids_by_user_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_favor_food_ids_by_user_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_favor_food_ids_by_user_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_favor_food_ids_by_user_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_favor_food_ids_by_user_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_favor_food_ids_by_user_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_favor_food_by_user_args extends TBase {
  static $_TSPEC;

  public $user_id = null;
  public $offset = null;
  public $limit = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'offset',
          'type' => TType::I32,
          ),
        3 => array(
          'var' => 'limit',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_favor_food_by_user_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_favor_food_by_user_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_favor_food_by_user_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_favor_food_by_user_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::LST,
          'etype' => TType::STRUCT,
          'elem' => array(
            'type' => TType::STRUCT,
            'class' => '\ERS\TFood',
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_favor_food_by_user_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_favor_food_by_user_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_favor_food_by_user_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_food_args extends TBase {
  static $_TSPEC;

  public $query_struct = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'query_struct',
          'type' => TType::STRUCT,
          'class' => '\ERS\TFoodQuery',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_food_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_food_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_food_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_food_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::LST,
          'etype' => TType::STRUCT,
          'elem' => array(
            'type' => TType::STRUCT,
            'class' => '\ERS\TFood',
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_food_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_food_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_food_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_food_by_restaurant_args extends TBase {
  static $_TSPEC;

  public $restaurant_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'restaurant_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_food_by_restaurant_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_food_by_restaurant_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_food_by_restaurant_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_food_by_restaurant_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::LST,
          'etype' => TType::STRUCT,
          'elem' => array(
            'type' => TType::STRUCT,
            'class' => '\ERS\TFood',
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_food_by_restaurant_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_food_by_restaurant_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_food_by_restaurant_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_food_category_args extends TBase {
  static $_TSPEC;

  public $query_struct = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'query_struct',
          'type' => TType::STRUCT,
          'class' => '\ERS\TFoodCategoryQuery',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_food_category_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_food_category_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_food_category_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_food_category_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::LST,
          'etype' => TType::STRUCT,
          'elem' => array(
            'type' => TType::STRUCT,
            'class' => '\ERS\TFoodCategory',
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_food_category_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_food_category_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_food_category_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_food_garnish_category_args extends TBase {
  static $_TSPEC;

  public $query_struct = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'query_struct',
          'type' => TType::STRUCT,
          'class' => '\ERS\TFoodGarnishCategoryQuery',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_food_garnish_category_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_food_garnish_category_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_food_garnish_category_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_food_garnish_category_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::LST,
          'etype' => TType::STRUCT,
          'elem' => array(
            'type' => TType::STRUCT,
            'class' => '\ERS\TFoodGarnishCategory',
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_food_garnish_category_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_food_garnish_category_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_food_garnish_category_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_food_category_by_restaurant_args extends TBase {
  static $_TSPEC;

  public $restaurant_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'restaurant_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_food_category_by_restaurant_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_food_category_by_restaurant_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_food_category_by_restaurant_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_food_category_by_restaurant_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::LST,
          'etype' => TType::STRUCT,
          'elem' => array(
            'type' => TType::STRUCT,
            'class' => '\ERS\TFoodCategory',
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_food_category_by_restaurant_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_food_category_by_restaurant_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_food_category_by_restaurant_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_garnish_args extends TBase {
  static $_TSPEC;

  public $query_struct = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'query_struct',
          'type' => TType::STRUCT,
          'class' => '\ERS\TGarnishQuery',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_garnish_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_garnish_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_garnish_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_garnish_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::LST,
          'etype' => TType::STRUCT,
          'elem' => array(
            'type' => TType::STRUCT,
            'class' => '\ERS\TGarnish',
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_garnish_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_garnish_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_garnish_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_garnish_category_args extends TBase {
  static $_TSPEC;

  public $query_struct = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'query_struct',
          'type' => TType::STRUCT,
          'class' => '\ERS\TGarnishCategoryQuery',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_garnish_category_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_garnish_category_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_garnish_category_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_garnish_category_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::LST,
          'etype' => TType::STRUCT,
          'elem' => array(
            'type' => TType::STRUCT,
            'class' => '\ERS\TGarnishCategory',
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_garnish_category_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_garnish_category_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_garnish_category_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_comment_args extends TBase {
  static $_TSPEC;

  public $comment_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'comment_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_comment_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_comment_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_comment_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_comment_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::STRUCT,
          'class' => '\ERS\TRestaurantComment',
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_comment_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_comment_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_comment_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_entry_by_restaurant_args extends TBase {
  static $_TSPEC;

  public $restaurant_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'restaurant_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_entry_by_restaurant_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_entry_by_restaurant_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_entry_by_restaurant_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_entry_by_restaurant_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::LST,
          'etype' => TType::STRUCT,
          'elem' => array(
            'type' => TType::STRUCT,
            'class' => '\ERS\TEntry',
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_entry_by_restaurant_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_entry_by_restaurant_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_entry_by_restaurant_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_hot_food_by_entry_args extends TBase {
  static $_TSPEC;

  public $entry_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'entry_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_hot_food_by_entry_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_hot_food_by_entry_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_hot_food_by_entry_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_hot_food_by_entry_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::LST,
          'etype' => TType::STRUCT,
          'elem' => array(
            'type' => TType::STRUCT,
            'class' => '\ERS\TFood',
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_hot_food_by_entry_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_hot_food_by_entry_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_hot_food_by_entry_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_hot_food_by_geohash_args extends TBase {
  static $_TSPEC;

  public $geohash = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'geohash',
          'type' => TType::I64,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_hot_food_by_geohash_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_hot_food_by_geohash_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_hot_food_by_geohash_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_hot_food_by_geohash_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::LST,
          'etype' => TType::STRUCT,
          'elem' => array(
            'type' => TType::STRUCT,
            'class' => '\ERS\TFood',
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_hot_food_by_geohash_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_hot_food_by_geohash_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_hot_food_by_geohash_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_hot_food_by_restaurant_args extends TBase {
  static $_TSPEC;

  public $restaurant_id = null;
  public $limit = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'restaurant_id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'limit',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_hot_food_by_restaurant_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_hot_food_by_restaurant_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_hot_food_by_restaurant_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_hot_food_by_restaurant_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::LST,
          'etype' => TType::STRUCT,
          'elem' => array(
            'type' => TType::STRUCT,
            'class' => '\ERS\TFood',
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_hot_food_by_restaurant_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_hot_food_by_restaurant_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_hot_food_by_restaurant_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_comment_with_replies_args extends TBase {
  static $_TSPEC;

  public $query_struct = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'query_struct',
          'type' => TType::STRUCT,
          'class' => '\ERS\TRestaurantCommentQuery',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_comment_with_replies_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_comment_with_replies_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_comment_with_replies_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_comment_with_replies_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::LST,
          'etype' => TType::STRUCT,
          'elem' => array(
            'type' => TType::STRUCT,
            'class' => '\ERS\TCCommentWithReplies',
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_comment_with_replies_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_comment_with_replies_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_comment_with_replies_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_all_comment_args extends TBase {
  static $_TSPEC;

  public $query_struct = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'query_struct',
          'type' => TType::STRUCT,
          'class' => '\ERS\TRestaurantCommentQuery',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_all_comment_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_all_comment_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_all_comment_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_all_comment_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::LST,
          'etype' => TType::STRUCT,
          'elem' => array(
            'type' => TType::STRUCT,
            'class' => '\ERS\TRestaurantComment',
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_all_comment_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_all_comment_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_all_comment_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_director_id_args extends TBase {
  static $_TSPEC;

  public $restaurant_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'restaurant_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_director_id_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_director_id_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_director_id_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_director_id_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::I32,
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_director_id_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_director_id_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_director_id_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_director_ids_by_area_args extends TBase {
  static $_TSPEC;

  public $region_ids = null;
  public $region_group_ids = null;
  public $city_ids = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'region_ids',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        2 => array(
          'var' => 'region_group_ids',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        3 => array(
          'var' => 'city_ids',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_director_ids_by_area_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_director_ids_by_area_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_director_ids_by_area_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_director_ids_by_area_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_director_ids_by_area_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_director_ids_by_area_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_director_ids_by_area_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_restaurant_by_dock_corp_args extends TBase {
  static $_TSPEC;

  public $dock_corp_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'dock_corp_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_restaurant_by_dock_corp_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_restaurant_by_dock_corp_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_restaurant_by_dock_corp_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_restaurant_by_dock_corp_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::LST,
          'etype' => TType::STRUCT,
          'elem' => array(
            'type' => TType::STRUCT,
            'class' => '\ERS\TRestaurant',
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_restaurant_by_dock_corp_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_restaurant_by_dock_corp_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_restaurant_by_dock_corp_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_restaurant_flavor_by_restaurant_id_args extends TBase {
  static $_TSPEC;

  public $restaurant_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'restaurant_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_restaurant_flavor_by_restaurant_id_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_restaurant_flavor_by_restaurant_id_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_restaurant_flavor_by_restaurant_id_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_restaurant_flavor_by_restaurant_id_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::LST,
          'etype' => TType::STRUCT,
          'elem' => array(
            'type' => TType::STRUCT,
            'class' => '\ERS\TRestaurantFlavor',
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_restaurant_flavor_by_restaurant_id_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_restaurant_flavor_by_restaurant_id_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_restaurant_flavor_by_restaurant_id_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_free_gift_activity_args extends TBase {
  static $_TSPEC;

  public $query_struct = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'query_struct',
          'type' => TType::STRUCT,
          'class' => '\ERS\TFreeGiftActivityQuery',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_free_gift_activity_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_free_gift_activity_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_free_gift_activity_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_free_gift_activity_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::LST,
          'etype' => TType::STRUCT,
          'elem' => array(
            'type' => TType::STRUCT,
            'class' => '\ERS\TFreeGiftActivity',
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_free_gift_activity_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_free_gift_activity_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_free_gift_activity_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_food_activity_args extends TBase {
  static $_TSPEC;

  public $query_struct = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'query_struct',
          'type' => TType::STRUCT,
          'class' => '\ERS\TFoodActivityQuery',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_food_activity_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_food_activity_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_food_activity_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_food_activity_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::LST,
          'etype' => TType::STRUCT,
          'elem' => array(
            'type' => TType::STRUCT,
            'class' => '\ERS\TFoodActivity',
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_food_activity_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_food_activity_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_food_activity_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_count_food_activity_args extends TBase {
  static $_TSPEC;

  public $query_struct = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'query_struct',
          'type' => TType::STRUCT,
          'class' => '\ERS\TFoodActivityQuery',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_count_food_activity_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_count_food_activity_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_count_food_activity_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_count_food_activity_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::I32,
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_count_food_activity_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_count_food_activity_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_count_food_activity_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_food_activity_args extends TBase {
  static $_TSPEC;

  public $food_activity_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'food_activity_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_food_activity_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_food_activity_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_food_activity_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_food_activity_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::STRUCT,
          'class' => '\ERS\TFoodActivity',
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_food_activity_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_food_activity_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_food_activity_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_mget_food_activity_args extends TBase {
  static $_TSPEC;

  public $food_activity_ids = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'food_activity_ids',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_mget_food_activity_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_mget_food_activity_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_mget_food_activity_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_mget_food_activity_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::LST,
          'etype' => TType::STRUCT,
          'elem' => array(
            'type' => TType::STRUCT,
            'class' => '\ERS\TFoodActivity',
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_mget_food_activity_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_mget_food_activity_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_mget_food_activity_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_food_activity_id_map_args extends TBase {
  static $_TSPEC;

  public $food_ids = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'food_ids',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_food_activity_id_map_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_food_activity_id_map_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_food_activity_id_map_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_food_activity_id_map_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::MAP,
          'ktype' => TType::I32,
          'vtype' => TType::I32,
          'key' => array(
            'type' => TType::I32,
          ),
          'val' => array(
            'type' => TType::I32,
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_food_activity_id_map_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_food_activity_id_map_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_food_activity_id_map_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_weekday_food_activity_id_map_args extends TBase {
  static $_TSPEC;

  public $food_ids = null;
  public $restaurant_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'food_ids',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        2 => array(
          'var' => 'restaurant_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_weekday_food_activity_id_map_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_weekday_food_activity_id_map_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_weekday_food_activity_id_map_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_weekday_food_activity_id_map_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::MAP,
          'ktype' => TType::I32,
          'vtype' => TType::MAP,
          'key' => array(
            'type' => TType::I32,
          ),
          'val' => array(
            'type' => TType::MAP,
            'ktype' => TType::I32,
            'vtype' => TType::I32,
            'key' => array(
              'type' => TType::I32,
            ),
            'val' => array(
              'type' => TType::I32,
              ),
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_weekday_food_activity_id_map_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_weekday_food_activity_id_map_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_weekday_food_activity_id_map_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_weekday_food_activity_id_map_no_cache_args extends TBase {
  static $_TSPEC;

  public $food_ids = null;
  public $restaurant_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'food_ids',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        2 => array(
          'var' => 'restaurant_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_weekday_food_activity_id_map_no_cache_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_weekday_food_activity_id_map_no_cache_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_weekday_food_activity_id_map_no_cache_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_weekday_food_activity_id_map_no_cache_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::MAP,
          'ktype' => TType::I32,
          'vtype' => TType::MAP,
          'key' => array(
            'type' => TType::I32,
          ),
          'val' => array(
            'type' => TType::MAP,
            'ktype' => TType::I32,
            'vtype' => TType::I32,
            'key' => array(
              'type' => TType::I32,
            ),
            'val' => array(
              'type' => TType::I32,
              ),
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_weekday_food_activity_id_map_no_cache_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_weekday_food_activity_id_map_no_cache_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_weekday_food_activity_id_map_no_cache_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_food_activity_with_restaurant_ids_args extends TBase {
  static $_TSPEC;

  public $restaurant_ids = null;
  public $weekdays = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'restaurant_ids',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        2 => array(
          'var' => 'weekdays',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_food_activity_with_restaurant_ids_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_food_activity_with_restaurant_ids_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_food_activity_with_restaurant_ids_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_food_activity_with_restaurant_ids_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::LST,
          'etype' => TType::STRUCT,
          'elem' => array(
            'type' => TType::STRUCT,
            'class' => '\ERS\TCFoodActivityWithRestaurantIds',
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_food_activity_with_restaurant_ids_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_food_activity_with_restaurant_ids_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_food_activity_with_restaurant_ids_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_add_restaurant_certification_args extends TBase {
  static $_TSPEC;

  public $rest_cert = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'rest_cert',
          'type' => TType::STRUCT,
          'class' => '\ERS\TRestaurantCertification',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_add_restaurant_certification_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_add_restaurant_certification_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_add_restaurant_certification_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_add_restaurant_certification_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::I32,
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_add_restaurant_certification_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_add_restaurant_certification_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_add_restaurant_certification_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_update_restaurant_certification_args extends TBase {
  static $_TSPEC;

  public $rest_cert = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'rest_cert',
          'type' => TType::STRUCT,
          'class' => '\ERS\TRestaurantCertification',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_update_restaurant_certification_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_update_restaurant_certification_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_update_restaurant_certification_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_update_restaurant_certification_result extends TBase {
  static $_TSPEC;

  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_update_restaurant_certification_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_update_restaurant_certification_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_update_restaurant_certification_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_process_certification_args extends TBase {
  static $_TSPEC;

  public $process_user_id = null;
  public $restaurant_id = null;
  public $to_status = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'process_user_id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'restaurant_id',
          'type' => TType::I32,
          ),
        3 => array(
          'var' => 'to_status',
          'type' => TType::I16,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_process_certification_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_process_certification_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_process_certification_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_process_certification_result extends TBase {
  static $_TSPEC;

  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_process_certification_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_process_certification_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_process_certification_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_restaurant_certification_args extends TBase {
  static $_TSPEC;

  public $restaurant_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'restaurant_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_restaurant_certification_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_restaurant_certification_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_restaurant_certification_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_restaurant_certification_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::STRUCT,
          'class' => '\ERS\TRestaurantCertification',
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_restaurant_certification_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_restaurant_certification_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_restaurant_certification_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_mget_restaurant_valid_certification_args extends TBase {
  static $_TSPEC;

  public $restaurant_ids = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'restaurant_ids',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_mget_restaurant_valid_certification_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_mget_restaurant_valid_certification_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_mget_restaurant_valid_certification_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_mget_restaurant_valid_certification_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::MAP,
          'ktype' => TType::I32,
          'vtype' => TType::STRUCT,
          'key' => array(
            'type' => TType::I32,
          ),
          'val' => array(
            'type' => TType::STRUCT,
            'class' => '\ERS\TRestaurantCertification',
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_mget_restaurant_valid_certification_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_mget_restaurant_valid_certification_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_mget_restaurant_valid_certification_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_filter_uncertificated_restaurants_args extends TBase {
  static $_TSPEC;

  public $restaurant_ids = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'restaurant_ids',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_filter_uncertificated_restaurants_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_filter_uncertificated_restaurants_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_filter_uncertificated_restaurants_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_filter_uncertificated_restaurants_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_filter_uncertificated_restaurants_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_filter_uncertificated_restaurants_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_filter_uncertificated_restaurants_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_restaurant_certification_by_status_args extends TBase {
  static $_TSPEC;

  public $status = null;
  public $offset = null;
  public $limit = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'status',
          'type' => TType::I16,
          ),
        2 => array(
          'var' => 'offset',
          'type' => TType::I16,
          ),
        3 => array(
          'var' => 'limit',
          'type' => TType::I16,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_restaurant_certification_by_status_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_restaurant_certification_by_status_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_restaurant_certification_by_status_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_restaurant_certification_by_status_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::LST,
          'etype' => TType::STRUCT,
          'elem' => array(
            'type' => TType::STRUCT,
            'class' => '\ERS\TRestaurantCertification',
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_restaurant_certification_by_status_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_restaurant_certification_by_status_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_restaurant_certification_by_status_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_add_restaurant_activity_args extends TBase {
  static $_TSPEC;

  public $activity = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'activity',
          'type' => TType::STRUCT,
          'class' => '\ERS\TRestaurantActivity',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_add_restaurant_activity_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_add_restaurant_activity_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_add_restaurant_activity_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_add_restaurant_activity_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::I32,
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_add_restaurant_activity_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_add_restaurant_activity_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_add_restaurant_activity_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_update_restaurant_activity_args extends TBase {
  static $_TSPEC;

  public $activity_id = null;
  public $activity = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'activity_id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'activity',
          'type' => TType::STRUCT,
          'class' => '\ERS\TRestaurantActivity',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_update_restaurant_activity_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_update_restaurant_activity_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_update_restaurant_activity_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_update_restaurant_activity_result extends TBase {
  static $_TSPEC;

  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_update_restaurant_activity_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_update_restaurant_activity_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_update_restaurant_activity_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_participatable_restaurant_activity_ids_args extends TBase {
  static $_TSPEC;

  public $restaurant_id = null;
  public $activity_type = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'restaurant_id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'activity_type',
          'type' => TType::I16,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_participatable_restaurant_activity_ids_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_participatable_restaurant_activity_ids_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_participatable_restaurant_activity_ids_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_participatable_restaurant_activity_ids_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_participatable_restaurant_activity_ids_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_participatable_restaurant_activity_ids_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_participatable_restaurant_activity_ids_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_participate_restaurant_activity_args extends TBase {
  static $_TSPEC;

  public $restaurant_id = null;
  public $activity_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'restaurant_id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'activity_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_participate_restaurant_activity_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_participate_restaurant_activity_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_participate_restaurant_activity_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_participate_restaurant_activity_result extends TBase {
  static $_TSPEC;

  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_participate_restaurant_activity_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_participate_restaurant_activity_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_participate_restaurant_activity_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_quit_restaurant_activity_args extends TBase {
  static $_TSPEC;

  public $restaurant_id = null;
  public $activity_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'restaurant_id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'activity_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_quit_restaurant_activity_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_quit_restaurant_activity_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_quit_restaurant_activity_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_quit_restaurant_activity_result extends TBase {
  static $_TSPEC;

  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_quit_restaurant_activity_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_quit_restaurant_activity_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_quit_restaurant_activity_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_restaurant_activity_args extends TBase {
  static $_TSPEC;

  public $activity_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'activity_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_restaurant_activity_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_restaurant_activity_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_restaurant_activity_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_restaurant_activity_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::STRUCT,
          'class' => '\ERS\TRestaurantActivity',
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_restaurant_activity_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_restaurant_activity_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_restaurant_activity_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_mget_restaurant_activity_args extends TBase {
  static $_TSPEC;

  public $activity_ids = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'activity_ids',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_mget_restaurant_activity_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_mget_restaurant_activity_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_mget_restaurant_activity_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_mget_restaurant_activity_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::LST,
          'etype' => TType::STRUCT,
          'elem' => array(
            'type' => TType::STRUCT,
            'class' => '\ERS\TRestaurantActivity',
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_mget_restaurant_activity_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_mget_restaurant_activity_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_mget_restaurant_activity_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_restaurant_activity_by_restaurant_args extends TBase {
  static $_TSPEC;

  public $restaurant_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'restaurant_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_restaurant_activity_by_restaurant_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_restaurant_activity_by_restaurant_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_restaurant_activity_by_restaurant_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_restaurant_activity_by_restaurant_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::LST,
          'etype' => TType::STRUCT,
          'elem' => array(
            'type' => TType::STRUCT,
            'class' => '\ERS\TRestaurantActivity',
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_restaurant_activity_by_restaurant_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_restaurant_activity_by_restaurant_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_restaurant_activity_by_restaurant_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_javis_query_restaurant_activity_by_restaurant_args extends TBase {
  static $_TSPEC;

  public $restaurant_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'restaurant_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_javis_query_restaurant_activity_by_restaurant_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_javis_query_restaurant_activity_by_restaurant_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_javis_query_restaurant_activity_by_restaurant_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_javis_query_restaurant_activity_by_restaurant_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::LST,
          'etype' => TType::STRUCT,
          'elem' => array(
            'type' => TType::STRUCT,
            'class' => '\ERS\TRestaurantActivity',
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_javis_query_restaurant_activity_by_restaurant_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_javis_query_restaurant_activity_by_restaurant_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_javis_query_restaurant_activity_by_restaurant_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_restaurant_activity_for_admin_args extends TBase {
  static $_TSPEC;

  public $query_struct = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'query_struct',
          'type' => TType::STRUCT,
          'class' => '\ERS\TRestaurantActivityQuery',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_restaurant_activity_for_admin_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_restaurant_activity_for_admin_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_restaurant_activity_for_admin_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_restaurant_activity_for_admin_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::LST,
          'etype' => TType::STRUCT,
          'elem' => array(
            'type' => TType::STRUCT,
            'class' => '\ERS\TRestaurantActivity',
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_restaurant_activity_for_admin_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_restaurant_activity_for_admin_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_restaurant_activity_for_admin_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_restaurant_activity_map_group_by_type_args extends TBase {
  static $_TSPEC;

  public $restaurant_ids = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'restaurant_ids',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_restaurant_activity_map_group_by_type_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_restaurant_activity_map_group_by_type_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_restaurant_activity_map_group_by_type_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_restaurant_activity_map_group_by_type_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::MAP,
          'ktype' => TType::I16,
          'vtype' => TType::LST,
          'key' => array(
            'type' => TType::I16,
          ),
          'val' => array(
            'type' => TType::LST,
            'etype' => TType::I32,
            'elem' => array(
              'type' => TType::I32,
              ),
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_restaurant_activity_map_group_by_type_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_restaurant_activity_map_group_by_type_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_restaurant_activity_map_group_by_type_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_restaurant_activity_with_restaurant_ids_args extends TBase {
  static $_TSPEC;

  public $restaurant_ids = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'restaurant_ids',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_restaurant_activity_with_restaurant_ids_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_restaurant_activity_with_restaurant_ids_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_restaurant_activity_with_restaurant_ids_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_restaurant_activity_with_restaurant_ids_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::LST,
          'etype' => TType::STRUCT,
          'elem' => array(
            'type' => TType::STRUCT,
            'class' => '\ERS\TCRestaurantActivityWithRestaurantIds',
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_restaurant_activity_with_restaurant_ids_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_restaurant_activity_with_restaurant_ids_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_restaurant_activity_with_restaurant_ids_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_save_amended_poi_args extends TBase {
  static $_TSPEC;

  public $id = null;
  public $poi = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'poi',
          'type' => TType::STRUCT,
          'class' => '\ERS\TAmendedPoi',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_save_amended_poi_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_save_amended_poi_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_save_amended_poi_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_save_amended_poi_result extends TBase {
  static $_TSPEC;

  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_save_amended_poi_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_save_amended_poi_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_save_amended_poi_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_amended_poi_args extends TBase {
  static $_TSPEC;

  public $city_id = null;
  public $keyword = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'city_id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'keyword',
          'type' => TType::STRING,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_amended_poi_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_amended_poi_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_amended_poi_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_amended_poi_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::LST,
          'etype' => TType::STRUCT,
          'elem' => array(
            'type' => TType::STRUCT,
            'class' => '\ERS\TAmendedPoi',
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_amended_poi_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_amended_poi_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_amended_poi_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_free_gift_activity_attribute_name_by_category_args extends TBase {
  static $_TSPEC;

  public $category_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'category_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_free_gift_activity_attribute_name_by_category_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_free_gift_activity_attribute_name_by_category_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_free_gift_activity_attribute_name_by_category_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_free_gift_activity_attribute_name_by_category_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::LST,
          'etype' => TType::STRING,
          'elem' => array(
            'type' => TType::STRING,
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_free_gift_activity_attribute_name_by_category_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_free_gift_activity_attribute_name_by_category_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_free_gift_activity_attribute_name_by_category_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_food_category_with_foods_args extends TBase {
  static $_TSPEC;

  public $restaurant_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'restaurant_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_food_category_with_foods_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_food_category_with_foods_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_food_category_with_foods_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_food_category_with_foods_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::LST,
          'etype' => TType::STRUCT,
          'elem' => array(
            'type' => TType::STRUCT,
            'class' => '\ERS\TCFoodCategoryWithFoods',
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_food_category_with_foods_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_food_category_with_foods_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_food_category_with_foods_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_recent_removed_foods_args extends TBase {
  static $_TSPEC;

  public $restaurant_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'restaurant_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_recent_removed_foods_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_recent_removed_foods_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_recent_removed_foods_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_recent_removed_foods_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::STRING,
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_recent_removed_foods_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_recent_removed_foods_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_recent_removed_foods_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_gum_food_by_restaurant_args extends TBase {
  static $_TSPEC;

  public $restaurant_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'restaurant_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_gum_food_by_restaurant_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_gum_food_by_restaurant_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_gum_food_by_restaurant_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_gum_food_by_restaurant_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::LST,
          'etype' => TType::STRUCT,
          'elem' => array(
            'type' => TType::STRUCT,
            'class' => '\ERS\TFood',
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_gum_food_by_restaurant_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_gum_food_by_restaurant_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_gum_food_by_restaurant_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_restaurant_promotion_args extends TBase {
  static $_TSPEC;

  public $promotion_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'promotion_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_restaurant_promotion_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_restaurant_promotion_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_restaurant_promotion_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_restaurant_promotion_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::STRUCT,
          'class' => '\ERS\TRestaurantPromotion',
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_restaurant_promotion_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_restaurant_promotion_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_restaurant_promotion_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_restaurant_promotion_args extends TBase {
  static $_TSPEC;

  public $restaurant_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'restaurant_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_restaurant_promotion_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_restaurant_promotion_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_restaurant_promotion_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_restaurant_promotion_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::LST,
          'etype' => TType::STRUCT,
          'elem' => array(
            'type' => TType::STRUCT,
            'class' => '\ERS\TRestaurantPromotion',
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_restaurant_promotion_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_restaurant_promotion_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_restaurant_promotion_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_master_get_changelog_restaurant_args extends TBase {
  static $_TSPEC;

  public $cl_rst_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'cl_rst_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_master_get_changelog_restaurant_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_master_get_changelog_restaurant_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_master_get_changelog_restaurant_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_master_get_changelog_restaurant_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::STRUCT,
          'class' => '\ERS\TChangelogRestaurant',
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_master_get_changelog_restaurant_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_master_get_changelog_restaurant_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_master_get_changelog_restaurant_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_master_get_changelog_region_args extends TBase {
  static $_TSPEC;

  public $cl_region_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'cl_region_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_master_get_changelog_region_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_master_get_changelog_region_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_master_get_changelog_region_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_master_get_changelog_region_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::STRUCT,
          'class' => '\ERS\TChangelogRegion',
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_master_get_changelog_region_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_master_get_changelog_region_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_master_get_changelog_region_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_master_get_deletelog_region_args extends TBase {
  static $_TSPEC;

  public $dl_region_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'dl_region_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_master_get_deletelog_region_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_master_get_deletelog_region_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_master_get_deletelog_region_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_master_get_deletelog_region_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::STRUCT,
          'class' => '\ERS\TDeletelogRegion',
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_master_get_deletelog_region_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_master_get_deletelog_region_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_master_get_deletelog_region_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_seo_sm_place_args extends TBase {
  static $_TSPEC;

  public $query_struct = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'query_struct',
          'type' => TType::STRUCT,
          'class' => '\ERS\TSeoSmQuery',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_seo_sm_place_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_seo_sm_place_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_seo_sm_place_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_seo_sm_place_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::LST,
          'etype' => TType::STRUCT,
          'elem' => array(
            'type' => TType::STRUCT,
            'class' => '\ERS\TSeoSmPlace',
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_seo_sm_place_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_seo_sm_place_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_seo_sm_place_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_seo_sm_restaurant_args extends TBase {
  static $_TSPEC;

  public $query_struct = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'query_struct',
          'type' => TType::STRUCT,
          'class' => '\ERS\TSeoSmQuery',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_seo_sm_restaurant_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_seo_sm_restaurant_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_seo_sm_restaurant_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_seo_sm_restaurant_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::LST,
          'etype' => TType::STRUCT,
          'elem' => array(
            'type' => TType::STRUCT,
            'class' => '\ERS\TSeoSmRestaurant',
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_seo_sm_restaurant_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_seo_sm_restaurant_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_seo_sm_restaurant_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_seo_sm_city_index_args extends TBase {
  static $_TSPEC;

  public $query_struct = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'query_struct',
          'type' => TType::STRUCT,
          'class' => '\ERS\TSeoSmCityIndexQuery',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_seo_sm_city_index_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_seo_sm_city_index_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_seo_sm_city_index_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_seo_sm_city_index_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::LST,
          'etype' => TType::STRUCT,
          'elem' => array(
            'type' => TType::STRUCT,
            'class' => '\ERS\TSeoSmCityIndex',
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_seo_sm_city_index_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_seo_sm_city_index_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_seo_sm_city_index_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_seo_sm_index_by_name_args extends TBase {
  static $_TSPEC;

  public $name = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'name',
          'type' => TType::STRING,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_seo_sm_index_by_name_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_seo_sm_index_by_name_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_seo_sm_index_by_name_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_seo_sm_index_by_name_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::STRUCT,
          'class' => '\ERS\TSeoSmIndex',
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_seo_sm_index_by_name_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_seo_sm_index_by_name_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_seo_sm_index_by_name_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_saas_status_args extends TBase {
  static $_TSPEC;

  public $restaurant_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'restaurant_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_saas_status_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_saas_status_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_saas_status_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_saas_status_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::STRUCT,
          'class' => '\ERS\TSaasStatus',
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_saas_status_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_saas_status_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_saas_status_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_count_operation_remind_args extends TBase {
  static $_TSPEC;

  public $query_struct = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'query_struct',
          'type' => TType::STRUCT,
          'class' => '\ERS\TOperationRemindQuery',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_count_operation_remind_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_count_operation_remind_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_count_operation_remind_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_count_operation_remind_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::I32,
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_count_operation_remind_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_count_operation_remind_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_count_operation_remind_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_operation_remind_args extends TBase {
  static $_TSPEC;

  public $query_struct = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'query_struct',
          'type' => TType::STRUCT,
          'class' => '\ERS\TOperationRemindQuery',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_operation_remind_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_operation_remind_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_operation_remind_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_operation_remind_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::LST,
          'etype' => TType::STRUCT,
          'elem' => array(
            'type' => TType::STRUCT,
            'class' => '\ERS\TCOperationRemind',
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_operation_remind_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_operation_remind_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_operation_remind_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_quick_message_args extends TBase {
  static $_TSPEC;

  public $quick_message_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'quick_message_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_quick_message_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_quick_message_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_quick_message_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_quick_message_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::STRUCT,
          'class' => '\ERS\TQuickMessage',
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_quick_message_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_quick_message_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_quick_message_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_friend_link_args extends TBase {
  static $_TSPEC;

  public $friend_link_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'friend_link_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_friend_link_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_friend_link_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_friend_link_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_friend_link_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::STRUCT,
          'class' => '\ERS\TFriendLink',
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_friend_link_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_friend_link_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_friend_link_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_friend_link_args extends TBase {
  static $_TSPEC;


  public function __construct() {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        );
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_friend_link_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_friend_link_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_friend_link_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_friend_link_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::LST,
          'etype' => TType::STRUCT,
          'elem' => array(
            'type' => TType::STRUCT,
            'class' => '\ERS\TFriendLink',
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_friend_link_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_friend_link_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_friend_link_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_count_favored_user_args extends TBase {
  static $_TSPEC;

  public $restaurant_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'restaurant_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_count_favored_user_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_count_favored_user_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_count_favored_user_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_count_favored_user_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::I32,
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_count_favored_user_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_count_favored_user_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_count_favored_user_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_mget_favored_user_args extends TBase {
  static $_TSPEC;

  public $restaurant_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'restaurant_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_mget_favored_user_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_mget_favored_user_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_mget_favored_user_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_mget_favored_user_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::LST,
          'etype' => TType::STRUCT,
          'elem' => array(
            'type' => TType::STRUCT,
            'class' => '\ERS\TCFavoredUser',
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_mget_favored_user_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_mget_favored_user_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_mget_favored_user_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_area_by_square_args extends TBase {
  static $_TSPEC;

  public $lt_latitude = null;
  public $lt_longitude = null;
  public $rb_latitude = null;
  public $rb_longitude = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'lt_latitude',
          'type' => TType::DOUBLE,
          ),
        2 => array(
          'var' => 'lt_longitude',
          'type' => TType::DOUBLE,
          ),
        3 => array(
          'var' => 'rb_latitude',
          'type' => TType::DOUBLE,
          ),
        4 => array(
          'var' => 'rb_longitude',
          'type' => TType::DOUBLE,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_area_by_square_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_area_by_square_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_area_by_square_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_area_by_square_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::LST,
          'etype' => TType::STRUCT,
          'elem' => array(
            'type' => TType::STRUCT,
            'class' => '\ERS\TArea',
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_area_by_square_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_area_by_square_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_area_by_square_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_evaluation_args extends TBase {
  static $_TSPEC;

  public $restaurant_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'restaurant_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_evaluation_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_evaluation_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_evaluation_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_evaluation_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::STRUCT,
          'class' => '\ERS\TRestaurantEvaluation',
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_evaluation_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_evaluation_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_evaluation_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_all_performance_assessment_block_args extends TBase {
  static $_TSPEC;


  public function __construct() {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        );
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_all_performance_assessment_block_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_all_performance_assessment_block_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_all_performance_assessment_block_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_all_performance_assessment_block_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::LST,
          'etype' => TType::STRUCT,
          'elem' => array(
            'type' => TType::STRUCT,
            'class' => '\ERS\TPerformanceAssessmentBlock',
            ),
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_all_performance_assessment_block_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_all_performance_assessment_block_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_all_performance_assessment_block_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_add_performance_assessment_block_args extends TBase {
  static $_TSPEC;

  public $pab = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'pab',
          'type' => TType::STRUCT,
          'class' => '\ERS\TPerformanceAssessmentBlock',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_add_performance_assessment_block_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_add_performance_assessment_block_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_add_performance_assessment_block_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_add_performance_assessment_block_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::I32,
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_add_performance_assessment_block_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_add_performance_assessment_block_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_add_performance_assessment_block_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_delete_performance_assessment_block_args extends TBase {
  static $_TSPEC;

  public $pa_block_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'pa_block_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_delete_performance_assessment_block_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_delete_performance_assessment_block_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_delete_performance_assessment_block_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_delete_performance_assessment_block_result extends TBase {
  static $_TSPEC;

  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_delete_performance_assessment_block_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_delete_performance_assessment_block_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_delete_performance_assessment_block_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_close_restaurant_whitelist_args extends TBase {
  static $_TSPEC;


  public function __construct() {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        );
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_close_restaurant_whitelist_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_close_restaurant_whitelist_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_close_restaurant_whitelist_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_query_close_restaurant_whitelist_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::STRUCT,
          'class' => '\ERS\TWhitelist',
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_query_close_restaurant_whitelist_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_query_close_restaurant_whitelist_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_query_close_restaurant_whitelist_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_save_close_restaurant_whitelist_args extends TBase {
  static $_TSPEC;

  public $whitelist_struct = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'whitelist_struct',
          'type' => TType::STRUCT,
          'class' => '\ERS\TWhitelist',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_save_close_restaurant_whitelist_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_save_close_restaurant_whitelist_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_save_close_restaurant_whitelist_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_save_close_restaurant_whitelist_result extends TBase {
  static $_TSPEC;

  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_save_close_restaurant_whitelist_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_save_close_restaurant_whitelist_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_save_close_restaurant_whitelist_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_restaurant_setup_step_args extends TBase {
  static $_TSPEC;

  public $restaurant_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'restaurant_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_restaurant_setup_step_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_restaurant_setup_step_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_restaurant_setup_step_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_restaurant_setup_step_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::I32,
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_restaurant_setup_step_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_restaurant_setup_step_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_restaurant_setup_step_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_set_restaurant_setup_step_args extends TBase {
  static $_TSPEC;

  public $restaurant_id = null;
  public $step = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'restaurant_id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'step',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_set_restaurant_setup_step_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_set_restaurant_setup_step_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_set_restaurant_setup_step_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_set_restaurant_setup_step_result extends TBase {
  static $_TSPEC;

  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_set_restaurant_setup_step_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_set_restaurant_setup_step_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_set_restaurant_setup_step_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_short_url_args extends TBase {
  static $_TSPEC;

  public $origin_url = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'origin_url',
          'type' => TType::STRING,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_short_url_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_short_url_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_short_url_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_short_url_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::STRING,
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_short_url_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_short_url_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_short_url_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_is_restaurant_mobile_location_match_args extends TBase {
  static $_TSPEC;

  public $restaurant_id = null;
  public $mobile = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'restaurant_id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'mobile',
          'type' => TType::STRING,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_is_restaurant_mobile_location_match_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_is_restaurant_mobile_location_match_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_is_restaurant_mobile_location_match_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_is_restaurant_mobile_location_match_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::BOOL,
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_is_restaurant_mobile_location_match_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_is_restaurant_mobile_location_match_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_is_restaurant_mobile_location_match_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_origin_url_args extends TBase {
  static $_TSPEC;

  public $short_url_hash = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'short_url_hash',
          'type' => TType::STRING,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_origin_url_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_origin_url_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_origin_url_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_origin_url_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::STRING,
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_origin_url_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_origin_url_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_origin_url_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_napos_env_args extends TBase {
  static $_TSPEC;

  public $restaurant_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'restaurant_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_napos_env_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_napos_env_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_napos_env_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_get_napos_env_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::STRUCT,
          'class' => '\ERS\TNaposEnv',
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_get_napos_env_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_get_napos_env_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_get_napos_env_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_set_napos_env_args extends TBase {
  static $_TSPEC;

  public $restaurant_id = null;
  public $key = null;
  public $value = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'restaurant_id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'key',
          'type' => TType::STRING,
          ),
        3 => array(
          'var' => 'value',
          'type' => TType::STRING,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_set_napos_env_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_set_napos_env_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_set_napos_env_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_set_napos_env_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::BOOL,
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_set_napos_env_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_set_napos_env_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_set_napos_env_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_signal_post_make_order_args extends TBase {
  static $_TSPEC;

  public $order_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'order_id',
          'type' => TType::I64,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_signal_post_make_order_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_signal_post_make_order_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_signal_post_make_order_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_signal_post_make_order_result extends TBase {
  static $_TSPEC;

  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_signal_post_make_order_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_signal_post_make_order_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_signal_post_make_order_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_signal_post_process_order_args extends TBase {
  static $_TSPEC;

  public $order_process_record_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'order_process_record_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_signal_post_process_order_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_signal_post_process_order_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_signal_post_process_order_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_signal_post_process_order_result extends TBase {
  static $_TSPEC;

  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_signal_post_process_order_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_signal_post_process_order_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_signal_post_process_order_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_signal_update_restaurant_args extends TBase {
  static $_TSPEC;

  public $restaurant_ids = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'restaurant_ids',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_signal_update_restaurant_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_signal_update_restaurant_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_signal_update_restaurant_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_signal_update_restaurant_result extends TBase {
  static $_TSPEC;

  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_signal_update_restaurant_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_signal_update_restaurant_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_signal_update_restaurant_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_signal_update_food_args extends TBase {
  static $_TSPEC;

  public $food_ids = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'food_ids',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_signal_update_food_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_signal_update_food_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_signal_update_food_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_signal_update_food_result extends TBase {
  static $_TSPEC;

  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_signal_update_food_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_signal_update_food_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_signal_update_food_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_signal_update_food_category_args extends TBase {
  static $_TSPEC;

  public $food_category_ids = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'food_category_ids',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_signal_update_food_category_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_signal_update_food_category_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_signal_update_food_category_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_signal_update_food_category_result extends TBase {
  static $_TSPEC;

  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_signal_update_food_category_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_signal_update_food_category_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_signal_update_food_category_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_signal_menu_clear_cache_args extends TBase {
  static $_TSPEC;

  public $restaurant_ids = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'restaurant_ids',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_signal_menu_clear_cache_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_signal_menu_clear_cache_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_signal_menu_clear_cache_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_signal_menu_clear_cache_result extends TBase {
  static $_TSPEC;

  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_signal_menu_clear_cache_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_signal_menu_clear_cache_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_signal_menu_clear_cache_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_signal_update_menu_cache_args extends TBase {
  static $_TSPEC;

  public $restaurant_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'restaurant_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_signal_update_menu_cache_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_signal_update_menu_cache_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_signal_update_menu_cache_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_signal_update_menu_cache_result extends TBase {
  static $_TSPEC;

  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_signal_update_menu_cache_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_signal_update_menu_cache_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_signal_update_menu_cache_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_signal_update_food_activity_args extends TBase {
  static $_TSPEC;

  public $food_activity_ids = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'food_activity_ids',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_signal_update_food_activity_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_signal_update_food_activity_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_signal_update_food_activity_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_signal_update_food_activity_result extends TBase {
  static $_TSPEC;

  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_signal_update_food_activity_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_signal_update_food_activity_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_signal_update_food_activity_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_signal_post_process_food_ugc_image_args extends TBase {
  static $_TSPEC;

  public $process_food_ugc_image_pr_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'process_food_ugc_image_pr_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_signal_post_process_food_ugc_image_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_signal_post_process_food_ugc_image_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_signal_post_process_food_ugc_image_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_signal_post_process_food_ugc_image_result extends TBase {
  static $_TSPEC;

  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_signal_post_process_food_ugc_image_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_signal_post_process_food_ugc_image_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_signal_post_process_food_ugc_image_result', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_any_support_for_ol_payment_args extends TBase {
  static $_TSPEC;

  public $restaurant_ids = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'restaurant_ids',
          'type' => TType::LST,
          'etype' => TType::I32,
          'elem' => array(
            'type' => TType::I32,
            ),
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_any_support_for_ol_payment_args';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_any_support_for_ol_payment_args', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_any_support_for_ol_payment_args', self::$_TSPEC, $output);
  }
}

class ElemeRestaurantService_any_support_for_ol_payment_result extends TBase {
  static $_TSPEC;

  public $success = null;
  public $user_exception = null;
  public $system_exception = null;
  public $unknown_exception = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        0 => array(
          'var' => 'success',
          'type' => TType::BOOL,
          ),
        1 => array(
          'var' => 'user_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUserException',
          ),
        2 => array(
          'var' => 'system_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSSystemException',
          ),
        3 => array(
          'var' => 'unknown_exception',
          'type' => TType::STRUCT,
          'class' => '\ERS\ERSUnknownException',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ElemeRestaurantService_any_support_for_ol_payment_result';
  }

  public function read($input)
  {
    return $this->_read('ElemeRestaurantService_any_support_for_ol_payment_result', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ElemeRestaurantService_any_support_for_ol_payment_result', self::$_TSPEC, $output);
  }
}


