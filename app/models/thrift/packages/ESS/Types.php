<?php
namespace ESS;

/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
use Thrift\Base\TBase;
use Thrift\Type\TType;
use Thrift\Type\TMessageType;
use Thrift\Exception\TException;
use Thrift\Exception\TProtocolException;
use Thrift\Protocol\TProtocol;
use Thrift\Protocol\TBinaryProtocolAccelerated;
use Thrift\Exception\TApplicationException;


final class ESSErrorCode {
  const UNKNOWN_ERROR = 0;
  const EOS_CLIENT_ERROR = 1;
  const ERS_CLIENT_ERROR = 2;
  const SMS_CLIENT_ERROR = 3;
  const TASK_REVOKE = 4;
  const DATABASE_ERROR = 5;
  static public $__names = array(
    0 => 'UNKNOWN_ERROR',
    1 => 'EOS_CLIENT_ERROR',
    2 => 'ERS_CLIENT_ERROR',
    3 => 'SMS_CLIENT_ERROR',
    4 => 'TASK_REVOKE',
    5 => 'DATABASE_ERROR',
  );
}

class ESSUserException extends TException {
  static $_TSPEC;

  public $error_code = null;
  public $error_name = null;
  public $message = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'error_code',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'error_name',
          'type' => TType::STRING,
          ),
        3 => array(
          'var' => 'message',
          'type' => TType::STRING,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ESSUserException';
  }

  public function read($input)
  {
    return $this->_read('ESSUserException', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ESSUserException', self::$_TSPEC, $output);
  }
}

class ESSSystemException extends TException {
  static $_TSPEC;

  public $error_code = null;
  public $error_name = null;
  public $message = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'error_code',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'error_name',
          'type' => TType::STRING,
          ),
        3 => array(
          'var' => 'message',
          'type' => TType::STRING,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ESSSystemException';
  }

  public function read($input)
  {
    return $this->_read('ESSSystemException', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ESSSystemException', self::$_TSPEC, $output);
  }
}

class ESSUnknownException extends TException {
  static $_TSPEC;

  public $error_code = null;
  public $error_name = null;
  public $message = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'error_code',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'error_name',
          'type' => TType::STRING,
          ),
        3 => array(
          'var' => 'message',
          'type' => TType::STRING,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'ESSUnknownException';
  }

  public function read($input)
  {
    return $this->_read('ESSUnknownException', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('ESSUnknownException', self::$_TSPEC, $output);
  }
}


