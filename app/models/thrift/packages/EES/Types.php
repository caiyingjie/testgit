<?php
namespace EES;

/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
use Thrift\Base\TBase;
use Thrift\Type\TType;
use Thrift\Type\TMessageType;
use Thrift\Exception\TException;
use Thrift\Exception\TProtocolException;
use Thrift\Protocol\TProtocol;
use Thrift\Protocol\TBinaryProtocolAccelerated;
use Thrift\Exception\TApplicationException;


final class AppMessageConst {
  const DEVICE_TYPE_IOS = 1;
  const DEVICE_TYPE_ANDROID = 2;
  const MSG_TYPE_NONE = 0;
  const MSG_TYPE_ORDER = 1;
  const MSG_TYPE_UPDATE_APP = 1;
  const MSG_TYPE_SYNC_ORDER = 2;
  const PUSH_TYPE_NONE = 0;
  const PUSH_TYPE_NOTIFY = 1;
  const PUSH_TYPE_TRANSMISSION = 2;
  const TRANS_TYPE_NONE = 0;
  const TRANS_TYPE_OPENAPP = 1;
  const TRANS_TYPE_CUSTOME = 2;
  static public $__names = array(
    1 => 'DEVICE_TYPE_IOS',
    2 => 'DEVICE_TYPE_ANDROID',
    0 => 'MSG_TYPE_NONE',
    1 => 'MSG_TYPE_ORDER',
    1 => 'MSG_TYPE_UPDATE_APP',
    2 => 'MSG_TYPE_SYNC_ORDER',
    0 => 'PUSH_TYPE_NONE',
    1 => 'PUSH_TYPE_NOTIFY',
    2 => 'PUSH_TYPE_TRANSMISSION',
    0 => 'TRANS_TYPE_NONE',
    1 => 'TRANS_TYPE_OPENAPP',
    2 => 'TRANS_TYPE_CUSTOME',
  );
}

final class EESErrorCode {
  const UNKNOWN_ERROR = 0;
  const EMAIL_NOT_FOUND = 1;
  const INVALID_EMAIL_ADDRESS = 2;
  const ANDROID_MESSAGE_NOT_FOUND = 3;
  const IOS_MESSAGE_NOT_FOUND = 4;
  const PUSH_TIMEOUT = 5;
  const SEND_TIMEOUT = 6;
  const DATABASE_ERROR = 7;
  const SEND_EMAIL_ERROR = 8;
  static public $__names = array(
    0 => 'UNKNOWN_ERROR',
    1 => 'EMAIL_NOT_FOUND',
    2 => 'INVALID_EMAIL_ADDRESS',
    3 => 'ANDROID_MESSAGE_NOT_FOUND',
    4 => 'IOS_MESSAGE_NOT_FOUND',
    5 => 'PUSH_TIMEOUT',
    6 => 'SEND_TIMEOUT',
    7 => 'DATABASE_ERROR',
    8 => 'SEND_EMAIL_ERROR',
  );
}

class TEmail extends TBase {
  static $_TSPEC;

  public $id = null;
  public $sender = null;
  public $receiver = null;
  public $title = null;
  public $content = null;
  public $created_at = null;
  public $sent_at = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'sender',
          'type' => TType::STRING,
          ),
        3 => array(
          'var' => 'receiver',
          'type' => TType::STRING,
          ),
        4 => array(
          'var' => 'title',
          'type' => TType::STRING,
          ),
        5 => array(
          'var' => 'content',
          'type' => TType::STRING,
          ),
        6 => array(
          'var' => 'created_at',
          'type' => TType::I64,
          ),
        7 => array(
          'var' => 'sent_at',
          'type' => TType::I64,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TEmail';
  }

  public function read($input)
  {
    return $this->_read('TEmail', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TEmail', self::$_TSPEC, $output);
  }
}

class EESUserException extends TException {
  static $_TSPEC;

  public $error_code = null;
  public $error_name = null;
  public $message = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'error_code',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'error_name',
          'type' => TType::STRING,
          ),
        3 => array(
          'var' => 'message',
          'type' => TType::STRING,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'EESUserException';
  }

  public function read($input)
  {
    return $this->_read('EESUserException', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('EESUserException', self::$_TSPEC, $output);
  }
}

class EESSystemException extends TException {
  static $_TSPEC;

  public $error_code = null;
  public $error_name = null;
  public $message = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'error_code',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'error_name',
          'type' => TType::STRING,
          ),
        3 => array(
          'var' => 'message',
          'type' => TType::STRING,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'EESSystemException';
  }

  public function read($input)
  {
    return $this->_read('EESSystemException', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('EESSystemException', self::$_TSPEC, $output);
  }
}

class EESUnknownException extends TException {
  static $_TSPEC;

  public $error_code = null;
  public $error_name = null;
  public $message = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'error_code',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'error_name',
          'type' => TType::STRING,
          ),
        3 => array(
          'var' => 'message',
          'type' => TType::STRING,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'EESUnknownException';
  }

  public function read($input)
  {
    return $this->_read('EESUnknownException', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('EESUnknownException', self::$_TSPEC, $output);
  }
}


