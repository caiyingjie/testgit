<?php
namespace OAS;

/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
use Thrift\Base\TBase;
use Thrift\Type\TType;
use Thrift\Type\TMessageType;
use Thrift\Exception\TException;
use Thrift\Exception\TProtocolException;
use Thrift\Protocol\TProtocol;
use Thrift\Protocol\TBinaryProtocolAccelerated;
use Thrift\Exception\TApplicationException;


final class AppVersionConst {
  const TYPE_ANDROID = 1;
  const TYPE_IOS = 2;
  const TYPE_NAPOS_ANDROID = 3;
  const TYPE_NAPOS_IOS = 4;
  const TYPE_ALLERIA_ANDROID = 5;
  const TYPE_ALLERIA_IOS = 6;
  static public $__names = array(
    1 => 'TYPE_ANDROID',
    2 => 'TYPE_IOS',
    3 => 'TYPE_NAPOS_ANDROID',
    4 => 'TYPE_NAPOS_IOS',
    5 => 'TYPE_ALLERIA_ANDROID',
    6 => 'TYPE_ALLERIA_IOS',
  );
}

final class OASErrorCode {
  const UNKNOWN_ERROR = 0;
  const APPLICATION_NOT_FOUND = 1;
  const API_GROUP_NOT_FOUND = 2;
  const API_PERMISSION_NOT_FOUND = 3;
  const OPENAPI_ORDER_NOT_FOUND = 4;
  const SIGNAL_RESPONSE_ERROR = 5;
  const APP_URL_NOT_FOUND = 6;
  const EOS_CLIENT_ERROR = 7;
  const ERS_CLIENT_ERROR = 8;
  const DATABASE_ERROR = 9;
  static public $__names = array(
    0 => 'UNKNOWN_ERROR',
    1 => 'APPLICATION_NOT_FOUND',
    2 => 'API_GROUP_NOT_FOUND',
    3 => 'API_PERMISSION_NOT_FOUND',
    4 => 'OPENAPI_ORDER_NOT_FOUND',
    5 => 'SIGNAL_RESPONSE_ERROR',
    6 => 'APP_URL_NOT_FOUND',
    7 => 'EOS_CLIENT_ERROR',
    8 => 'ERS_CLIENT_ERROR',
    9 => 'DATABASE_ERROR',
  );
}

class TOpenapiApplication extends TBase {
  static $_TSPEC;

  public $id = null;
  public $developer_id = null;
  public $group_id = null;
  public $name = null;
  public $description = null;
  public $limits = null;
  public $consumer_key = null;
  public $consumer_secret = null;
  public $notify_url = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'developer_id',
          'type' => TType::I32,
          ),
        3 => array(
          'var' => 'group_id',
          'type' => TType::I32,
          ),
        4 => array(
          'var' => 'name',
          'type' => TType::STRING,
          ),
        5 => array(
          'var' => 'description',
          'type' => TType::STRING,
          ),
        6 => array(
          'var' => 'limits',
          'type' => TType::I32,
          ),
        7 => array(
          'var' => 'consumer_key',
          'type' => TType::STRING,
          ),
        8 => array(
          'var' => 'consumer_secret',
          'type' => TType::STRING,
          ),
        9 => array(
          'var' => 'notify_url',
          'type' => TType::STRING,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TOpenapiApplication';
  }

  public function read($input)
  {
    return $this->_read('TOpenapiApplication', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TOpenapiApplication', self::$_TSPEC, $output);
  }
}

class TOpenapiOrder extends TBase {
  static $_TSPEC;

  public $id = null;
  public $app_id = null;
  public $order_id = null;
  public $tp_order_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'app_id',
          'type' => TType::I32,
          ),
        3 => array(
          'var' => 'order_id',
          'type' => TType::STRING,
          ),
        4 => array(
          'var' => 'tp_order_id',
          'type' => TType::STRING,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TOpenapiOrder';
  }

  public function read($input)
  {
    return $this->_read('TOpenapiOrder', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TOpenapiOrder', self::$_TSPEC, $output);
  }
}

class TApplication extends TBase {
  static $_TSPEC;

  public $id = null;
  public $limits = null;
  public $consumer_key = null;
  public $consumer_secret = null;
  public $developer_id = null;
  public $name = null;
  public $description = null;
  public $group_id = null;
  public $notify_url = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'limits',
          'type' => TType::I32,
          ),
        3 => array(
          'var' => 'consumer_key',
          'type' => TType::STRING,
          ),
        4 => array(
          'var' => 'consumer_secret',
          'type' => TType::STRING,
          ),
        5 => array(
          'var' => 'developer_id',
          'type' => TType::I32,
          ),
        6 => array(
          'var' => 'name',
          'type' => TType::STRING,
          ),
        7 => array(
          'var' => 'description',
          'type' => TType::STRING,
          ),
        8 => array(
          'var' => 'group_id',
          'type' => TType::I32,
          ),
        9 => array(
          'var' => 'notify_url',
          'type' => TType::STRING,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TApplication';
  }

  public function read($input)
  {
    return $this->_read('TApplication', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TApplication', self::$_TSPEC, $output);
  }
}

class TApiGroup extends TBase {
  static $_TSPEC;

  public $id = null;
  public $name = null;
  public $description = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'name',
          'type' => TType::STRING,
          ),
        3 => array(
          'var' => 'description',
          'type' => TType::STRING,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TApiGroup';
  }

  public function read($input)
  {
    return $this->_read('TApiGroup', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TApiGroup', self::$_TSPEC, $output);
  }
}

class TApiPermission extends TBase {
  static $_TSPEC;

  public $id = null;
  public $name = null;
  public $description = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'name',
          'type' => TType::STRING,
          ),
        3 => array(
          'var' => 'description',
          'type' => TType::STRING,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TApiPermission';
  }

  public function read($input)
  {
    return $this->_read('TApiPermission', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TApiPermission', self::$_TSPEC, $output);
  }
}

class TApiGroupPermission extends TBase {
  static $_TSPEC;

  public $id = null;
  public $group_id = null;
  public $permission_id = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'group_id',
          'type' => TType::I32,
          ),
        3 => array(
          'var' => 'permission_id',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TApiGroupPermission';
  }

  public function read($input)
  {
    return $this->_read('TApiGroupPermission', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TApiGroupPermission', self::$_TSPEC, $output);
  }
}

class TAppVersion extends TBase {
  static $_TSPEC;

  public $id = null;
  public $version = null;
  public $version_name = null;
  public $size = null;
  public $time = null;
  public $type = null;
  public $url = null;
  public $description = null;
  public $level = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'version',
          'type' => TType::I16,
          ),
        3 => array(
          'var' => 'version_name',
          'type' => TType::STRING,
          ),
        4 => array(
          'var' => 'size',
          'type' => TType::DOUBLE,
          ),
        5 => array(
          'var' => 'time',
          'type' => TType::STRING,
          ),
        6 => array(
          'var' => 'type',
          'type' => TType::I16,
          ),
        7 => array(
          'var' => 'url',
          'type' => TType::STRING,
          ),
        8 => array(
          'var' => 'description',
          'type' => TType::STRING,
          ),
        9 => array(
          'var' => 'level',
          'type' => TType::I16,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TAppVersion';
  }

  public function read($input)
  {
    return $this->_read('TAppVersion', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TAppVersion', self::$_TSPEC, $output);
  }
}

class TApiAppBind extends TBase {
  static $_TSPEC;

  public $id = null;
  public $app_id = null;
  public $bind_id = null;
  public $bind_type = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'app_id',
          'type' => TType::I32,
          ),
        3 => array(
          'var' => 'bind_id',
          'type' => TType::I32,
          ),
        4 => array(
          'var' => 'bind_type',
          'type' => TType::STRING,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TApiAppBind';
  }

  public function read($input)
  {
    return $this->_read('TApiAppBind', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TApiAppBind', self::$_TSPEC, $output);
  }
}

class TApiAppBindQuery extends TBase {
  static $_TSPEC;

  public $limit = null;
  public $offset = null;
  public $app_id = null;
  public $bind_id = null;
  public $bind_type = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'limit',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'offset',
          'type' => TType::I32,
          ),
        3 => array(
          'var' => 'app_id',
          'type' => TType::I32,
          ),
        4 => array(
          'var' => 'bind_id',
          'type' => TType::I32,
          ),
        5 => array(
          'var' => 'bind_type',
          'type' => TType::STRING,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TApiAppBindQuery';
  }

  public function read($input)
  {
    return $this->_read('TApiAppBindQuery', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TApiAppBindQuery', self::$_TSPEC, $output);
  }
}

class OASUserException extends TException {
  static $_TSPEC;

  public $error_code = null;
  public $error_name = null;
  public $message = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'error_code',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'error_name',
          'type' => TType::STRING,
          ),
        3 => array(
          'var' => 'message',
          'type' => TType::STRING,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'OASUserException';
  }

  public function read($input)
  {
    return $this->_read('OASUserException', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('OASUserException', self::$_TSPEC, $output);
  }
}

class OASSystemException extends TException {
  static $_TSPEC;

  public $error_code = null;
  public $error_name = null;
  public $message = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'error_code',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'error_name',
          'type' => TType::STRING,
          ),
        3 => array(
          'var' => 'message',
          'type' => TType::STRING,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'OASSystemException';
  }

  public function read($input)
  {
    return $this->_read('OASSystemException', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('OASSystemException', self::$_TSPEC, $output);
  }
}

class OASUnknownException extends TException {
  static $_TSPEC;

  public $error_code = null;
  public $error_name = null;
  public $message = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'error_code',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'error_name',
          'type' => TType::STRING,
          ),
        3 => array(
          'var' => 'message',
          'type' => TType::STRING,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'OASUnknownException';
  }

  public function read($input)
  {
    return $this->_read('OASUnknownException', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('OASUnknownException', self::$_TSPEC, $output);
  }
}

$GLOBALS['oas_CONSTANTS']['DEFAULT_LIST_SIZE'] = 20;

$GLOBALS['oas_CONSTANTS']['MAX_LIST_SIZE'] = 200;


