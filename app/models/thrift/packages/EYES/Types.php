<?php
namespace EYES;

/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
use Thrift\Base\TBase;
use Thrift\Type\TType;
use Thrift\Type\TMessageType;
use Thrift\Exception\TException;
use Thrift\Exception\TProtocolException;
use Thrift\Protocol\TProtocol;
use Thrift\Protocol\TBinaryProtocolAccelerated;
use Thrift\Exception\TApplicationException;


final class SuspiciousRestaurantConst {
  const STATUS_DOING = 1;
  const STATUS_FINISHED = 2;
  static public $__names = array(
    1 => 'STATUS_DOING',
    2 => 'STATUS_FINISHED',
  );
}

final class EYESErrorCode {
  const UNKNOWN_ERROR = 0;
  const ALL_SUSPICIOUS_ORDERS_DISTRIBUTED = 1;
  const AUDITOR_AMOUNT_INVALID = 2;
  const DATABASE_ERROR = 3;
  static public $__names = array(
    0 => 'UNKNOWN_ERROR',
    1 => 'ALL_SUSPICIOUS_ORDERS_DISTRIBUTED',
    2 => 'AUDITOR_AMOUNT_INVALID',
    3 => 'DATABASE_ERROR',
  );
}

class TWalleSuspiciousOrderAmountQuery extends TBase {
  static $_TSPEC;

  public $auditor_id = null;
  public $status = null;
  public $date = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'auditor_id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'status',
          'type' => TType::I16,
          ),
        3 => array(
          'var' => 'date',
          'type' => TType::STRING,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TWalleSuspiciousOrderAmountQuery';
  }

  public function read($input)
  {
    return $this->_read('TWalleSuspiciousOrderAmountQuery', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TWalleSuspiciousOrderAmountQuery', self::$_TSPEC, $output);
  }
}

class TWalleSuspiciousOrderQuery extends TBase {
  static $_TSPEC;

  public $restaurant_id = null;
  public $date = null;
  public $offset = null;
  public $limit = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'restaurant_id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'date',
          'type' => TType::STRING,
          ),
        3 => array(
          'var' => 'offset',
          'type' => TType::I16,
          ),
        4 => array(
          'var' => 'limit',
          'type' => TType::I16,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TWalleSuspiciousOrderQuery';
  }

  public function read($input)
  {
    return $this->_read('TWalleSuspiciousOrderQuery', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TWalleSuspiciousOrderQuery', self::$_TSPEC, $output);
  }
}

class TWalleSuspiciousOrder extends TBase {
  static $_TSPEC;

  public $id = null;
  public $restaurant_id = null;
  public $restaurant_name = null;
  public $total = null;
  public $user_id = null;
  public $user_name = null;
  public $ip = null;
  public $created_at = null;
  public $reasons = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'id',
          'type' => TType::I64,
          ),
        2 => array(
          'var' => 'restaurant_id',
          'type' => TType::I32,
          ),
        3 => array(
          'var' => 'restaurant_name',
          'type' => TType::STRING,
          ),
        4 => array(
          'var' => 'total',
          'type' => TType::DOUBLE,
          ),
        5 => array(
          'var' => 'user_id',
          'type' => TType::I32,
          ),
        6 => array(
          'var' => 'user_name',
          'type' => TType::STRING,
          ),
        7 => array(
          'var' => 'ip',
          'type' => TType::STRING,
          ),
        8 => array(
          'var' => 'created_at',
          'type' => TType::I64,
          ),
        9 => array(
          'var' => 'reasons',
          'type' => TType::LST,
          'etype' => TType::STRING,
          'elem' => array(
            'type' => TType::STRING,
            ),
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TWalleSuspiciousOrder';
  }

  public function read($input)
  {
    return $this->_read('TWalleSuspiciousOrder', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TWalleSuspiciousOrder', self::$_TSPEC, $output);
  }
}

class TOrderContext extends TBase {
  static $_TSPEC;

  public $restaurant_id = null;
  public $user_id = null;
  public $ip = null;
  public $device_id = null;
  public $track_id = null;
  public $total = null;
  public $subsidy_amount = null;
  public $phone_number = null;
  public $address = null;
  public $come_from = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'restaurant_id',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'user_id',
          'type' => TType::I32,
          ),
        3 => array(
          'var' => 'ip',
          'type' => TType::STRING,
          ),
        4 => array(
          'var' => 'device_id',
          'type' => TType::STRING,
          ),
        5 => array(
          'var' => 'track_id',
          'type' => TType::STRING,
          ),
        6 => array(
          'var' => 'total',
          'type' => TType::DOUBLE,
          ),
        7 => array(
          'var' => 'subsidy_amount',
          'type' => TType::DOUBLE,
          ),
        8 => array(
          'var' => 'phone_number',
          'type' => TType::STRING,
          ),
        9 => array(
          'var' => 'address',
          'type' => TType::STRING,
          ),
        10 => array(
          'var' => 'come_from',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TOrderContext';
  }

  public function read($input)
  {
    return $this->_read('TOrderContext', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TOrderContext', self::$_TSPEC, $output);
  }
}

class TRisk extends TBase {
  static $_TSPEC;

  public $description = null;
  public $value = null;
  public $decision = null;
  public $from_uuid = null;
  public $created_at = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'description',
          'type' => TType::STRING,
          ),
        2 => array(
          'var' => 'value',
          'type' => TType::DOUBLE,
          ),
        3 => array(
          'var' => 'decision',
          'type' => TType::STRING,
          ),
        4 => array(
          'var' => 'from_uuid',
          'type' => TType::STRING,
          ),
        5 => array(
          'var' => 'created_at',
          'type' => TType::I64,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TRisk';
  }

  public function read($input)
  {
    return $this->_read('TRisk', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TRisk', self::$_TSPEC, $output);
  }
}

class TOrderEvalResult extends TBase {
  static $_TSPEC;

  public $decision = null;
  public $risks = null;
  public $risk_score = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'decision',
          'type' => TType::STRING,
          ),
        2 => array(
          'var' => 'risks',
          'type' => TType::LST,
          'etype' => TType::STRUCT,
          'elem' => array(
            'type' => TType::STRUCT,
            'class' => '\EYES\TRisk',
            ),
          ),
        3 => array(
          'var' => 'risk_score',
          'type' => TType::DOUBLE,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TOrderEvalResult';
  }

  public function read($input)
  {
    return $this->_read('TOrderEvalResult', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TOrderEvalResult', self::$_TSPEC, $output);
  }
}

class TOrderAction extends TBase {
  static $_TSPEC;

  public $order_id = null;
  public $restaurant_id = null;
  public $user_id = null;
  public $ip = null;
  public $device_id = null;
  public $track_id = null;
  public $pay_account_id = null;
  public $total = null;
  public $subsidy_amount = null;
  public $phone_number = null;
  public $address = null;
  public $come_from = null;
  public $created_at = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'order_id',
          'type' => TType::I64,
          ),
        2 => array(
          'var' => 'restaurant_id',
          'type' => TType::I32,
          ),
        3 => array(
          'var' => 'user_id',
          'type' => TType::I32,
          ),
        4 => array(
          'var' => 'ip',
          'type' => TType::STRING,
          ),
        5 => array(
          'var' => 'device_id',
          'type' => TType::STRING,
          ),
        6 => array(
          'var' => 'track_id',
          'type' => TType::STRING,
          ),
        7 => array(
          'var' => 'pay_account_id',
          'type' => TType::STRING,
          ),
        8 => array(
          'var' => 'total',
          'type' => TType::DOUBLE,
          ),
        9 => array(
          'var' => 'subsidy_amount',
          'type' => TType::DOUBLE,
          ),
        10 => array(
          'var' => 'phone_number',
          'type' => TType::STRING,
          ),
        11 => array(
          'var' => 'address',
          'type' => TType::STRING,
          ),
        12 => array(
          'var' => 'come_from',
          'type' => TType::I32,
          ),
        13 => array(
          'var' => 'created_at',
          'type' => TType::I64,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'TOrderAction';
  }

  public function read($input)
  {
    return $this->_read('TOrderAction', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('TOrderAction', self::$_TSPEC, $output);
  }
}

class EYESUserException extends TException {
  static $_TSPEC;

  public $error_code = null;
  public $error_name = null;
  public $message = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'error_code',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'error_name',
          'type' => TType::STRING,
          ),
        3 => array(
          'var' => 'message',
          'type' => TType::STRING,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'EYESUserException';
  }

  public function read($input)
  {
    return $this->_read('EYESUserException', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('EYESUserException', self::$_TSPEC, $output);
  }
}

class EYESSystemException extends TException {
  static $_TSPEC;

  public $error_code = null;
  public $error_name = null;
  public $message = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'error_code',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'error_name',
          'type' => TType::STRING,
          ),
        3 => array(
          'var' => 'message',
          'type' => TType::STRING,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'EYESSystemException';
  }

  public function read($input)
  {
    return $this->_read('EYESSystemException', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('EYESSystemException', self::$_TSPEC, $output);
  }
}

class EYESUnknownException extends TException {
  static $_TSPEC;

  public $error_code = null;
  public $error_name = null;
  public $message = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'error_code',
          'type' => TType::I32,
          ),
        2 => array(
          'var' => 'error_name',
          'type' => TType::STRING,
          ),
        3 => array(
          'var' => 'message',
          'type' => TType::STRING,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'EYESUnknownException';
  }

  public function read($input)
  {
    return $this->_read('EYESUnknownException', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('EYESUnknownException', self::$_TSPEC, $output);
  }
}

$GLOBALS['eyes_CONSTANTS']['DEFAULT_LIST_SIZE'] = 20;

$GLOBALS['eyes_CONSTANTS']['MAX_LIST_SIZE'] = 200;


